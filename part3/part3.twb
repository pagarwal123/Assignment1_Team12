<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='notatfive' inline='true' name='federated.00dn9o11pmptox14jdij70me8g92' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2013-2014' name='textscan.1ce80ri1nlpo3y1gnkhgz1f9l3e0'>
            <connection class='textscan' directory='C:/Users/Yalin/Desktop/ADS_Assignment1_team12/part3' filename='2013-2014.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[2013-2014.csv].[ID_RSSD]' />
              <expression op='[All Part Three Data.csv].[ID_RSSD]' />
            </expression>
          </clause>
          <relation connection='textscan.1ce80ri1nlpo3y1gnkhgz1f9l3e0' name='2013-2014.csv' table='[2013-2014#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='string' name='NAME' ordinal='0' />
              <column datatype='integer' name='ID_RSSD' ordinal='1' />
              <column datatype='real' name='change(2013-2014)' ordinal='2' />
              <column datatype='integer' name='RISKM350(2013)' ordinal='3' />
              <column datatype='integer' name='RISKM350(2014)' ordinal='4' />
              <column datatype='integer' name='RISKM362(2013)' ordinal='5' />
              <column datatype='integer' name='RISKM362(2014)' ordinal='6' />
              <column datatype='integer' name='RISKM370(2013)' ordinal='7' />
              <column datatype='integer' name='RISKM370(2014)' ordinal='8' />
              <column datatype='integer' name='RISKM376(2013)' ordinal='9' />
              <column datatype='integer' name='RISKM376(2014)' ordinal='10' />
              <column datatype='real' name='RISKM390(2013)' ordinal='11' />
              <column datatype='real' name='RISKM390(2014)' ordinal='12' />
              <column datatype='integer' name='RISKM405(2013)' ordinal='13' />
              <column datatype='integer' name='RISKM405(2014)' ordinal='14' />
              <column datatype='integer' name='RISKM408(2013)' ordinal='15' />
              <column datatype='integer' name='RISKM408(2014)' ordinal='16' />
              <column datatype='integer' name='RISKM411(2013)' ordinal='17' />
              <column datatype='integer' name='RISKM411(2014)' ordinal='18' />
              <column datatype='integer' name='RISKN255(2013)' ordinal='19' />
              <column datatype='integer' name='RISKN255(2014)' ordinal='20' />
              <column datatype='integer' name='RISKG506(2013)' ordinal='21' />
              <column datatype='integer' name='RISKG506(2014)' ordinal='22' />
              <column datatype='integer' name='RISKM422(2013)' ordinal='23' />
              <column datatype='integer' name='RISKM422(2014)' ordinal='24' />
              <column datatype='integer' name='RISKM426(2013)' ordinal='25' />
              <column datatype='integer' name='RISKM426(2014)' ordinal='26' />
              <column datatype='string' name='F28' ordinal='27' />
            </columns>
          </relation>
          <relation connection='textscan.1ce80ri1nlpo3y1gnkhgz1f9l3e0' name='All Part Three Data.csv' table='[All Part Three Data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='string' name='NAME' ordinal='28' />
              <column datatype='integer' name='ID_RSSD' ordinal='29' />
              <column datatype='integer' name='RISKM350(2012)' ordinal='30' />
              <column datatype='integer' name='RISKM350(2013)' ordinal='31' />
              <column datatype='integer' name='RISKM350(2014)' ordinal='32' />
              <column datatype='real' name='change(2012-2013)' ordinal='33' />
              <column datatype='real' name='change(2013-2014)' ordinal='34' />
              <column datatype='integer' name='RISKM362(2012)' ordinal='35' />
              <column datatype='integer' name='RISKM362(2013)' ordinal='36' />
              <column datatype='integer' name='RISKM362(2014)' ordinal='37' />
              <column datatype='integer' name='RISKM370(2012)' ordinal='38' />
              <column datatype='integer' name='RISKM370(2013)' ordinal='39' />
              <column datatype='integer' name='RISKM370(2014)' ordinal='40' />
              <column datatype='integer' name='RISKM376(2012)' ordinal='41' />
              <column datatype='integer' name='RISKM376(2013)' ordinal='42' />
              <column datatype='integer' name='RISKM376(2014)' ordinal='43' />
              <column datatype='real' name='RISKM390(2012)' ordinal='44' />
              <column datatype='real' name='RISKM390(2013)' ordinal='45' />
              <column datatype='real' name='RISKM390(2014)' ordinal='46' />
              <column datatype='integer' name='RISKM405(2012)' ordinal='47' />
              <column datatype='integer' name='RISKM405(2013)' ordinal='48' />
              <column datatype='integer' name='RISKM405(2014)' ordinal='49' />
              <column datatype='integer' name='RISKM408(2012)' ordinal='50' />
              <column datatype='integer' name='RISKM408(2013)' ordinal='51' />
              <column datatype='integer' name='RISKM408(2014)' ordinal='52' />
              <column datatype='integer' name='RISKM411(2012)' ordinal='53' />
              <column datatype='integer' name='RISKM411(2013)' ordinal='54' />
              <column datatype='integer' name='RISKM411(2014)' ordinal='55' />
              <column datatype='integer' name='RISKN255(2013)' ordinal='56' />
              <column datatype='integer' name='RISKN255(2014)' ordinal='57' />
              <column datatype='integer' name='RISKG506(2012)' ordinal='58' />
              <column datatype='integer' name='RISKG506(2013)' ordinal='59' />
              <column datatype='integer' name='RISKG506(2014)' ordinal='60' />
              <column datatype='integer' name='RISKM422(2012)' ordinal='61' />
              <column datatype='integer' name='RISKM422(2013)' ordinal='62' />
              <column datatype='integer' name='RISKM422(2014)' ordinal='63' />
              <column datatype='integer' name='RISKM426(2012)' ordinal='64' />
              <column datatype='integer' name='RISKM426(2013)' ordinal='65' />
              <column datatype='integer' name='RISKM426(2014)' ordinal='66' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[F28]' value='[2013-2014.csv].[F28]' />
          <map key='[ID_RSSD (All Part Three Data.csv)]' value='[All Part Three Data.csv].[ID_RSSD]' />
          <map key='[ID_RSSD]' value='[2013-2014.csv].[ID_RSSD]' />
          <map key='[NAME (All Part Three Data.csv)]' value='[All Part Three Data.csv].[NAME]' />
          <map key='[NAME]' value='[2013-2014.csv].[NAME]' />
          <map key='[RISKG506(2012)]' value='[All Part Three Data.csv].[RISKG506(2012)]' />
          <map key='[RISKG506(2013) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKG506(2013)]' />
          <map key='[RISKG506(2013)]' value='[2013-2014.csv].[RISKG506(2013)]' />
          <map key='[RISKG506(2014) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKG506(2014)]' />
          <map key='[RISKG506(2014)]' value='[2013-2014.csv].[RISKG506(2014)]' />
          <map key='[RISKM350(2012)]' value='[All Part Three Data.csv].[RISKM350(2012)]' />
          <map key='[RISKM350(2013) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM350(2013)]' />
          <map key='[RISKM350(2013)]' value='[2013-2014.csv].[RISKM350(2013)]' />
          <map key='[RISKM350(2014) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM350(2014)]' />
          <map key='[RISKM350(2014)]' value='[2013-2014.csv].[RISKM350(2014)]' />
          <map key='[RISKM362(2012)]' value='[All Part Three Data.csv].[RISKM362(2012)]' />
          <map key='[RISKM362(2013) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM362(2013)]' />
          <map key='[RISKM362(2013)]' value='[2013-2014.csv].[RISKM362(2013)]' />
          <map key='[RISKM362(2014) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM362(2014)]' />
          <map key='[RISKM362(2014)]' value='[2013-2014.csv].[RISKM362(2014)]' />
          <map key='[RISKM370(2012)]' value='[All Part Three Data.csv].[RISKM370(2012)]' />
          <map key='[RISKM370(2013) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM370(2013)]' />
          <map key='[RISKM370(2013)]' value='[2013-2014.csv].[RISKM370(2013)]' />
          <map key='[RISKM370(2014) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM370(2014)]' />
          <map key='[RISKM370(2014)]' value='[2013-2014.csv].[RISKM370(2014)]' />
          <map key='[RISKM376(2012)]' value='[All Part Three Data.csv].[RISKM376(2012)]' />
          <map key='[RISKM376(2013) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM376(2013)]' />
          <map key='[RISKM376(2013)]' value='[2013-2014.csv].[RISKM376(2013)]' />
          <map key='[RISKM376(2014) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM376(2014)]' />
          <map key='[RISKM376(2014)]' value='[2013-2014.csv].[RISKM376(2014)]' />
          <map key='[RISKM390(2012)]' value='[All Part Three Data.csv].[RISKM390(2012)]' />
          <map key='[RISKM390(2013) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM390(2013)]' />
          <map key='[RISKM390(2013)]' value='[2013-2014.csv].[RISKM390(2013)]' />
          <map key='[RISKM390(2014) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM390(2014)]' />
          <map key='[RISKM390(2014)]' value='[2013-2014.csv].[RISKM390(2014)]' />
          <map key='[RISKM405(2012)]' value='[All Part Three Data.csv].[RISKM405(2012)]' />
          <map key='[RISKM405(2013) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM405(2013)]' />
          <map key='[RISKM405(2013)]' value='[2013-2014.csv].[RISKM405(2013)]' />
          <map key='[RISKM405(2014) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM405(2014)]' />
          <map key='[RISKM405(2014)]' value='[2013-2014.csv].[RISKM405(2014)]' />
          <map key='[RISKM408(2012)]' value='[All Part Three Data.csv].[RISKM408(2012)]' />
          <map key='[RISKM408(2013) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM408(2013)]' />
          <map key='[RISKM408(2013)]' value='[2013-2014.csv].[RISKM408(2013)]' />
          <map key='[RISKM408(2014) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM408(2014)]' />
          <map key='[RISKM408(2014)]' value='[2013-2014.csv].[RISKM408(2014)]' />
          <map key='[RISKM411(2012)]' value='[All Part Three Data.csv].[RISKM411(2012)]' />
          <map key='[RISKM411(2013) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM411(2013)]' />
          <map key='[RISKM411(2013)]' value='[2013-2014.csv].[RISKM411(2013)]' />
          <map key='[RISKM411(2014) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM411(2014)]' />
          <map key='[RISKM411(2014)]' value='[2013-2014.csv].[RISKM411(2014)]' />
          <map key='[RISKM422(2012)]' value='[All Part Three Data.csv].[RISKM422(2012)]' />
          <map key='[RISKM422(2013) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM422(2013)]' />
          <map key='[RISKM422(2013)]' value='[2013-2014.csv].[RISKM422(2013)]' />
          <map key='[RISKM422(2014) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM422(2014)]' />
          <map key='[RISKM422(2014)]' value='[2013-2014.csv].[RISKM422(2014)]' />
          <map key='[RISKM426(2012)]' value='[All Part Three Data.csv].[RISKM426(2012)]' />
          <map key='[RISKM426(2013) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM426(2013)]' />
          <map key='[RISKM426(2013)]' value='[2013-2014.csv].[RISKM426(2013)]' />
          <map key='[RISKM426(2014) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKM426(2014)]' />
          <map key='[RISKM426(2014)]' value='[2013-2014.csv].[RISKM426(2014)]' />
          <map key='[RISKN255(2013) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKN255(2013)]' />
          <map key='[RISKN255(2013)]' value='[2013-2014.csv].[RISKN255(2013)]' />
          <map key='[RISKN255(2014) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[RISKN255(2014)]' />
          <map key='[RISKN255(2014)]' value='[2013-2014.csv].[RISKN255(2014)]' />
          <map key='[change(2012-2013)]' value='[All Part Three Data.csv].[change(2012-2013)]' />
          <map key='[change(2013-2014) (All Part Three Data.csv)]' value='[All Part Three Data.csv].[change(2013-2014)]' />
          <map key='[change(2013-2014)]' value='[2013-2014.csv].[change(2013-2014)]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID_RSSD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID_RSSD]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>ID_RSSD</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>change(2013-2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[change(2013-2014)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>change(2013-2014)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM350(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM350(2013)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM350(2013)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM350(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM350(2014)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM350(2014)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM362(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM362(2013)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM362(2013)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM362(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM362(2014)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM362(2014)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM370(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM370(2013)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM370(2013)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM370(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM370(2014)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM370(2014)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM376(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM376(2013)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM376(2013)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM376(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM376(2014)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM376(2014)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM390(2013)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RISKM390(2013)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM390(2013)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM390(2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RISKM390(2014)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM390(2014)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM405(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM405(2013)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM405(2013)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM405(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM405(2014)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM405(2014)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM408(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM408(2013)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM408(2013)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM408(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM408(2014)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM408(2014)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM411(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM411(2013)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM411(2013)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM411(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM411(2014)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM411(2014)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKN255(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKN255(2013)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKN255(2013)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKN255(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKN255(2014)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKN255(2014)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKG506(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKG506(2013)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKG506(2013)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKG506(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKG506(2014)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKG506(2014)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM422(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM422(2013)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM422(2013)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM422(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM422(2014)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM422(2014)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM426(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM426(2013)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM426(2013)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM426(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM426(2014)]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>RISKM426(2014)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F28</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F28]</local-name>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias>F28</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2013-2014.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NAME (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>NAME</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID_RSSD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID_RSSD (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>ID_RSSD</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM350(2012)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM350(2012)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM350(2012)</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM350(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM350(2013) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM350(2013)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM350(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM350(2014) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM350(2014)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>change(2012-2013)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[change(2012-2013)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>change(2012-2013)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>change(2013-2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[change(2013-2014) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>change(2013-2014)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM362(2012)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM362(2012)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM362(2012)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM362(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM362(2013) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM362(2013)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM362(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM362(2014) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM362(2014)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM370(2012)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM370(2012)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM370(2012)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM370(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM370(2013) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM370(2013)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM370(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM370(2014) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM370(2014)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM376(2012)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM376(2012)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM376(2012)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM376(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM376(2013) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM376(2013)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM376(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM376(2014) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM376(2014)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM390(2012)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RISKM390(2012)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM390(2012)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM390(2013)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RISKM390(2013) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM390(2013)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM390(2014)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RISKM390(2014) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM390(2014)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM405(2012)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM405(2012)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM405(2012)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM405(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM405(2013) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM405(2013)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM405(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM405(2014) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM405(2014)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM408(2012)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM408(2012)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM408(2012)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM408(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM408(2013) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM408(2013)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM408(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM408(2014) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM408(2014)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM411(2012)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM411(2012)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM411(2012)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM411(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM411(2013) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM411(2013)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM411(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM411(2014) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM411(2014)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKN255(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKN255(2013) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKN255(2013)</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKN255(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKN255(2014) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKN255(2014)</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKG506(2012)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKG506(2012)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKG506(2012)</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKG506(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKG506(2013) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKG506(2013)</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKG506(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKG506(2014) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKG506(2014)</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM422(2012)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM422(2012)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM422(2012)</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM422(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM422(2013) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM422(2013)</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM422(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM422(2014) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM422(2014)</remote-alias>
            <ordinal>63</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM426(2012)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM426(2012)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM426(2012)</remote-alias>
            <ordinal>64</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM426(2013)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM426(2013) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM426(2013)</remote-alias>
            <ordinal>65</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RISKM426(2014)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RISKM426(2014) (All Part Three Data.csv)]</local-name>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias>RISKM426(2014)</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[All Part Three Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;￥&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[F28]' role='dimension' type='nominal' />
      <column datatype='integer' name='[ID_RSSD (All Part Three Data.csv)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
      <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[RISKG506(2012)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKG506(2013)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKG506(2014)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM350(2012)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM350(2014)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM362(2012)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM362(2013)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM362(2014)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM370(2012)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM370(2013)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM370(2014)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM376(2012)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM376(2013)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM376(2014)]' role='measure' type='quantitative' />
      <column datatype='real' name='[RISKM390(2012)]' role='measure' type='quantitative' />
      <column datatype='real' name='[RISKM390(2013)]' role='measure' type='quantitative' />
      <column datatype='real' name='[RISKM390(2014)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM405(2012)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM405(2013)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM405(2014)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM408(2012)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM408(2013)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM408(2014)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM411(2012)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM411(2013)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM411(2014)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM422(2012)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM422(2013)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM422(2014)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM426(2012)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM426(2013)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKM426(2014)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKN255(2013)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[RISKN255(2014)]' role='measure' type='quantitative' />
      <column datatype='real' name='[change(2012-2013)]' role='measure' type='quantitative' />
      <column datatype='real' name='[change(2013-2014)]' role='measure' type='quantitative' />
      <column-instance column='[RISKM350(2013)]' derivation='Attribute' name='[attr:RISKM350(2013):qk]' pivot='key' type='quantitative' />
      <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[RISKG506(2012)]' derivation='Sum' name='[sum:RISKG506(2012):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKG506(2013)]' derivation='Sum' name='[sum:RISKG506(2013):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKG506(2014)]' derivation='Sum' name='[sum:RISKG506(2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM350(2012)]' derivation='Sum' name='[sum:RISKM350(2012):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM350(2014)]' derivation='Sum' name='[sum:RISKM350(2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM350(2014)]' derivation='Sum' name='[sum:RISKM350(2014):vtnone:qk]' pivot='key' type='quantitative' visual-totals='None' />
      <column-instance column='[RISKM362(2012)]' derivation='Sum' name='[sum:RISKM362(2012):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM362(2013)]' derivation='Sum' name='[sum:RISKM362(2013):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM362(2014)]' derivation='Sum' name='[sum:RISKM362(2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM370(2012)]' derivation='Sum' name='[sum:RISKM370(2012):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM370(2013)]' derivation='Sum' name='[sum:RISKM370(2013):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM370(2014)]' derivation='Sum' name='[sum:RISKM370(2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM376(2012)]' derivation='Sum' name='[sum:RISKM376(2012):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM376(2013)]' derivation='Sum' name='[sum:RISKM376(2013):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM376(2014)]' derivation='Sum' name='[sum:RISKM376(2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM390(2012)]' derivation='Sum' name='[sum:RISKM390(2012):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM390(2013)]' derivation='Sum' name='[sum:RISKM390(2013):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM390(2014)]' derivation='Sum' name='[sum:RISKM390(2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM405(2012)]' derivation='Sum' name='[sum:RISKM405(2012):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM405(2013)]' derivation='Sum' name='[sum:RISKM405(2013):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM405(2014)]' derivation='Sum' name='[sum:RISKM405(2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM408(2012)]' derivation='Sum' name='[sum:RISKM408(2012):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM408(2013)]' derivation='Sum' name='[sum:RISKM408(2013):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM408(2014)]' derivation='Sum' name='[sum:RISKM408(2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM411(2012)]' derivation='Sum' name='[sum:RISKM411(2012):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM411(2013)]' derivation='Sum' name='[sum:RISKM411(2013):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM411(2014)]' derivation='Sum' name='[sum:RISKM411(2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM422(2012)]' derivation='Sum' name='[sum:RISKM422(2012):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM422(2013)]' derivation='Sum' name='[sum:RISKM422(2013):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM422(2014)]' derivation='Sum' name='[sum:RISKM422(2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM426(2012)]' derivation='Sum' name='[sum:RISKM426(2012):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM426(2013)]' derivation='Sum' name='[sum:RISKM426(2013):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKM426(2014)]' derivation='Sum' name='[sum:RISKM426(2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKN255(2013)]' derivation='Sum' name='[sum:RISKN255(2013):qk]' pivot='key' type='quantitative' />
      <column-instance column='[RISKN255(2014)]' derivation='Sum' name='[sum:RISKN255(2014):qk]' pivot='key' type='quantitative' />
      <column-instance column='[change(2012-2013)]' derivation='Sum' name='[sum:change(2012-2013):qk]' pivot='key' type='quantitative' />
      <column-instance column='[change(2013-2014)]' derivation='Sum' name='[sum:change(2013-2014):qk]' pivot='key' type='quantitative' />
      <group caption='操作(NAME)' hidden='true' name='[Action (NAME)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[NAME]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.188356' measure-ordering='alphabetic' measure-percentage='0.811644' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:NAME:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;BMO FINANCIAL CORP.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;U.S. BANCORP&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BANK OF AMERICA CORPORATION&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NORTHERN TRUST CORPORATION&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;STATE STREET CORPORATION&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;JPMORGAN CHASE &amp; CO.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;COMERICA INCORPORATED&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CAPITAL ONE FINANCIAL CORPORATION&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UNIONBANCAL CORPORATION&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BANCWEST CORPORATION&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KEYCORP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ALLY FINANCIAL INC.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HUNTINGTON BANCSHARES INCORPORATED&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MORGAN STANLEY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BB&amp;T CORPORATION&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SUNTRUST BANKS, INC.                                                                                                    &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DEUTSCHE BANK TRUST CORPORATION&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DISCOVER FINANCIAL SERVICES&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HSBC NORTH AMERICA HOLDINGS INC.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;M&amp;T BANK CORPORATION&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;WELLS FARGO &amp; COMPANY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BBVA COMPASS BANCSHARES, INC.                                                                                           &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TD BANK US HOLDING COMPANY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RBS CITIZENS FINANCIAL GROUP, INC.                                                                                      &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FIFTH THIRD BANCORP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CITIGROUP INC.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ZIONS BANCORPORATION&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AMERICAN EXPRESS COMPANY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;REGIONS FINANCIAL CORPORATION&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2012-2013):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2012):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2012):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2012):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2012):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2012):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2012):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2012):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2012):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2012):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKN255(2013):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2014):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2014):vtnone:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[attr:RISKM350(2013):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2012):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2013):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2014):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2014):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2014):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2014):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2014):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2014):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2014):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2014):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2014):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[diff:sum:change(2013-2014):qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[diff:sum:change(2013-2014):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[pcdf:sum:change(2013-2014):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2013):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2013):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2013):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2013):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2013):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2013):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2013):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2013):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2013):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKN255(2014):qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2014):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;美国&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='1.a. 2012 and 2013 Values: Total Exposures(millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>2012 and 2013 Values: Total Exposures(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2012)]' derivation='Sum' name='[sum:RISKM350(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[Action (NAME)]'>
            <groupfilter function='level-members' level='[NAME]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[Action (NAME)]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. 2012-2013 Values: Total Exposures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>2012-2013 Values: Total Exposures</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2012)]' derivation='Sum' name='[sum:RISKM350(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. 2012-2013 Year on Year Precent Change: Total Exposures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>2012-1013YOY Percent Change: Total Exposures</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column datatype='real' name='[change(2012-2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2012)]' derivation='Sum' name='[sum:RISKM350(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[change(2012-2013)]' derivation='Sum' name='[sum:change(2012-2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2012-2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]' direction='DESC' using='[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]' />
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2012-2013):qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. 2012-2013 Year-On-YearPercentChange:Total Exposures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>2012-2013 YOY Percent Change: Total Exposures</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='real' name='[change(2012-2013)]' role='measure' type='quantitative' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[change(2012-2013)]' derivation='Sum' name='[sum:change(2012-2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2012-2013):qk]</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph  10(2012-2013)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph10(2012-2013)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKG506(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKG506(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKG506(2012)]' derivation='Sum' name='[sum:RISKG506(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKG506(2013)]' derivation='Sum' name='[sum:RISKG506(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph  10: Level 3 Assets 2012-2013 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph10: Level3 Assets 2012-2013</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKG506(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKG506(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKG506(2012)]' derivation='Sum' name='[sum:RISKG506(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKG506(2013)]' derivation='Sum' name='[sum:RISKG506(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 11(2012-2013)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph11(2012-2013)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM422(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM422(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM422(2012)]' derivation='Sum' name='[sum:RISKM422(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM422(2013)]' derivation='Sum' name='[sum:RISKM422(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 11: Cross-Jurisdictional Claims 2012-2013 (millons of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph11: Cross-Jurisdictional Claims 2012-2013(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM422(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM422(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM422(2012)]' derivation='Sum' name='[sum:RISKM422(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM422(2013)]' derivation='Sum' name='[sum:RISKM422(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 12(2012-2013)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph12(2012-2013)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM426(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM426(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM426(2012)]' derivation='Sum' name='[sum:RISKM426(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM426(2013)]' derivation='Sum' name='[sum:RISKM426(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 12: Cross-Jurisdictional Liabilities 2012-2013 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph12: Cross-Jurisdictional Liabilities 2012-2013(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM426(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM426(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM426(2012)]' derivation='Sum' name='[sum:RISKM426(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM426(2013)]' derivation='Sum' name='[sum:RISKM426(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 2: Intra-Financial System Assets 2012-2013 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph2: Intra-Financial System Assets2012-2013(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM362(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM362(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM362(2012)]' derivation='Sum' name='[sum:RISKM362(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM362(2013)]' derivation='Sum' name='[sum:RISKM362(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 3: Intra-Financial System Liabilities 2012-2013 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph3:Intra-Financial System Liabilities 2012-2013(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM370(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM370(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM370(2012)]' derivation='Sum' name='[sum:RISKM370(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM370(2013)]' derivation='Sum' name='[sum:RISKM370(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 4 (2012-2013)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph4(2012-2013)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM376(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM376(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM376(2012)]' derivation='Sum' name='[sum:RISKM376(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM376(2013)]' derivation='Sum' name='[sum:RISKM376(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 4: Securities Outstanding 2012-2013 (millions of USD) '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph4: Securities Outstanding 2012-2013(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM376(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM376(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM376(2012)]' derivation='Sum' name='[sum:RISKM376(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM376(2013)]' derivation='Sum' name='[sum:RISKM376(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 5(2012-2013)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph5(2012-2013)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='real' name='[RISKM390(2012)]' role='measure' type='quantitative' />
            <column datatype='real' name='[RISKM390(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM390(2012)]' derivation='Sum' name='[sum:RISKM390(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM390(2013)]' derivation='Sum' name='[sum:RISKM390(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 5: Payments 2012-2013 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph5: Payments2012-2013(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='real' name='[RISKM390(2012)]' role='measure' type='quantitative' />
            <column datatype='real' name='[RISKM390(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM390(2012)]' derivation='Sum' name='[sum:RISKM390(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM390(2013)]' derivation='Sum' name='[sum:RISKM390(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 6(2012-2013)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph6(2012-2013)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM405(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM405(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM405(2012)]' derivation='Sum' name='[sum:RISKM405(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM405(2013)]' derivation='Sum' name='[sum:RISKM405(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 6: Assets Under Custody 2012-2013 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph6: Assets Under Custody 2012-2013(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM405(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM405(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM405(2012)]' derivation='Sum' name='[sum:RISKM405(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM405(2013)]' derivation='Sum' name='[sum:RISKM405(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 7(2012-2013)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph7(2012-2013)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM408(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM408(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM408(2012)]' derivation='Sum' name='[sum:RISKM408(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM408(2013)]' derivation='Sum' name='[sum:RISKM408(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ID_RSSD:ok]' />
              <groupfilter function='member' level='[none:ID_RSSD:ok]' member='1111435' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 7: Underwriting 2012-2013(millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph7: Underwriting 2012-2013(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM408(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM408(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM408(2012)]' derivation='Sum' name='[sum:RISKM408(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM408(2013)]' derivation='Sum' name='[sum:RISKM408(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ID_RSSD:ok]' />
              <groupfilter function='member' level='[none:ID_RSSD:ok]' member='1111435' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 8(2012-2013)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph8(2012-2013)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM411(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM411(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM411(2012)]' derivation='Sum' name='[sum:RISKM411(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM411(2013)]' derivation='Sum' name='[sum:RISKM411(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph 8: OTC Derivatives 2012-2013 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph8: OTC Derivatives 2012-2013(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM411(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM411(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM411(2012)]' derivation='Sum' name='[sum:RISKM411(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM411(2013)]' derivation='Sum' name='[sum:RISKM411(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph1:totalExposure(2012-2013'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph1(2012-2013)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2012)]' derivation='Sum' name='[sum:RISKM350(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]' value='8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph1:totalExposure(2012-2013)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph1: Total Exposure(2012-2013)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2012)]' derivation='Sum' name='[sum:RISKM350(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph2 (2012-2013)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph2(2012-2013)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM362(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM362(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM362(2012)]' derivation='Sum' name='[sum:RISKM362(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM362(2013)]' derivation='Sum' name='[sum:RISKM362(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.a. Graph3 (2012-2013)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph3(2012-2013)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM370(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM370(2013)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM370(2012)]' derivation='Sum' name='[sum:RISKM370(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM370(2013)]' derivation='Sum' name='[sum:RISKM370(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2013):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.b Graph 9(2013-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph9(2013-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKN255(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKN255(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKN255(2013)]' derivation='Sum' name='[sum:RISKN255(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKN255(2014)]' derivation='Sum' name='[sum:RISKN255(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKN255(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKN255(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.b Graph 9: Trading and AFS Securities 2013-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph9: Trending and AFS Securities 2013-2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKN255(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKN255(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKN255(2013)]' derivation='Sum' name='[sum:RISKN255(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKN255(2014)]' derivation='Sum' name='[sum:RISKN255(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKN255(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKN255(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;ALLY FINANCIAL INC.&quot;' function='range' level='[none:NAME:nk]' to='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. 2013 and 2014 Values: Total Exposures(millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>2013 and 2014 Values: Total Exposures(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2014)]' role='measure' type='quantitative' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2014)]' derivation='Sum' name='[sum:RISKM350(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;ALLY FINANCIAL INC.&quot;' function='range' level='[none:NAME:nk]' to='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. 2013 and 2014 Values: Total Exposures(millions of USD) (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>2013 and 2014 Values: Total Exposures(millions of USD)(2)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2014)]' role='measure' type='quantitative' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2014)]' derivation='Sum' name='[sum:RISKM350(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;ALLY FINANCIAL INC.&quot;' function='range' level='[none:NAME:nk]' to='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. 2013-2014 Values: Total Exposures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>2013-2014 Values: Total Exposures</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2014)]' derivation='Sum' name='[sum:RISKM350(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;ALLY FINANCIAL INC.&quot;' function='range' level='[none:NAME:nk]' to='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' value='173' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. 2013-2014 Year on Year Precent Change: Total Exposures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>2013-2014YOY Percent Change: Total Exposures</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2014)]' role='measure' type='quantitative' />
            <column datatype='real' name='[change(2013-2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2014)]' derivation='Sum' name='[sum:RISKM350(2014):qk]' pivot='key' type='quantitative' />
            <column-instance column='[change(2013-2014)]' derivation='Sum' name='[sum:change(2013-2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2014):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;ALLY FINANCIAL INC.&quot;' function='range' level='[none:NAME:nk]' to='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' value='137' />
            <format attr='text-format' field='[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. 2013-2014 Year-On-YearPercentChange:Total Exposures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>2013-2014 YOY Percent Change: Total Exposures</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='real' name='[change(2013-2014)]' role='measure' type='quantitative' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[change(2013-2014)]' derivation='Sum' name='[sum:change(2013-2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]' included-values='non-null' />
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#666666' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;BANK OF AMERICA CORPORATION&quot;</value>
                <value>0.042516480000000002</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;JPMORGAN CHASE &amp; CO.&quot;</value>
                <value>0.048622686999999998</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;</value>
                <value>0.021885135</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;</value>
                <value>-0.022076044999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;STATE STREET CORPORATION&quot;</value>
                <value>-0.15405956900000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;WELLS FARGO &amp; COMPANY&quot;</value>
                <value>0.117497093</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;MORGAN STANLEY&quot;</value>
                <value>-0.001163301</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph  10(2013-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph10(2013-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKG506(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKG506(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKG506(2013)]' derivation='Sum' name='[sum:RISKG506(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKG506(2014)]' derivation='Sum' name='[sum:RISKG506(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph  10: Level 3 Assets 2013-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph10: Level 3 Assets 2013-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKG506(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKG506(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKG506(2013)]' derivation='Sum' name='[sum:RISKG506(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKG506(2014)]' derivation='Sum' name='[sum:RISKG506(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ALLY FINANCIAL INC.&quot;' />
              <groupfilter from='&quot;BANCWEST CORPORATION&quot;' function='range' level='[none:NAME:nk]' to='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 11(2013-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph11(2013-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM422(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM422(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM422(2013)]' derivation='Sum' name='[sum:RISKM422(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM422(2014)]' derivation='Sum' name='[sum:RISKM422(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 11: Cross-Jurisdictional Claims 2013-2014 (millons of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph11: Cross-Jurisdictional Claims 2013-2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM422(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM422(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM422(2013)]' derivation='Sum' name='[sum:RISKM422(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM422(2014)]' derivation='Sum' name='[sum:RISKM422(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;ALLY FINANCIAL INC.&quot;' function='range' level='[none:NAME:nk]' to='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 12(2013-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph12(2013-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM426(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM426(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM426(2013)]' derivation='Sum' name='[sum:RISKM426(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM426(2014)]' derivation='Sum' name='[sum:RISKM426(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 12: Cross-Jurisdictional Liabilities 2013-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph12: Cross-Jurisdictional Liabilities 2013-2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM426(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM426(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM426(2013)]' derivation='Sum' name='[sum:RISKM426(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM426(2014)]' derivation='Sum' name='[sum:RISKM426(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;ALLY FINANCIAL INC.&quot;' function='range' level='[none:NAME:nk]' to='&quot;HSBC NORTH AMERICA HOLDINGS INC.&quot;' />
              <groupfilter from='&quot;JPMORGAN CHASE &amp; CO.&quot;' function='range' level='[none:NAME:nk]' to='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 2: Intra-Financial System Assets 2013-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph2: Intra-Financial System Assets 2013-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM362(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM362(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM362(2013)]' derivation='Sum' name='[sum:RISKM362(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM362(2014)]' derivation='Sum' name='[sum:RISKM362(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;ALLY FINANCIAL INC.&quot;' function='range' level='[none:NAME:nk]' to='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 3: Intra-Financial System Liabilities 2013-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph3: Intra-Financial System Liabilities 2013-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM370(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM370(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM370(2013)]' derivation='Sum' name='[sum:RISKM370(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM370(2014)]' derivation='Sum' name='[sum:RISKM370(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;ALLY FINANCIAL INC.&quot;' function='range' level='[none:NAME:nk]' to='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 4 (2013-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph4(2013-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM376(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM376(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM376(2013)]' derivation='Sum' name='[sum:RISKM376(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM376(2014)]' derivation='Sum' name='[sum:RISKM376(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 4: Securities Outstanding 2013-2014 (millions of USD) '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph4: Secirities Outstanding 2013-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM376(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM376(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM376(2013)]' derivation='Sum' name='[sum:RISKM376(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM376(2014)]' derivation='Sum' name='[sum:RISKM376(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;ALLY FINANCIAL INC.&quot;' function='range' level='[none:NAME:nk]' to='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 5(2013-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph5(2013-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='real' name='[RISKM390(2013)]' role='measure' type='quantitative' />
            <column datatype='real' name='[RISKM390(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM390(2013)]' derivation='Sum' name='[sum:RISKM390(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM390(2014)]' derivation='Sum' name='[sum:RISKM390(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 5: Payments 2013-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph5: Payments 2013-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='real' name='[RISKM390(2013)]' role='measure' type='quantitative' />
            <column datatype='real' name='[RISKM390(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM390(2013)]' derivation='Sum' name='[sum:RISKM390(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM390(2014)]' derivation='Sum' name='[sum:RISKM390(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;ALLY FINANCIAL INC.&quot;' function='range' level='[none:NAME:nk]' to='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 6(2013-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph6(2013-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM405(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM405(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM405(2013)]' derivation='Sum' name='[sum:RISKM405(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM405(2014)]' derivation='Sum' name='[sum:RISKM405(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 6: Assets Under Custody 2013-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph6: Assets Under Custody 2013-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM405(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM405(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM405(2013)]' derivation='Sum' name='[sum:RISKM405(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM405(2014)]' derivation='Sum' name='[sum:RISKM405(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;BANCWEST CORPORATION&quot;' function='range' level='[none:NAME:nk]' to='&quot;COMERICA INCORPORATED&quot;' />
              <groupfilter from='&quot;FIFTH THIRD BANCORP&quot;' function='range' level='[none:NAME:nk]' to='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter from='&quot;STATE STREET CORPORATION&quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 7(2013-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph7(2013-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM408(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM408(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM408(2013)]' derivation='Sum' name='[sum:RISKM408(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM408(2014)]' derivation='Sum' name='[sum:RISKM408(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ID_RSSD:ok]' />
              <groupfilter function='member' level='[none:ID_RSSD:ok]' member='1111435' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 7: Underwriting 2013-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph7: Underwriting 2013-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM408(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM408(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM408(2013)]' derivation='Sum' name='[sum:RISKM408(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM408(2014)]' derivation='Sum' name='[sum:RISKM408(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ID_RSSD:ok]' />
              <groupfilter function='member' level='[none:ID_RSSD:ok]' member='1111435' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;BANK OF AMERICA CORPORATION&quot;' function='range' level='[none:NAME:nk]' to='&quot;COMERICA INCORPORATED&quot;' />
              <groupfilter from='&quot;FIFTH THIRD BANCORP&quot;' function='range' level='[none:NAME:nk]' to='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;REGIONS FINANCIAL CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;SUNTRUST BANKS, INC.                                                                                                    &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 8(2013-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph8(2013-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM411(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM411(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM411(2013)]' derivation='Sum' name='[sum:RISKM411(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM411(2014)]' derivation='Sum' name='[sum:RISKM411(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph 8: OTC Derivatives 2013-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph8: OTC Derivatives 2013-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM411(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM411(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM411(2013)]' derivation='Sum' name='[sum:RISKM411(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM411(2014)]' derivation='Sum' name='[sum:RISKM411(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;ALLY FINANCIAL INC.&quot;' function='range' level='[none:NAME:nk]' to='&quot;RBS CITIZENS FINANCIAL GROUP, INC.                                                                                      &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph1 (2013-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph1(2013-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2014)]' derivation='Sum' name='[sum:RISKM350(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph1:totalExposure(2013-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph1: Total Exposure(2013-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2014)]' derivation='Sum' name='[sum:RISKM350(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;ALLY FINANCIAL INC.&quot;' function='range' level='[none:NAME:nk]' to='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph2 (2013-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph2(2013-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM362(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM362(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM362(2013)]' derivation='Sum' name='[sum:RISKM362(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM362(2014)]' derivation='Sum' name='[sum:RISKM362(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='1.b. Graph3 (2013-2014'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph3(2013-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM370(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM370(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM370(2013)]' derivation='Sum' name='[sum:RISKM370(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM370(2014)]' derivation='Sum' name='[sum:RISKM370(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='3. 2012 to 2014 Values:Total Exposures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>2012 to 2014 Values: Total Exposures</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2014)]' role='measure' type='quantitative' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2012)]' derivation='Sum' name='[sum:RISKM350(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2014)]' derivation='Sum' name='[sum:RISKM350(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' value='C1033%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]' value='C2052%' />
            <format attr='text-format' field='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='3. 2012-2014 Values: Total Exposures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>2012-2104 Value: Total Exposures</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2012)]' derivation='Sum' name='[sum:RISKM350(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2014)]' derivation='Sum' name='[sum:RISKM350(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='3. 2012-2014 Year on Year Precent Change: Total Exposures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>2012-2014 Year on Year Precent Change: Total Exposure</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='real' name='[change(2012-2013)]' role='measure' type='quantitative' />
            <column datatype='real' name='[change(2013-2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[change(2012-2013)]' derivation='Sum' name='[sum:change(2012-2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[change(2013-2014)]' derivation='Sum' name='[sum:change(2013-2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2012-2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]' direction='ASC' using='[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2012-2013):qk]' />
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' value='n#,##0.0000;-#,##0.0000' />
            <format attr='text-format' field='[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2012-2013):qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='3. 2013-2014 Year-On-YearPercentChange:Total Exposures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>2013-2014 YOY Percent Change: Total Exposures</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='real' name='[change(2012-2013)]' role='measure' type='quantitative' />
            <column datatype='real' name='[change(2013-2014)]' role='measure' type='quantitative' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[change(2012-2013)]' derivation='Sum' name='[sum:change(2012-2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[change(2013-2014)]' derivation='Sum' name='[sum:change(2013-2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2012-2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]' included-values='non-null' />
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2013-2014):qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph  10(2012-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph10(2012-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKG506(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKG506(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKG506(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKG506(2012)]' derivation='Sum' name='[sum:RISKG506(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKG506(2013)]' derivation='Sum' name='[sum:RISKG506(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKG506(2014)]' derivation='Sum' name='[sum:RISKG506(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph  10: Level 3 Assets 2012-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph10: Level 3 Assets 2012-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKG506(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKG506(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKG506(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKG506(2012)]' derivation='Sum' name='[sum:RISKG506(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKG506(2013)]' derivation='Sum' name='[sum:RISKG506(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKG506(2014)]' derivation='Sum' name='[sum:RISKG506(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKG506(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 11(2012-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph11(2012-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM422(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM422(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM422(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM422(2012)]' derivation='Sum' name='[sum:RISKM422(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM422(2013)]' derivation='Sum' name='[sum:RISKM422(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM422(2014)]' derivation='Sum' name='[sum:RISKM422(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 11: Cross-Jurisdictional Claims 2012-2014 (millons of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph 11: Cross-Jurisdictional Claims 2012-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM422(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM422(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM422(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM422(2012)]' derivation='Sum' name='[sum:RISKM422(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM422(2013)]' derivation='Sum' name='[sum:RISKM422(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM422(2014)]' derivation='Sum' name='[sum:RISKM422(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM422(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 12(2012-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph12(2012-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM426(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM426(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM426(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM426(2012)]' derivation='Sum' name='[sum:RISKM426(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM426(2013)]' derivation='Sum' name='[sum:RISKM426(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM426(2014)]' derivation='Sum' name='[sum:RISKM426(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 12: Cross-Jurisdictional Liabilities 2012-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph12: Cross-Jurisdictional Liabilities 2012-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM426(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM426(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM426(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM426(2012)]' derivation='Sum' name='[sum:RISKM426(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM426(2013)]' derivation='Sum' name='[sum:RISKM426(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM426(2014)]' derivation='Sum' name='[sum:RISKM426(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM426(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;ALLY FINANCIAL INC.&quot;' function='range' level='[none:NAME:nk]' to='&quot;HSBC NORTH AMERICA HOLDINGS INC.&quot;' />
              <groupfilter from='&quot;JPMORGAN CHASE &amp; CO.&quot;' function='range' level='[none:NAME:nk]' to='&quot;RBS CITIZENS FINANCIAL GROUP, INC.                                                                                      &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 2: Intra-Financial System Assets 2012-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph2: Intra-Financial System Assets 2012-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM362(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM362(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM362(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM362(2012)]' derivation='Sum' name='[sum:RISKM362(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM362(2013)]' derivation='Sum' name='[sum:RISKM362(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM362(2014)]' derivation='Sum' name='[sum:RISKM362(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 3: Intra-Financial System Liabilities 2012-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph3: Intra-Financial System Liabilities 2012-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM370(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM370(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM370(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM370(2012)]' derivation='Sum' name='[sum:RISKM370(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM370(2013)]' derivation='Sum' name='[sum:RISKM370(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM370(2014)]' derivation='Sum' name='[sum:RISKM370(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 4 (2012-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph4(2012-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM376(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM376(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM376(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM376(2012)]' derivation='Sum' name='[sum:RISKM376(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM376(2013)]' derivation='Sum' name='[sum:RISKM376(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM376(2014)]' derivation='Sum' name='[sum:RISKM376(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 4: Securities Outstanding 2012-2014 (millions of USD) '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Securities Outstanding 2012-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM376(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM376(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM376(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM376(2012)]' derivation='Sum' name='[sum:RISKM376(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM376(2013)]' derivation='Sum' name='[sum:RISKM376(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM376(2014)]' derivation='Sum' name='[sum:RISKM376(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM376(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 5(2012-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph5(2012-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='real' name='[RISKM390(2012)]' role='measure' type='quantitative' />
            <column datatype='real' name='[RISKM390(2013)]' role='measure' type='quantitative' />
            <column datatype='real' name='[RISKM390(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM390(2012)]' derivation='Sum' name='[sum:RISKM390(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM390(2013)]' derivation='Sum' name='[sum:RISKM390(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM390(2014)]' derivation='Sum' name='[sum:RISKM390(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 5: Payments 2012-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph5: Payments 2012-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='real' name='[RISKM390(2012)]' role='measure' type='quantitative' />
            <column datatype='real' name='[RISKM390(2013)]' role='measure' type='quantitative' />
            <column datatype='real' name='[RISKM390(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM390(2012)]' derivation='Sum' name='[sum:RISKM390(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM390(2013)]' derivation='Sum' name='[sum:RISKM390(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM390(2014)]' derivation='Sum' name='[sum:RISKM390(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM390(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 6(2012-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph6(2012-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM405(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM405(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM405(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM405(2012)]' derivation='Sum' name='[sum:RISKM405(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM405(2013)]' derivation='Sum' name='[sum:RISKM405(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM405(2014)]' derivation='Sum' name='[sum:RISKM405(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 6: Assets Under Custody 2012-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph6: Assets Under Custody 2012-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM405(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM405(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM405(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM405(2012)]' derivation='Sum' name='[sum:RISKM405(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM405(2013)]' derivation='Sum' name='[sum:RISKM405(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM405(2014)]' derivation='Sum' name='[sum:RISKM405(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM405(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 7(2012-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph7(2012-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM408(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM408(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM408(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM408(2012)]' derivation='Sum' name='[sum:RISKM408(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM408(2013)]' derivation='Sum' name='[sum:RISKM408(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM408(2014)]' derivation='Sum' name='[sum:RISKM408(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ID_RSSD:ok]' />
              <groupfilter function='member' level='[none:ID_RSSD:ok]' member='1111435' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 7: Underwriting 2012-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph7: Underwriting 2012-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM408(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM408(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM408(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM408(2012)]' derivation='Sum' name='[sum:RISKM408(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM408(2013)]' derivation='Sum' name='[sum:RISKM408(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM408(2014)]' derivation='Sum' name='[sum:RISKM408(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM408(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 8(2012-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph8(2012-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM411(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM411(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM411(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM411(2012)]' derivation='Sum' name='[sum:RISKM411(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM411(2013)]' derivation='Sum' name='[sum:RISKM411(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM411(2014)]' derivation='Sum' name='[sum:RISKM411(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 8: OTC Derivatives 2012-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph8: OTC Derivatives 2012-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM411(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM411(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM411(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM411(2012)]' derivation='Sum' name='[sum:RISKM411(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM411(2013)]' derivation='Sum' name='[sum:RISKM411(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM411(2014)]' derivation='Sum' name='[sum:RISKM411(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM411(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 9(2013-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph9(2013-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKN255(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKN255(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKN255(2013)]' derivation='Sum' name='[sum:RISKN255(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKN255(2014)]' derivation='Sum' name='[sum:RISKN255(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKN255(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKN255(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph 9: Trading and AFS Securities 2013-2014 (millions of USD)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph9: Trading and AFS Securities 2013-2014(millions of USD)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKN255(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKN255(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKN255(2013)]' derivation='Sum' name='[sum:RISKN255(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKN255(2014)]' derivation='Sum' name='[sum:RISKN255(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKN255(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKN255(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;ALLY FINANCIAL INC.&quot;' function='range' level='[none:NAME:nk]' to='&quot;PNC FINANCIAL SERVICES GROUP, INC., THE                                                                                 &quot;' />
              <groupfilter from='&quot;SANTANDER HOLDINGS USA, INC.                                                                                            &quot;' function='range' level='[none:NAME:nk]' to='&quot;U.S. BANCORP&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;ZIONS BANCORPORATION&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph1(2012-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph1(2012-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2012)]' derivation='Sum' name='[sum:RISKM350(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2014)]' derivation='Sum' name='[sum:RISKM350(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph1:totalExposure(2012-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph1: Total Exposure(2012-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2012)]' derivation='Sum' name='[sum:RISKM350(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2014)]' derivation='Sum' name='[sum:RISKM350(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ID_RSSD:ok]' />
              <groupfilter function='member' level='[none:ID_RSSD:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF AMERICA CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;JPMORGAN CHASE &amp; CO.&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;STATE STREET CORPORATION&quot;' />
              <groupfilter function='member' level='[none:NAME:nk]' member='&quot;WELLS FARGO &amp; COMPANY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</rows>
        <cols>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / ([federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk] / [federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]))</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph2 (2012-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph2(2012-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM362(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM362(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM362(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM362(2012)]' derivation='Sum' name='[sum:RISKM362(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM362(2013)]' derivation='Sum' name='[sum:RISKM362(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM362(2014)]' derivation='Sum' name='[sum:RISKM362(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM362(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' value='110' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='3. Graph3 (2012-2014)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='8'>Graph3(2012-2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='integer' name='[ID_RSSD]' role='dimension' type='ordinal' />
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM370(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM370(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM370(2014)]' role='measure' type='quantitative' />
            <column-instance column='[ID_RSSD]' derivation='None' name='[none:ID_RSSD:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM370(2012)]' derivation='Sum' name='[sum:RISKM370(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM370(2013)]' derivation='Sum' name='[sum:RISKM370(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM370(2014)]' derivation='Sum' name='[sum:RISKM370(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2012):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM370(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok] / [federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Question2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>2012-2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2012)]' role='measure' type='quantitative' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2012)]' derivation='Sum' name='[sum:RISKM350(2012):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:NAME:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:NAME:nk]' member='%null%' />
                <groupfilter function='member' level='[none:NAME:nk]' member='&quot;MORGAN STANLEY&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]' value='C2052%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]' />
              <wedge-size column='[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]' />
              <size column='[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7691160440444946' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Question2a'>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:NAME:nk]' />
              <groupfilter function='member' level='[none:NAME:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]' />
              <text column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]' />
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Question2b'>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2014)]' role='measure' type='quantitative' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2012)]' derivation='Sum' name='[sum:RISKM350(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2014)]' derivation='Sum' name='[sum:RISKM350(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2014):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]' value='16' />
            <format attr='width' field='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]' value='16' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk] + [federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values])</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Question2c'>
      <table>
        <view>
          <datasources>
            <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
          </datasources>
          <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92'>
            <column datatype='string' name='[NAME]' role='dimension' type='nominal' />
            <column datatype='integer' name='[RISKM350(2012)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2013)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[RISKM350(2014)]' role='measure' type='quantitative' />
            <column-instance column='[NAME]' derivation='None' name='[none:NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[RISKM350(2012)]' derivation='Sum' name='[sum:RISKM350(2012):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2013)]' derivation='Sum' name='[sum:RISKM350(2013):qk]' pivot='key' type='quantitative' />
            <column-instance column='[RISKM350(2014)]' derivation='Sum' name='[sum:RISKM350(2014):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2014):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>([federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk] + ([federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk] + [federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2014):qk]))</rows>
        <cols>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='1.a. Time Series'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='46500' x='0' y='0'>
              <zone h='100000' id='1' name='1.a. 2012 and 2013 Values: Total Exposures(millions of USD)' w='46500' x='0' y='0' />
            </zone>
            <zone fixed-size='535' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='53500' x='46500' y='0'>
              <zone fixed-size='342' h='29437' id='8' is-fixed='true' name='1.a. 2012-2013 Values: Total Exposures' w='53500' x='46500' y='0'>
                <layout-cache fixed-size-w='442' type-h='fixed' type-w='fixed' />
              </zone>
              <zone fixed-size='183' h='23875' id='9' is-fixed='true' name='1.a. 2012-2013 Year on Year Precent Change: Total Exposures' w='53500' x='46500' y='29437'>
                <layout-cache fixed-size-w='540' type-h='fixed' type-w='fixed' />
              </zone>
              <zone fixed-size='130' h='17250' id='6' is-fixed='true' name='1.a. 2012 and 2013 Values: Total Exposures(millions of USD)' pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' w='53500' x='46500' y='53312' />
              <zone fixed-size='309' h='29438' id='7' is-fixed='true' name='1.a. 2012-2013 Year-On-YearPercentChange:Total Exposures' w='53500' x='46500' y='70562'>
                <layout-cache cell-count-w='7' minheight='212' non-cell-size-w='52' type-h='scalable' type-w='cell' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='1.b. Time Series'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='51200' x='0' y='0'>
              <zone h='100000' id='1' name='1.b. 2013 and 2014 Values: Total Exposures(millions of USD)' w='51200' x='0' y='0' />
            </zone>
            <zone fixed-size='488' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='48800' x='51200' y='0'>
              <zone h='8750' id='6' name='1.b. 2013 and 2014 Values: Total Exposures(millions of USD)' pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' w='48800' x='51200' y='0' />
              <zone fixed-size='285' h='36625' id='7' is-fixed='true' name='1.b. 2013-2014 Year-On-YearPercentChange:Total Exposures' w='48800' x='51200' y='8750'>
                <layout-cache cell-count-w='7' minheight='230' non-cell-size-w='65' type-h='scalable' type-w='cell' />
              </zone>
              <zone h='27062' id='8' name='1.b. 2013-2014 Values: Total Exposures' w='48800' x='51200' y='45375'>
                <layout-cache fixed-size-w='508' type-h='fixed' type-w='fixed' />
              </zone>
              <zone h='27563' id='9' name='1.b. 2013-2014 Year on Year Precent Change: Total Exposures' w='48800' x='51200' y='72437'>
                <layout-cache type-h='fixed' type-w='fixed' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='3.Time Series'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='719' h='100000' id='4' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='50000' id='1' name='1.b. 2013-2014 Year-On-YearPercentChange:Total Exposures' w='50000' x='0' y='50000' />
              <zone h='50000' id='3' name='3. 2012 to 2014 Values:Total Exposures' w='50000' x='0' y='0' />
              <zone h='50000' id='7' name='3. 2012-2014 Values: Total Exposures' w='50000' x='50000' y='0' />
              <zone h='50000' id='8' name='3. 2012-2014 Year on Year Precent Change: Total Exposures' w='50000' x='50000' y='50000' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3.2'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='50000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='50000' id='3' type='layout-basic' w='2561' x='0' y='0'>
              <zone h='50000' id='1' name='Question2' w='2561' x='0' y='0' />
            </zone>
            <zone fixed-size='615' h='50000' id='4' is-fixed='true' param='vert' type='layout-flow' w='35777' x='2561' y='0'>
              <zone h='35400' id='6' name='Question2' pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]' type='color' w='35777' x='2561' y='0' />
              <zone h='5088' id='7' name='Question2' pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]' type='size' w='35777' x='2561' y='35400' />
              <zone h='9512' id='10' name='Question2b' pane-specification-id='1' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' w='35777' x='2561' y='40488' />
            </zone>
            <zone fixed-size='1200' h='50000' id='8' is-fixed='true' name='Question2a' w='61662' x='38338' y='0'>
              <layout-cache type-h='fixed' type-w='fixed' />
            </zone>
          </zone>
          <zone h='50000' id='9' name='Question2b' w='50000' x='0' y='50000' />
          <zone h='50000' id='11' name='Question2c' w='50000' x='50000' y='50000' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard Graph 1.a'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='66619' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='1026' h='66619' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='11827' id='1' name='1.a. 2012 and 2013 Values: Total Exposures(millions of USD)' w='46716' x='0' y='6563' />
              <zone fixed-size='269' h='6563' id='4' is-fixed='true' param='vert' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='6563' id='6' name='1.a. 2012 and 2013 Values: Total Exposures(millions of USD)' pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' w='100000' x='0' y='0' />
              </zone>
              <zone h='10340' id='12' name='1.a. 2012-2013 Values: Total Exposures' w='47331' x='0' y='18390' />
              <zone h='10340' id='13' name='1.a. 2012-2013 Year on Year Precent Change: Total Exposures' w='52669' x='47331' y='18390' />
              <zone h='9315' id='14' name='1.a. Graph3 (2012-2013)' w='29261' x='53745' y='28730' />
              <zone h='7815' id='15' name='1.a. Graph 3: Intra-Financial System Liabilities 2012-2013 (millions of USD)' w='50000' x='0' y='58804' />
              <zone h='9315' id='16' name='1.a. Graph2 (2012-2013)' w='23033' x='30712' y='28730' />
              <zone h='11873' id='17' name='1.a. Graph 2: Intra-Financial System Assets 2012-2013 (millions of USD)' w='50000' x='50000' y='46931' />
              <zone fixed-size='656' h='9315' id='11' is-fixed='true' name='1.a. Graph1:totalExposure(2012-2013' w='30712' x='0' y='28730'>
                <layout-cache type-h='fixed' type-w='fixed' />
              </zone>
              <zone h='9315' id='18' name='1.a. Graph 4 (2012-2013)' w='16994' x='83006' y='28730' />
              <zone h='6394' id='23' name='1.a. Graph 6(2012-2013)' w='32444' x='25000' y='38045' />
              <zone h='6394' id='24' name='1.a. Graph 7(2012-2013)' w='21278' x='57444' y='38045' />
              <zone h='6394' id='22' name='1.a. Graph 5(2012-2013)' w='25000' x='0' y='38045' />
              <zone h='6394' id='25' name='1.a. Graph 8(2012-2013)' w='21278' x='78722' y='38045' />
              <zone h='2492' id='27' name='1.a. Graph  10(2012-2013)' w='50702' x='0' y='44439' />
              <zone h='2492' id='28' name='1.a. Graph 11(2012-2013)' w='27013' x='50702' y='44439' />
              <zone h='2492' id='29' name='1.a. Graph 12(2012-2013)' w='22285' x='77715' y='44439' />
              <zone h='11827' id='9' name='1.a. 2012-2013 Year-On-YearPercentChange:Total Exposures' w='53284' x='46716' y='6563'>
                <layout-cache type-h='fixed' type-w='cell' />
              </zone>
              <zone h='11873' id='10' name='1.a. Graph1:totalExposure(2012-2013)' w='50000' x='0' y='46931' />
              <zone h='7815' id='19' name='1.a. Graph 4: Securities Outstanding 2012-2013 (millions of USD) ' w='50000' x='50000' y='58804' />
            </zone>
          </zone>
          <zone h='9710' id='30' name='1.a. Graph 5: Payments 2012-2013 (millions of USD)' w='50000' x='0' y='66619' />
          <zone h='9710' id='31' name='1.a. Graph 6: Assets Under Custody 2012-2013 (millions of USD)' w='50000' x='50000' y='66619' />
          <zone h='9142' id='33' name='1.a. Graph 8: OTC Derivatives 2012-2013 (millions of USD)' w='50000' x='50000' y='76329' />
          <zone h='9142' id='32' name='1.a. Graph 7: Underwriting 2012-2013(millions of USD)' w='50000' x='0' y='76329' />
          <zone h='6875' id='35' name='1.a. Graph  10: Level 3 Assets 2012-2013 (millions of USD)' w='50000' x='50000' y='85471' />
          <zone h='14529' id='36' name='1.a. Graph 11: Cross-Jurisdictional Claims 2012-2013 (millons of USD)' w='50000' x='0' y='85471' />
          <zone h='7654' id='37' name='1.a. Graph 12: Cross-Jurisdictional Liabilities 2012-2013 (millions of USD)' w='50000' x='50000' y='92346' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard Graph1.b'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='14458' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='14458' id='3' type='layout-basic' w='90692' x='0' y='0'>
              <zone h='14458' id='1' name='1.b. 2013 and 2014 Values: Total Exposures(millions of USD)' w='45347' x='0' y='0' />
              <zone h='14458' id='7' name='1.b. 2013-2014 Year-On-YearPercentChange:Total Exposures' w='45345' x='45347' y='0' />
            </zone>
            <zone fixed-size='160' h='14458' id='4' is-fixed='true' param='vert' type='layout-flow' w='9308' x='90692' y='0'>
              <zone h='7742' id='6' name='1.b. 2013 and 2014 Values: Total Exposures(millions of USD)' pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' w='9308' x='90692' y='0' />
            </zone>
          </zone>
          <zone h='9001' id='8' name='1.b. 2013-2014 Values: Total Exposures' w='27573' x='0' y='14458' />
          <zone h='9001' id='9' name='1.b. 2013-2014 Year on Year Precent Change: Total Exposures' w='32419' x='27573' y='14458' />
          <zone h='9001' id='10' name='1.b. 2013 and 2014 Values: Total Exposures(millions of USD) (2)' w='40008' x='59992' y='14458' />
          <zone h='9851' id='11' name='1.b. Graph1 (2013-2014)' w='27573' x='0' y='23459' />
          <zone h='9851' id='12' name='1.b. Graph2 (2013-2014)' w='21692' x='27573' y='23459' />
          <zone h='9851' id='13' name='1.b. Graph3 (2013-2014' w='25368' x='49265' y='23459' />
          <zone h='9851' id='14' name='1.b. Graph 4 (2013-2014)' w='25367' x='74633' y='23459' />
          <zone h='11197' id='15' name='1.b. Graph 5(2013-2014)' w='27573' x='0' y='33310' />
          <zone h='11197' id='16' name='1.b. Graph 6(2013-2014)' w='21692' x='27573' y='33310' />
          <zone h='11197' id='17' name='1.b. Graph 7(2013-2014)' w='25387' x='49265' y='33310' />
          <zone h='11197' id='18' name='1.b. Graph 8(2013-2014)' w='25348' x='74652' y='33310' />
          <zone h='7017' id='19' name='1.b. Graph  10(2013-2014)' w='25000' x='25000' y='44507' />
          <zone h='7017' id='20' name='1.b. Graph 11(2013-2014)' w='25000' x='50000' y='44507' />
          <zone h='7017' id='21' name='1.b. Graph 12(2013-2014)' w='25000' x='75000' y='44507' />
          <zone h='10489' id='22' name='1.b. Graph1:totalExposure(2013-2014)' w='50000' x='0' y='51524' />
          <zone h='10489' id='23' name='1.b. Graph 2: Intra-Financial System Assets 2013-2014 (millions of USD)' w='50000' x='50000' y='51524' />
          <zone h='9284' id='24' name='1.b. Graph 3: Intra-Financial System Liabilities 2013-2014 (millions of USD)' w='50000' x='0' y='62013' />
          <zone h='9284' id='25' name='1.b. Graph 4: Securities Outstanding 2013-2014 (millions of USD) ' w='50000' x='50000' y='62013' />
          <zone h='9213' id='26' name='1.b. Graph 5: Payments 2013-2014 (millions of USD)' w='50000' x='0' y='71297' />
          <zone h='9213' id='27' name='1.b. Graph 6: Assets Under Custody 2013-2014 (millions of USD)' w='50000' x='50000' y='71297' />
          <zone h='7371' id='28' name='1.b. Graph 7: Underwriting 2013-2014 (millions of USD)' w='50000' x='0' y='80510' />
          <zone h='7371' id='29' name='1.b. Graph 8: OTC Derivatives 2013-2014 (millions of USD)' w='50000' x='50000' y='80510' />
          <zone h='6662' id='30' name='1.b. Graph  10: Level 3 Assets 2013-2014 (millions of USD)' w='50000' x='50000' y='87881' />
          <zone h='5457' id='31' name='1.b. Graph 11: Cross-Jurisdictional Claims 2013-2014 (millons of USD)' w='50000' x='0' y='94543' />
          <zone h='5457' id='32' name='1.b. Graph 12: Cross-Jurisdictional Liabilities 2013-2014 (millions of USD)' w='50000' x='50000' y='94543' />
          <zone h='7017' id='33' name='1.b Graph 9(2013-2014)' w='25000' x='0' y='44507' />
          <zone h='6662' id='34' name='1.b Graph 9: Trading and AFS Securities 2013-2014 (millions of USD)' w='50000' x='0' y='87881' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard Graph3'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='notatfive' name='federated.00dn9o11pmptox14jdij70me8g92' />
      </datasources>
      <datasource-dependencies datasource='federated.00dn9o11pmptox14jdij70me8g92' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='14458' id='5' param='horz' type='layout-flow' w='50000' x='0' y='9426'>
            <zone h='14458' id='3' type='layout-basic' w='50000' x='0' y='9426'>
              <zone h='14458' id='1' name='3. 2012 to 2014 Values:Total Exposures' w='50000' x='0' y='9426' />
            </zone>
          </zone>
          <zone h='14458' id='7' name='3. 2013-2014 Year-On-YearPercentChange:Total Exposures' w='50000' x='50000' y='9426' />
          <zone fixed-size='160' h='9426' id='4' is-fixed='true' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='9426' id='6' name='3. 2012 to 2014 Values:Total Exposures' pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' w='100000' x='0' y='0' />
          </zone>
          <zone h='9426' id='8' name='3. 2012-2014 Values: Total Exposures' w='50000' x='0' y='23884' />
          <zone h='9426' id='9' name='3. 2012-2014 Year on Year Precent Change: Total Exposures' w='25000' x='50000' y='23884' />
          <zone h='11694' id='11' name='3. Graph1(2012-2014)' w='25000' x='0' y='33310' />
          <zone h='11694' id='12' name='3. Graph3 (2012-2014)' w='25000' x='50000' y='33310' />
          <zone h='11694' id='13' name='3. Graph2 (2012-2014)' w='25000' x='25000' y='33310' />
          <zone h='11694' id='14' name='3. Graph 4 (2012-2014)' w='25000' x='75000' y='33310' />
          <zone h='9425' id='15' name='3. Graph 5(2012-2014)' w='24991' x='0' y='45004' />
          <zone h='9425' id='16' name='3. Graph 6(2012-2014)' w='25027' x='24991' y='45004' />
          <zone h='9425' id='17' name='3. Graph 7(2012-2014)' w='24991' x='50018' y='45004' />
          <zone h='9425' id='18' name='3. Graph 8(2012-2014)' w='24991' x='75009' y='45004' />
          <zone h='7513' id='19' name='3. Graph 9(2013-2014)' w='24991' x='0' y='54429' />
          <zone h='7513' id='20' name='3. Graph  10(2012-2014)' w='25027' x='24991' y='54429' />
          <zone h='7513' id='21' name='3. Graph 11(2012-2014)' w='24991' x='50018' y='54429' />
          <zone h='7513' id='22' name='3. Graph 12(2012-2014)' w='24991' x='75009' y='54429' />
          <zone h='9426' id='10' name='3. 2012-2014 Year on Year Precent Change: Total Exposures' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='filter' w='25000' x='75000' y='23884' />
          <zone h='4677' id='23' name='3. Graph1:totalExposure(2012-2014)' w='50000' x='0' y='61942' />
          <zone h='4677' id='24' name='3. Graph 2: Intra-Financial System Assets 2012-2014 (millions of USD)' w='50000' x='50000' y='61942' />
          <zone h='7229' id='25' name='3. Graph 3: Intra-Financial System Liabilities 2012-2014 (millions of USD)' w='50000' x='0' y='66619' />
          <zone h='7229' id='26' name='3. Graph 4: Securities Outstanding 2012-2014 (millions of USD) ' w='50000' x='50000' y='66619' />
          <zone h='6308' id='27' name='3. Graph 5: Payments 2012-2014 (millions of USD)' w='50000' x='0' y='73848' />
          <zone h='6308' id='28' name='3. Graph 6: Assets Under Custody 2012-2014 (millions of USD)' w='50000' x='50000' y='73848' />
          <zone h='7583' id='29' name='3. Graph 7: Underwriting 2012-2014 (millions of USD)' w='50000' x='0' y='80156' />
          <zone h='7583' id='30' name='3. Graph 8: OTC Derivatives 2012-2014 (millions of USD)' w='50000' x='50000' y='80156' />
          <zone h='7796' id='31' name='3. Graph 9: Trading and AFS Securities 2013-2014 (millions of USD)' w='50000' x='0' y='87739' />
          <zone h='7796' id='32' name='3. Graph  10: Level 3 Assets 2012-2014 (millions of USD)' w='50000' x='50000' y='87739' />
          <zone h='4465' id='33' name='3. Graph 11: Cross-Jurisdictional Claims 2012-2014 (millons of USD)' w='50000' x='0' y='95535' />
          <zone h='4465' id='34' name='3. Graph 12: Cross-Jurisdictional Liabilities 2012-2014 (millions of USD)' w='50000' x='50000' y='95535' />
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='66'>
    <window class='worksheet' name='1.a. 2012 and 2013 Values: Total Exposures(millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;BANK OF AMERICA CORPORATION&quot;</value>
                <value>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;</value>
                <value>2695636963.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;BANK OF AMERICA CORPORATION&quot;</value>
                <value>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;</value>
                <value>2777980794.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;</value>
                <value>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;</value>
                <value>409666200.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;BANK OF NEW YORK MELLON CORPORATION, THE                                                                                &quot;</value>
                <value>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;</value>
                <value>680253000.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;</value>
                <value>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;</value>
                <value>1517513700.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;</value>
                <value>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;</value>
                <value>1337411700.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;JPMORGAN CHASE &amp; CO.&quot;</value>
                <value>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;</value>
                <value>3569551800.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;JPMORGAN CHASE &amp; CO.&quot;</value>
                <value>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;</value>
                <value>3494373100.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;MORGAN STANLEY&quot;</value>
                <value>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;</value>
                <value>1282726862.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;MORGAN STANLEY&quot;</value>
                <value>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;</value>
                <value>1068551000.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;STATE STREET CORPORATION&quot;</value>
                <value>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;</value>
                <value>345428170.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;STATE STREET CORPORATION&quot;</value>
                <value>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;</value>
                <value>265741905.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;WELLS FARGO &amp; COMPANY&quot;</value>
                <value>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2013):qk]&quot;</value>
                <value>1961304700.0</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
                  <field>[federated.00dn9o11pmptox14jdij70me8g92].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;WELLS FARGO &amp; COMPANY&quot;</value>
                <value>&quot;[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]&quot;</value>
                <value>1813355400.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. 2013 and 2014 Values: Total Exposures(millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3. 2012 to 2014 Values:Total Exposures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='1.a. 2012-2013 Year-On-YearPercentChange:Total Exposures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[sum:change(2012-2013):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. 2013-2014 Year-On-YearPercentChange:Total Exposures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='3. 2013-2014 Year-On-YearPercentChange:Total Exposures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3. 2012-2014 Values: Total Exposures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.a. 2012-2013 Values: Total Exposures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. 2013-2014 Values: Total Exposures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.a. 2012-2013 Year on Year Precent Change: Total Exposures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. 2013-2014 Year on Year Precent Change: Total Exposures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3. 2012-2014 Year on Year Precent Change: Total Exposures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. 2013 and 2014 Values: Total Exposures(millions of USD) (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='1.a. Time Series'>
      <viewpoints>
        <viewpoint name='1.a. 2012 and 2013 Values: Total Exposures(millions of USD)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='1.a. 2012-2013 Values: Total Exposures'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <fields>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
                    <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>2380443</bucket>
                    <bucket>&quot;GOLDMAN SACHS GROUP, INC., THE                                                                                          &quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='1.a. 2012-2013 Year on Year Precent Change: Total Exposures' />
        <viewpoint name='1.a. 2012-2013 Year-On-YearPercentChange:Total Exposures' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='1.b. Time Series'>
      <viewpoints>
        <viewpoint name='1.b. 2013 and 2014 Values: Total Exposures(millions of USD)'>
          <highlight>
            <color-one-way>
              <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='1.b. 2013-2014 Values: Total Exposures' />
        <viewpoint name='1.b. 2013-2014 Year on Year Precent Change: Total Exposures' />
        <viewpoint name='1.b. 2013-2014 Year-On-YearPercentChange:Total Exposures'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
    </window>
    <window class='dashboard' name='3.Time Series'>
      <viewpoints>
        <viewpoint name='1.b. 2013-2014 Year-On-YearPercentChange:Total Exposures'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='3. 2012 to 2014 Values:Total Exposures'>
          <highlight>
            <color-one-way>
              <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='3. 2012-2014 Values: Total Exposures' />
        <viewpoint name='3. 2012-2014 Year on Year Precent Change: Total Exposures' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='1.a. Graph1:totalExposure(2012-2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. Graph1:totalExposure(2013-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3. Graph1:totalExposure(2012-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.a. Graph 3: Intra-Financial System Liabilities 2012-2013 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. Graph 3: Intra-Financial System Liabilities 2013-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3. Graph 3: Intra-Financial System Liabilities 2012-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.a. Graph 2: Intra-Financial System Assets 2012-2013 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. Graph 2: Intra-Financial System Assets 2013-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3. Graph 2: Intra-Financial System Assets 2012-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:Calculation_-186617842303897599:qk]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.a. Graph 4: Securities Outstanding 2012-2013 (millions of USD) '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. Graph 4: Securities Outstanding 2013-2014 (millions of USD) '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3. Graph 4: Securities Outstanding 2012-2014 (millions of USD) '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.a. Graph 5: Payments 2012-2013 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. Graph 5: Payments 2013-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3. Graph 5: Payments 2012-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.a. Graph 6: Assets Under Custody 2012-2013 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. Graph 6: Assets Under Custody 2013-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3. Graph 6: Assets Under Custody 2012-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.a. Graph 7: Underwriting 2012-2013(millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. Graph 7: Underwriting 2013-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3. Graph 7: Underwriting 2012-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.a. Graph 8: OTC Derivatives 2012-2013 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. Graph 8: OTC Derivatives 2013-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3. Graph 8: OTC Derivatives 2012-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b Graph 9: Trading and AFS Securities 2013-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3. Graph 9: Trading and AFS Securities 2013-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.a. Graph  10: Level 3 Assets 2012-2013 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. Graph  10: Level 3 Assets 2013-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3. Graph  10: Level 3 Assets 2012-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.a. Graph 11: Cross-Jurisdictional Claims 2012-2013 (millons of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. Graph 11: Cross-Jurisdictional Claims 2013-2014 (millons of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3. Graph 11: Cross-Jurisdictional Claims 2012-2014 (millons of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.a. Graph 12: Cross-Jurisdictional Liabilities 2012-2013 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='1.b. Graph 12: Cross-Jurisdictional Liabilities 2013-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='3. Graph 12: Cross-Jurisdictional Liabilities 2012-2014 (millions of USD)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:ID_RSSD:ok]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard Graph 1.a'>
      <viewpoints>
        <viewpoint name='1.a. 2012 and 2013 Values: Total Exposures(millions of USD)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='1.a. 2012-2013 Values: Total Exposures' />
        <viewpoint name='1.a. 2012-2013 Year on Year Precent Change: Total Exposures' />
        <viewpoint name='1.a. 2012-2013 Year-On-YearPercentChange:Total Exposures' />
        <viewpoint name='1.a. Graph  10(2012-2013)' />
        <viewpoint name='1.a. Graph  10: Level 3 Assets 2012-2013 (millions of USD)' />
        <viewpoint name='1.a. Graph 11(2012-2013)' />
        <viewpoint name='1.a. Graph 11: Cross-Jurisdictional Claims 2012-2013 (millons of USD)' />
        <viewpoint name='1.a. Graph 12(2012-2013)' />
        <viewpoint name='1.a. Graph 12: Cross-Jurisdictional Liabilities 2012-2013 (millions of USD)' />
        <viewpoint name='1.a. Graph 2: Intra-Financial System Assets 2012-2013 (millions of USD)' />
        <viewpoint name='1.a. Graph 3: Intra-Financial System Liabilities 2012-2013 (millions of USD)' />
        <viewpoint name='1.a. Graph 4 (2012-2013)' />
        <viewpoint name='1.a. Graph 4: Securities Outstanding 2012-2013 (millions of USD) ' />
        <viewpoint name='1.a. Graph 5(2012-2013)' />
        <viewpoint name='1.a. Graph 5: Payments 2012-2013 (millions of USD)' />
        <viewpoint name='1.a. Graph 6(2012-2013)' />
        <viewpoint name='1.a. Graph 6: Assets Under Custody 2012-2013 (millions of USD)' />
        <viewpoint name='1.a. Graph 7(2012-2013)' />
        <viewpoint name='1.a. Graph 7: Underwriting 2012-2013(millions of USD)' />
        <viewpoint name='1.a. Graph 8(2012-2013)' />
        <viewpoint name='1.a. Graph 8: OTC Derivatives 2012-2013 (millions of USD)' />
        <viewpoint name='1.a. Graph1:totalExposure(2012-2013' />
        <viewpoint name='1.a. Graph1:totalExposure(2012-2013)' />
        <viewpoint name='1.a. Graph2 (2012-2013)' />
        <viewpoint name='1.a. Graph3 (2012-2013)' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard Graph1.b'>
      <viewpoints>
        <viewpoint name='1.b Graph 9(2013-2014)' />
        <viewpoint name='1.b Graph 9: Trading and AFS Securities 2013-2014 (millions of USD)' />
        <viewpoint name='1.b. 2013 and 2014 Values: Total Exposures(millions of USD)'>
          <highlight>
            <color-one-way>
              <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='1.b. 2013 and 2014 Values: Total Exposures(millions of USD) (2)' />
        <viewpoint name='1.b. 2013-2014 Values: Total Exposures' />
        <viewpoint name='1.b. 2013-2014 Year on Year Precent Change: Total Exposures' />
        <viewpoint name='1.b. 2013-2014 Year-On-YearPercentChange:Total Exposures'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='1.b. Graph  10(2013-2014)' />
        <viewpoint name='1.b. Graph  10: Level 3 Assets 2013-2014 (millions of USD)' />
        <viewpoint name='1.b. Graph 11(2013-2014)' />
        <viewpoint name='1.b. Graph 11: Cross-Jurisdictional Claims 2013-2014 (millons of USD)' />
        <viewpoint name='1.b. Graph 12(2013-2014)' />
        <viewpoint name='1.b. Graph 12: Cross-Jurisdictional Liabilities 2013-2014 (millions of USD)' />
        <viewpoint name='1.b. Graph 2: Intra-Financial System Assets 2013-2014 (millions of USD)' />
        <viewpoint name='1.b. Graph 3: Intra-Financial System Liabilities 2013-2014 (millions of USD)' />
        <viewpoint name='1.b. Graph 4 (2013-2014)' />
        <viewpoint name='1.b. Graph 4: Securities Outstanding 2013-2014 (millions of USD) ' />
        <viewpoint name='1.b. Graph 5(2013-2014)' />
        <viewpoint name='1.b. Graph 5: Payments 2013-2014 (millions of USD)' />
        <viewpoint name='1.b. Graph 6(2013-2014)' />
        <viewpoint name='1.b. Graph 6: Assets Under Custody 2013-2014 (millions of USD)' />
        <viewpoint name='1.b. Graph 7(2013-2014)' />
        <viewpoint name='1.b. Graph 7: Underwriting 2013-2014 (millions of USD)' />
        <viewpoint name='1.b. Graph 8(2013-2014)' />
        <viewpoint name='1.b. Graph 8: OTC Derivatives 2013-2014 (millions of USD)' />
        <viewpoint name='1.b. Graph1 (2013-2014)' />
        <viewpoint name='1.b. Graph1:totalExposure(2013-2014)' />
        <viewpoint name='1.b. Graph2 (2013-2014)' />
        <viewpoint name='1.b. Graph3 (2013-2014' />
      </viewpoints>
      <active id='34' />
    </window>
    <window class='dashboard' name='Dashboard Graph3'>
      <viewpoints>
        <viewpoint name='3. 2012 to 2014 Values:Total Exposures'>
          <highlight>
            <color-one-way>
              <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='3. 2012-2014 Values: Total Exposures' />
        <viewpoint name='3. 2012-2014 Year on Year Precent Change: Total Exposures'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='3. 2013-2014 Year-On-YearPercentChange:Total Exposures' />
        <viewpoint name='3. Graph  10(2012-2014)' />
        <viewpoint name='3. Graph  10: Level 3 Assets 2012-2014 (millions of USD)' />
        <viewpoint name='3. Graph 11(2012-2014)' />
        <viewpoint name='3. Graph 11: Cross-Jurisdictional Claims 2012-2014 (millons of USD)' />
        <viewpoint name='3. Graph 12(2012-2014)' />
        <viewpoint name='3. Graph 12: Cross-Jurisdictional Liabilities 2012-2014 (millions of USD)' />
        <viewpoint name='3. Graph 2: Intra-Financial System Assets 2012-2014 (millions of USD)' />
        <viewpoint name='3. Graph 3: Intra-Financial System Liabilities 2012-2014 (millions of USD)' />
        <viewpoint name='3. Graph 4 (2012-2014)' />
        <viewpoint name='3. Graph 4: Securities Outstanding 2012-2014 (millions of USD) ' />
        <viewpoint name='3. Graph 5(2012-2014)' />
        <viewpoint name='3. Graph 5: Payments 2012-2014 (millions of USD)' />
        <viewpoint name='3. Graph 6(2012-2014)' />
        <viewpoint name='3. Graph 6: Assets Under Custody 2012-2014 (millions of USD)' />
        <viewpoint name='3. Graph 7(2012-2014)' />
        <viewpoint name='3. Graph 7: Underwriting 2012-2014 (millions of USD)' />
        <viewpoint name='3. Graph 8(2012-2014)' />
        <viewpoint name='3. Graph 8: OTC Derivatives 2012-2014 (millions of USD)' />
        <viewpoint name='3. Graph 9(2013-2014)' />
        <viewpoint name='3. Graph 9: Trading and AFS Securities 2013-2014 (millions of USD)' />
        <viewpoint name='3. Graph1(2012-2014)' />
        <viewpoint name='3. Graph1:totalExposure(2012-2014)' />
        <viewpoint name='3. Graph2 (2012-2014)' />
        <viewpoint name='3. Graph3 (2012-2014)' />
      </viewpoints>
      <active id='34' />
    </window>
    <window class='worksheet' name='Question2'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[sum:RISKM350(2012):qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Question2a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Question2b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Question2c'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 3.2'>
      <viewpoints>
        <viewpoint name='Question2'>
          <highlight>
            <color-one-way>
              <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Question2a' />
        <viewpoint name='Question2b'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Question2c'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' hidden='true' name='1.a. Graph  10(2012-2013)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.a. Graph 11(2012-2013)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.a. Graph 12(2012-2013)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.a. Graph 4 (2012-2013)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.a. Graph 5(2012-2013)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.a. Graph 6(2012-2013)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.a. Graph 7(2012-2013)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.a. Graph 8(2012-2013)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.a. Graph1:totalExposure(2012-2013)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[:Measure Names]</field>
            <field>[federated.00dn9o11pmptox14jdij70me8g92].[none:NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='1.a. Graph2 (2012-2013)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.a. Graph3 (2012-2013)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.b Graph 9(2013-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.b. Graph  10(2013-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.b. Graph 11(2013-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.b. Graph 12(2013-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.b. Graph 4 (2013-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.b. Graph 5(2013-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.b. Graph 6(2013-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.b. Graph 7(2013-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.b. Graph 8(2013-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.b. Graph1 (2013-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.b. Graph2 (2013-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='1.b. Graph3 (2013-2014'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='3. Graph  10(2012-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='3. Graph 11(2012-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='3. Graph 12(2012-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='3. Graph 4 (2012-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='3. Graph 5(2012-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='3. Graph 6(2012-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='3. Graph 7(2012-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='3. Graph 8(2012-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='3. Graph 9(2013-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='3. Graph1(2012-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='3. Graph2 (2012-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='3. Graph3 (2012-2014)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1.a. 2012 and 2013 Values: Total Exposures(millions of USD)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO2dSYwk2XnffxGRGbmvVVmZtW9dvc/aPT3kDCRqoQQLFmgLFgxYAuyDAfnq
      iw/2QaB81UGCBQu0BUPSwbBEmJZskhJnhiJHJGffmj29VXetmVlVue97xuJDTxen2NU9Gd2V
      mdWV7wfMUhHx4vsiIv/xlnjf9yTTNE0EghFFHrYDAsEwEQIQjDS2YTsg6D87azeQ/BE0w056
      e5WwL4h3Zp7t1RuoaPijcyzNTQ3bzaEgBDACFEoFittJTHeAvY1NUsEFgukd4hWNgF7l4uTi
      sF0cGqIJNAJ4fCFiE2NUynVmF2dot7pIdgfnl2fwBwIYhj5sF4eG1I9RINM0kSTpqE/7hTaB
      kbI7aJsn0W5faoBardaP0z4S0zSp1+sDt9tsNtH1wb9Bh3GPT6Jd0QQSjDR97QRvra+iuIK4
      bSauwBj5TAqvz4dNUeh2uwT9HtbWNojEYqR208wtn8JsFugqAWrFDLHxIOlSmUqxRiQSJpfP
      Mzs9jWlT2InvsrQ0QzbfYHpyDADT6HL7xg3Gp+do1crEYmEymQZul4RsU9E1A1XWSaRyxMZD
      ZEp1Ti1MsZMu4HM5KRUyqC4fPp+HaqOD16Vi6DqKItFqtShWGoz53eTKDSajEXS9i0117F9v
      s1YivpNlZjpKPLHD9OQkNq+f4u42XcmBzdSYmp0mvr1DwGPD7otSzO7h83nw+72s310nOjNP
      pVggNhFifWuHSCSKx65TaupUqnWWl+b331rdTotqqcRevkzA52ZsYpL07g4uVabelXDbDOpd
      iTGfg1y5wcJ0lEy5gddpA9PA4w+yu72Bze4hFIvQqlZo1OtEoxHW1jcJBUMUShWWV06RTmzg
      8EVw2gff/DkUU2f97hoOt4d8Ps/ps2fI50qocpt0sUvAaaL6xvCpkMyU8DoMym0bLto4/GGa
      5Tz+sUh/BVCr1bCbKoaiUe9AvZChUGvh0iqo4/MY+TzTi6fJJW9Ra5rIkkS20sQwWzRLObY0
      A0UvUGva8dXqaEabcq5IzpB49uwK6USchmYCnwnA1KjXm7hrVZqlLGmnncxenkDYTiqxx7Mv
      v0o+vcPS7CR3VtdQgmNIRpdcNkvD7aXbqBHxB0lsx5FVFcMIMeaVuRMvEPY5iAY8JDI5urpB
      NtWlI6nMT0f3rzdXqBD02NnJFjh95gybn35M6MyLyHYnUrcDWoM7t9foKnYkNKTmHrVSlmK1
      wUWvi05HR2tVyWbzdDSd5ZUV4mu3iJcKeCcWMQ2Tz//8tG6bcrFIu61RkQw6rQ0KtS4TYz68
      NoNMuY5pSCiyiaoYZLJ5au0uPrPFRtrk/AUHpi1AQNW4fWcVp82BvVtlT7bT7Rq06nV07vVx
      apUapsOP0+7s50+md0yDTkcjHAujazrNYo5Ks8u55QjNdptaJUHYN0ZX62IYJtGJIEbZQWn3
      Ll3ZTrNexxsK9bcJpKoOFMmgVu/QareIzswjdduMTy+gGh38Ph/b66s4PCGWT63gUmWatQrN
      VoeJmRlM3cDj9qHaZWxON7HYFG6PSjTk5fbtO9Q7HVrVKl3jvkUZVbWjt6p0ZRedRoOF+Uma
      LZ2Vs2eplUt4nDbWthJEotMsL84hSQpzc7N02y0cDhVkFZvNht+p4g34cPmCzE5GsCsmyVyR
      iYkYUxNjeINjBL0ONONnYwg+t0q+WMXndbN6+za+8SjJrU2a9QqtjoErGEW2SUz4ndSrNVrd
      7r17orcBCbtdIZst4HLbscsSd+7cxR2IcPrUMk7Vht7tsN/bMA12d1J4g2Ocf+YZYhNRMGEq
      NgZah0JdIxadYDwcQJVNqvU2zXaLTrOBGpjCLmlIkotOPUuxobFy+gx+VaNhOuk069jtMoYJ
      0meSk2STcqnSz5+LZeyqnXa7jdPppNnpYjaqNDUZp9OO6lABUBQbRreDLttxqDZiU1N4PR5U
      VUWS5P6MAlWrVXw+31Gf9pEYhkGj0cDr9Q7UbqPRQFXviWaQDOMen0S7yte//vWvH/VJO50O
      DsfP2samaZLaTaLYVXb3UrgcdrbjO7iddrbiu/h8LpI7KdwOG5vxHQKBANVKhXajynZ8B6fH
      A1qL3WwRxdSRVRvtlo7drhyw0e12qDeaKKZGrdFgO57A4fLgsMm0O10kNBLJFC5VoWOA1tVQ
      JJNEcg/VBplCBbpNMsUqktYiU6yiSjrZYg2jUydXquPzqFRqLZyfvWG63S6KoiDLMqahsb21
      jaraiO+kCQa8xLcTeNwONNOG3m2yvbGF2x/Epsi0223q9TqSaWKaGjt7OQL+ew+5XMiwndjF
      4fIgG10qlTK76TzhYODQe9wL7WaNdL6E1m5gyCqqTfniQoc9W1WlWC5jlwxqbZ18egeb08PO
      9iaqx0cpl6Jr2tA7DWSbSrVawzQNbDaZRDxBq9Vgdy+D1+uh2e7SajZQZGh3NGx2hcTGOi3N
      xOmw0+4Y2G3Kob+p3WQcu8PB7m4al11iO5nG7ZDZSqbxex0kdtK4VZnNZIpg0E+lUqFZLRHf
      SeHyeDDajcEIoFHJ05XcVPIZxsZ8rG2niXrtbOVrRN0K1zdSLEwF2djMEgnbKVTabG0nmV9c
      pNGoY3S75ItlfHKXvUqTRq1AoyYTDLoP3JBuu82dtQ30bpNyJktDVsHQCfpcZAsVSoUc4YCH
      RDxJrt5Aa3apV4tEYpPs7qZwKjr5uo6qN6hqMkqnRrrSwil1qbRN5E6ddkcnUywzHg4hcVAA
      u/FtZEWi0jQYU7vcTuSZmYkSv30VwzdDs7yNLIcolguEQwGy2Sy5vQT5YoNqq8nMVAxFufej
      dLqc1KstqoUU8c0tGqaEXbE/kQASiSSTsQkK2TzVaoVQKPR4z1a1c+P6TXRdp5jexjE2RzGV
      wOnxkN1L0tEVTFmmkk/R0WF7Y4u2ruN1yCR280zPTdFu6JhanWypRrOUplCuUm/qBENutje2
      CQT8rN5eJTI5iV2RH7jeci6F4gmRS+0xMebm1maeGb/EWq7DjEfj6laRxZiLtY0C0YhCoaKx
      ub3L8tIctWYLvdOmWCoPZhjUblfJppKYQDy+i0NVWE9m8amQq5ssRH3EE7s4nArr2xlalRyq
      3CVdqN/7+CFJKJLOTq6C0+HCbnbQH/JRJBJwUm2D/Nl+rd1gO7lHejdBVzeIJ1M4nC6CbjvV
      Vufe2zqxA0aXTKGC2W2SqzQxWjUUTwgnHXKlGnq7TqHapJDLUisWKFXrNBqNA7ZVu41qMUe9
      1WF9t8S4TyW+tY07GGF3/SYdQyadTjMVHaOt3fuwE4zEqBazqArEd1I0Go397xmSJOEJhFmY
      m95viz8JCjo7qRzNZhVDsj3gvxWiY16KdQ2H00l2J46kqCS3N3D4gjTrNeqVIoVSnXwuS2w6
      RiadRbGrqFKXUrWJJEE2l6NSyOEMTNCs5NHaDeLJvXu+qi6mp6dwq4c3LR0OB3vJOJIksZ1I
      4VQl1vdK+JQO+a6D+bDKdiKN0yGxHi9QL6RxSE0y5TYSEpIkIRlaf/oAlUpl4G1x0zRpNBp4
      PJ6B2m02m6iquv/m7oV6rYbb6z38J22a1BpNvB73YXv3qdVqA7/HJ9FuX3pu7XYbWR7sNzbD
      MGi32wP/TN9qtdA0zZIAJFmm+Yi3ryzxhW/nVqs18Ht8Eu32RQBOp3PgbwnDMJBleeB2ZVke
      yiiQaZpDeROfNLtiKoRgpBECEIw0QgCCkUYIQDDSCAEIRhohAMFIIwQgOIBhGBjG6ORKE1kh
      BPsUE3e4ulNFK+Z45dd/DY9y8t+PPV+h+dmbQdM0TPOz/xoGum6g6zqmaWIYxhefSHBs8YQj
      tAoZNLsTp3xMIr/6TG81gGmytXYTQ3ZSrTWxqwqmpqE4XWi6QbdWYm5hhmS6xXMXljBNk2Gl
      HB203fv2hmH3qG0Wk5uokVlaibs0dAPvITXAsJ5tv+z2JABda5ErVLDZWwTHYxQLeSbCXkpt
      GbfDRHWFie8WGAsEMQxjKLXBvbarMTS7g56D9PBrNfjw3XdRbAqh6RUWJsM9nzM0PU/249fo
      4MLJ4c9wGPe4n3Z7EoBid3H5yst0NYNSscDcs+fJFyqcnnBS6xh4XQ7GJjQUxbY/N97K5LCj
      QJKkodgd1vUqivIQmybtVhuHx0Gn07XkV24nTqvTRbI5aCAROKTsw+32l37Z7bkTLMkKqqow
      Eb0XBD4RuReIHnbd26+q6pE7J3gcTDqaTlC10253LZWMnnmBf73yPPVimmqxSiAS7JOPx4eT
      380fOWxEJ8J0dBOP21oGh267we7eLndv3MXmc/XJv+OFEMCJw6BYrKI6YP3OtqWSWi1Ptqph
      U5SBT+8eFqNxlSOFwotXruD1OphIlTGh52DKzE4e1QZXd3MsDiH/5zAQAjhxmCS3NjBlaGkO
      JmLjPQsgPBUjcXONpaVZnCMiANEEOnF0yGSz1KpVao2upQec3linozVZW9+mPiIfNUUNcOIw
      6bQN5leWmIpNWCq59OIVlO0EFy66cY3I2omiBjhxGATHp3DQolC2mlJcI53aIx5PUihV++Ld
      cUMI4MRhI7ezynsfXyWeyFoqmV27xa3NFM1GA1fI3yf/jheiCXTisHHhxcv4XXbyDWtfTu3e
      MF+6pHJ3Ky06wYKnFYnJ2CSaKdFulLHSlXW6Hdy5foMu8lCWQRoGQgAnDp3X/t//4Zt//bcE
      JqcsPeBsMsXy+dO0alU6IxIUIwRw4lA4f/EcNruK22G3VDIyP0e11OKly8+MTDyAEMCJo8ut
      W7c4fW6FG9fuWirp8gW58OxFXGaXvXS+T/4dL4QAThwy/uAEhXSKxZU5SyV3rn/A37/2Gm99
      vIpv3Hrq9KcRMQp04rCxvDxPOlMkHHr4iirlcpk333zzwDaj08RApV3L8Y9/950DUygkSeJr
      X/taf1weIkIAJ5Do9AL//F/MsHb7LitnVw6t5jc2Nvgvf/dtZp+5ePhJ6uUDf1773utCAIKn
      gQ6vffs7dCSJybmLj2zjBiZjRE8t93RWz2OsJvM00JMATMNga/0OksNLpZgnMj5GtlDC7/fQ
      bBsY7Qbz85MkUnXOnZ7vt8+Cz1GpVH4uVtZkdnkFv8tOoSVRKpUOHO/xeLDbrY0OnWR6qwEk
      CYdTpW3oKJJEulhlIRogUTYJuBQMWWEjkcXn9qLrOrquo2lan10/iGmaQ7F7/3oHzf1r/Te/
      +lWe7fGaM60Wv/Kf/4Df+q3feiyfNU0byj0G+ma3x7QoOq22hj8UQOt0mJmIkM2XmRt3U2ma
      RCZDeBotHA7nfvDyoCOKDMMYit1hXe99mysBP/92vLdZn7dLJaqyjM1me6wA8/vlhhEt1i+7
      PZ1Rkm0snToNwPjYvWD4QOBewHTgs6ahxzP4tWMFgidFfAcQjDRCAIKRRghAMNIIAQhGGiEA
      wUgjBCAYaQYqAF3XaLfrpNJ5RiPcQnDcGagA9jZv8+2//w7/8MP3hQAEx4KBftILjcfwq+tI
      4UjP2coEgn4y0BpgffUWFU3FrbQZ/GwSgeBBBloD2Gx2pqYnef7CeazOR1y9fpWdbBGH288r
      L18SNYjgSBjsKJDs4Plnz7KTTFpK1wGgy3aWFxdRGPzMS8HJZaACOP/C89hNGb/LRrHSsFS2
      Xq2RTGxRrFhN9ycQPJyBCmD16vtcW13j6vU7BP1uS2VPLUxyZ22L6OR0n7wTjCIDFcB4dILs
      TgJdcVg2fPPWHfzBIHtJa6ueCASPYqCd4O31TVKZDL7AGBpY6gi/cOky+Wobh2xiGCbKiCRu
      EvSXgdYAi6eWcTkcBMJjlpVXb3aQOlXurG/S6lhb/VAgeBi9B8Vv3MXlD1PMZohMTJDJlxgP
      eai2DGSjw/RkhL1snfnZ2EPPk9xOYHP5cckaeq/GPyOVWOfDT+8yPTeP2ymWZBUcDT2GRMo4
      HXaq+RThyUU2t9Y4OzfOVlEn6IJWo8ZGXMNmcz0yKP7cpZc51dUp51OUK3UCbkfPjip2B9NT
      MZxOF/oh5x7VoHirC7kYhrEf3G6VkQ2KNwyNRrOLyx8mt7vF7GSUeLbCeMBDrW0wHp2iVKnh
      87gfGSR+86P3aNg9nFtZwaHasFkIzJZsTs6cOc1eKotisz3wIWxUg+KtZjGXRVD8AXo6oyzb
      WD59BoCZ6XvDkLHJyQPHhMLjX3geQ7Jx/twKu/FdlpYXLTlarVQo5DJU2qOxeJtgMAy0E9wo
      F7j26Q1ku8PyVIZzpxdpaSaLi0uIqaSCo2KgAvCHxzl//iKRoNdyWbs7wKsvX0ZrlKm2On3w
      TjCKDLQxV8hmaSqrKKhcvOi3VAu8985bVBstbHaVC88+1zcfBaPFQGuAi5ev8OzFZ1iej6Fp
      1kYhzq0s0mi2icTEVAjB0TFQAWitKqtrW6SSSeptax+zNrYSuH1+2rXSFx8sEPTIQAWwm9zB
      aYMPrt7C7XFaKhuOTDAV8tIxrQ/fCQQPo299gHfeeYdv/6+/enDOjnnvXzfe+8mBzf6JKP/h
      P/3Hh57PZZf4dCfF7PzS0TsrGFn6JoDV1VV+c3OTGU9vIz7/dW39kftnFlaYnD9NKr5BtdnB
      7xLTIQRPzlOzQsx7b/8YyeGl1Wrzi4unhu2O4IRwLAVQq9Uolw+uUeVweQmGQ1y7cYfdnZ2D
      +xwOwuHwIF0UnBCOpQC+8Y1v8NrGXZSHLeXzxncP/OkvVfirP/+L/jsmOHEcSwEAXPz1r6I6
      exspynzv+332RnBSEblBBSONEIBgpBECEIw0QgCCkUYIQDDS9BYUb5rsJrbxBMfJpXaYmJwk
      X6gQCbmpNA1sksFYKECh0iQyFuy3zwLBkdHzMKjH66ZaKVCptZBzBQJOic1UFZ8DyuU8jUad
      VlcmHPSh6zqGYTF00TT3g56tlr0fEC+C4r8YERR/kN4EYOisrW0wO7+Ey6nQbrfZqXbweN3U
      mybjkQjZYpWQP7QfJC7LFltXkrQf9Gy1rCRJQw1OF0Hx/We4K8UrNi5f+RIA0ejEocdEJw/d
      LBAca0QnWDDSCAEIRhohAMFIIwQgGGmEAAQjjRCAYKQRAhCMNEIAgpFGCEAw0ggBCEYaIQDB
      SPPAXKButUqyXKCdrzL/3EVcw/BKIBgQD9QAxcweqXwZrd2kKxaiEJxwHhCAf3ISl97F5vMh
      WczgLBA8bTzQBHK6fTz/4qVh+CIQDBzRCRaMNEIAgpGmx6B4g534Np7QOKVshuhklFSmeCAo
      fjwcIF9uMjEe6rfPI4GhazRbXdwel+UVNQW902OQpYTX56GcTaJ6Y9y4vcbyVJitdB2/Eyrl
      HI1mnXbXxljIL4LinxiDN773GgsLM2Rr8MrlZw61K4Lin5yeg+LX1zeZnpkhtRdnLOAnmSnj
      9XmoNw3GIhPkijVCfrcIij8STCbCXq7fvMtLv/jVQ88tguKPhp6D4i+99DIAscnDV2mMxo7O
      KYHBbrrEsxfPsLG2yUJMrH3QL45tevRRx+txoskeXn15cdiunGjEKNCxxEB1B3EpGrmCWBa2
      nwgBHEtsfOnLV1haOU2zUsTicILAAqIJdCwxeffHP6TeNYhE58QwaB8RNUAfKReyrK2tUa23
      LJcdn5zlmfNnMQ1dCKCPCAH0kbd+8hNMQ+Ptd9+3XLZeLpDNZ0ll8n3wTHAf0QTqI3MzU2xu
      bjF/+lmLJSXGotM4bDou7+G5WE8SpmHQ1Q0UCWSbbaA1nhBAH8kXS0xEo+QyKVicslBS49aN
      a+iGiTswwcrSbN98PA5cf/8nlHDRrVb58q/9ykCDsIQA+oimaUiKgyuXzlosaeMrv/TL6KZJ
      IV/ChBPdD5icXyQi2Xj73Y95yMrQfUP0AfpIdHqeM8tz5HNW2/EG165epdU1Cfq9nPTAvHQy
      zps//EcMRRn4tQoB9JGLFy/idHspZlNolmatGeimQjW3S7Wtn/iHFJuexuNx4fP6B94kOen3
      dqj89KP3uXbtGmuJPWyWZq0pRCNBuobO+tpm3/w7LuSzGZodjXazzqAXmxJ9gD4ys7BMeGzs
      MWYxSuimRCwWRdOLffHtOHH6uZdYefYlcnsJKtUGYZ97YLaFAPrIzWuf4B+bYDO+y/nz5y2U
      1EilM2yu3cIVOtkjQAAbt25Sb7eIZyr82ldnBmpbCKCPRGMxcrspzr7wvMWSNpbmJukwh9M5
      uLfhsAiGvPz0rVXC0wvYrMaRPCGiD9BHHKrC9to2vjGr8/klZhZOsbQwQ3Jra+Dt4sfDpNmo
      0+laj9pKbm0zPj2LVinR7oNnj0LUAH1kfvkc03On2NzaRD+1gtJzR9jgh99/g7GJcTKlOtZj
      twZP/PoHJHU/xa01vvrPfhOHhbLh8XFC/kkq6Z2BfwfoUQAmjXoDp9tFLpPBHwzRbLTwulWa
      XRObDC6ng2a7i9vl7K/HTxHf/953iM4uc3pl5ZFV7be+9S3S6fSBbd1uF/sdG52Oxp9u3Dyw
      7ytf+Qpzc3N98PjxiS4s8fa338A7NoVqsexOfA/3jISBbeBNkt4EYJqkdnaZnJskkUwRabUw
      tA67WRt22aRVKRCJRcmVdS6cmccwDEyr0dqY+4HaVsuapolhGBiGMfBV2x9ldzw6zcL0BKlM
      lpnJh8/p+ebrrxH55V/oyV6jVEb60Y/4nd/5HXRdtxwUfz+BgOWkBbBf7rBrTd5dJbbyDIWN
      VVq6bkkEFy6/hNPjoVbM02i2cakP/iz79Wx7S4sCaJ0WtUYLpx3ypSouVUZSZDTdJDweZi9b
      YiwQRpKk/X+s8jhl7pd7ErtPwqPsZlIJ7mxsMT42xuxU9KHnUOx2PMFgT/ZMw0SqNH5m9wj9
      fZKysfkl7rz/Kf7oJKpFvxqVPGuJFD5FZ8zjP/T8/Xq2PadFmV5YQLE78Cyv4HS5aHc6qDYF
      zQCbTSY2ZT7hj1DazwbxJA/HcjaKJ+RRdmdm5ljxBShXmkfu177Nx7jVsiw/1j2+X+6waynn
      crhDY9SzWXRZtlQDlAsFQuEoH7z9Ab959tyhzaB+PdveskJIEh6v794fjnuX5nLea+vvd9DE
      eNID7KUzkC0iSxJg5TvA08fU6WeIGQbVQppCoUIs7O+5rM1u5/q1azj9gYGPyohRoD7yC7/4
      S6iqnbW765imOfDm2SCpFrIkswUSt+7w8tf+qaWyTpcDWbHjdA0+C554b/eRbqdNqVSmUCic
      +MB22WzjCUaZnZvBbrGpkt1L4Q0G0ZsNOn3y72GIGqCPXL92ldj0HM2OZuEbwNPJ5q1NGqrE
      3USJhRdfsFR2+fwzmKqHzdXb2Acc/CAEcET80R/+Ibnbtx+6//W/+B/7/28CL/7Gb/Dbv/3b
      A/BsMEyfWuLOVpypyQmsfgnyBO59KfeoEvlKnWjAc/QOPgQhgCMid/06/67HFXV0w+B/PkIs
      TyN7GxvspDIo7gAtsBTWuHnjY3YbEsnVVb523mr89JMhBCA4Es5+6RVm6006zSqdeguX5/B6
      YHV1lddff/3ANsPQARlD1/izP/mTAy2gcDjM7/7u7/bNbyEAwZFQz6e4dnebVtvgypcuP/S4
      Dz/8kA/MLsHYwz8Mfp746z8QAhAcfyr5LLt7KRS7G/UL5oM5PR5c/t6+Eyj2/v5ExTCo4Egw
      sHF2ZQnjKctfIQQgOBLGYhPcvXkDbzA88CnNT4IQgOBIyCY2iZ2/jF5M8TStLi0EIDgSplYu
      4OjWmF46de9j1lPCSAjANA0q5TK68RQ9macMu9PLpUuXGHeYJPPlYbvTMyMhgB//4A2yhQKv
      vfGDYbtyYslsfMo/vPUh7779Mf7xwLDd6ZmRGAZ95pmLXL1xhzPnLwzblRPB9vY2f/M3f3Ng
      m2kaGKYEhs6f//EfHxgLcrvd/N7v/d5gneyRkRDAtU+vM7d0mtWb11meFctZPimrq6uM/+3/
      5bnwWE/H/9neLggBDI+luSl+9PY7nLp4adiunBg8NjsBtbe4L3XAUXpW6DEo3mD15m3mlqa5
      dWsTj9dNq9nE7fHQ6hrojQoLizPEUw2ePb/UZ5ets76V5IUXX2BtYwueOzNsdwTHiN4EIMmM
      hUPonRaR2DTp1A5zsSDpGvhcIDt8bCbzhPx+dF1/vKwDpomm3UuqZLXs/UwHuq7vn+PzvPIL
      v0S13kAxTarNNi770WXauW/XaiYLwzD2fTUtJgW/f72aplnOCnHf7uNkWLhf7nEySjzus8X8
      md3Dnu2T0ltWCNOgUq9gqBOgVXn2wlnSuSLLUy6qLZOA10mw08Vms6MoCoqiWA9glqT9JLJW
      y0qStG/3sES0H3/0HqlCBY8/zOlz6pGGJt63a/Wcsizv+2o1t8P967XZbFi9lPt2FcX6S+B+
      uccJTn/cZ4v0M7vWkwz34FdPPkgyS6c+azqMhQCYnZ4EwO29t9npHOTCNtbwj0WZXTpNNps9
      0XG5AuuMRCe40WhQyaepaiNxuQILHN/u+RHitkNVV4mEfMN2RXDMGAkBxHf2cNthN50dtiuC
      Y8ZICOD55y/x/PPPYcOkq1sbNtm4c4OrV6+yur7dJ+8Ew2QkBGBXTO7eXWNp5QymaW0YLpfN
      YZoGmWyuT94JhslICOCjDz/EBK7+9FNUm7Xhv/HxcUAiEhnvi2+C4TISApiZmSa+tUUkZn0e
      UC6XA0yyogY4cXz68fujIYBSuUxH02nVa5bLGqaJZHfjfpri/AQ94fN5R0MAqttPLOx7rPyc
      kdgMi1Mhau2nY6UuQe8kksnREMCY302u0iIW7S0XzeeJTExQq9awS9DWhAiOG+VymXIhw/r2
      juWy47HZk/cl+A9+//cpf/fvej7evHyZP/pv33jo/k8+eIft3SxTs/M4LHagBf3n5k8/IpEp
      Ew4HWJyftvZG11onTwCmpvHvV073fPx//4L9z126Qiy6jRqcfDLHBH3hueeew7GRIDgWsdyc
      mZ5ZGI0m0JPw04/e571PPmV97c6wXREcwqc//QTZrnL1k08sTiqHXDZ18mqAowoaJxEAAALe
      SURBVGZ++TQOhwNHIDJsVwSHML+wyDsfXWNmYcVy2WKxIGqAL6KU2WNrJ0O3O+i1SwS9kMlk
      cXiD2OlargECgcGvSfbU8fyVV3juJZOt9TXami46wseMZy69zEUTttduU623CXh6X6O+Wj+B
      neCj5pMP3mVtc5u5U+dZFD/+Y8f67evUOga3bq/xL0+fs1RWlbrWBKB329y6vUokMk4mXyYU
      8FBvG9BtMTcbJZmqs7I8Y8mJ447DYWcsNst40DtsVwSHEJuew+F1Ew6OW27Pn3vusjUBmBhI
      pkSmUGMh6mOraBJ0KXR1jfV4GrfTM/SgeMNilLj5ObuHkUjssHLuArfurDM/N/vAfhEU33vZ
      +/Yt8QVB8Tubt7kR36ReDfGvpq196DRNiyGRkgk2h8pYOESyUGEq5KHSMhiPzVCtNfC4PEMP
      ipctxvxKn7N7GGdPL/PJRx8wfeHlQ48TQfG9l71v3xJfEBTvD0e46PJic05YDpr/4Q9+YE0A
      iurizJl7wfHjkXvDgvdzg/n9QUvGnxZq1QrVYgnJJmbDHUfurm0xOTNJvV7GJGLpVXLhzJLo
      BH+e7373u1y7du2B7c1albW//gve+LlO8OXLl3n11VcH5Z7gEK58+RUcTiepxCaVRpuA28Io
      ULkoBPB53vjRj1BevfLQ/T8/mfr7b74pBDBk0qkUpt4mXW5zZaa3VI37yHYhgANIYOsx3+X9
      4wXDpV7Os7FbIDYRxmqHqNzoCAEInm50FGIhF5lC9ZHH/eVf/iVvfvLxA9uFAARPNZPjfn78
      YZLZ+YVHHre+scHEP/nqA9vFXCDBU83t1XWmJiNkMunHivgTNYDgqWF3d5fNzc0D22qtNk5b
      h/ROgnffeuvAvkAgwMWLFx95TiEAwVPDN7/5TTz/+1u4D/ngpQJbP7ftrVCQP/25pZx+HiEA
      wVPFlyei+HscqbtufvF0D9EHEIw0QgCCkUYIQDDS/H8TO5w5pRQh8gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='1.a. 2012-2013 Values: Total Exposures' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='1.a. 2012-2013 Year on Year Precent Change: Total Exposures' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='1.a. 2012-2013 Year-On-YearPercentChange:Total Exposures' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAPa0lEQVR4nO3dSWwcZ3rG8X9V9cLm0iRFkeKm1SIlWbJ2avWMPZ4ZZ2yPB44DJPAgQA4D
      5BLkkksuyS055Zwcc8hlToEnAyNGBl4iyZYsWQutXaRIipRIUaYoLk022d215ECJGktk0zGL
      rWZ/zw8QIJTUX31k19NfVXe9/VpBEASIGMiyLMt+0ZMQeZEUADGaAiBGUwDEaJEXPQFZTED3
      pTPYzTupzIxir2nBH+mmb7Kc9ro4V4cm+PGhHXx14n/YuHMf5098iWvHeP3tt6mN63Xt+1IA
      ithA9wW6u2Y5vG6WqFPL0OUr3B4JqN6+g7Pf3KBjVw0XLlzDqVtHymrm13965EVPedXRS0UR
      s+M1tCVn6HqYxctNMfjIpdkZp3/CY2tLglNfdLO+fQMAPZe/4sMP/8CU77/gWa8uCkCR23H4
      GLfOnmby3lWm/HJiyQqufNNN/YatXL/ZRWtNOQCJqmoaGqoJvBc84VXG0gdhxSogMzNDJJ4g
      nZogEothR8uI2j5TqVnKysvIZjLEYw6BZTM5Po4fWNSuXUvUtl705FcFy7IsBUCMVdBPgn3f
      x/O0Pktx0TWAGE0BEKMpAGI0BUCMpgCI0RQAMZoCIEZTAMRoCoAYTQEQo4UWgMD36Lp6nnMX
      r5HzffpudHKz7z661UiKWagrQMvmHbRWZbh9q5tUvBF/cpjprO7/keIVWkWYZTukRgboGZ5h
      fUM1yfoqbG+SWd+jzIUgCHRDXInzg4C/+9dPlj1OW+sa/ua9AyHMaGmhBCCTnsLFYzzlk6xw
      yBIwePU6fuDTsWkrkYiN7/vYto3jOGHsUoqQ5/sMPkwte5w1yQSxWCyEGS0tlAA40Ri2ZdPc
      2oTLempqqmiZmsB3yohHdZ0txSuUAESic2mN1q6Z31ZRVRPG0CIrSi/PYjQFQIymAIjRFAAx
      mgIgRlMAxGgKgBhNARCjKQBiNAVAjKYAiNEUADGaAiBGC60gxvdcrlw4w9iMx8v79nPzzFms
      2nqOHNhN1FHOpDiFWhG2++Axhvq78KfGcRO1bN+0Ace28DyPIAjm/0hp8kN6boMgwHXdUMZa
      SohN8gL6e7opX9tKfVUM7CiDPd0kkvupjj2tArMsdS8pVWE+s4U6TsIpiUyNM+UF3OnrxXnw
      iOyWzQz19zJrJaiIOtj2XEkkoJLIUhZSgz7Lsgp2nIQSgHhVDXHg9Tffnt/W2twUxtAiK0pX
      p2I0BUCMpgCI0RQAMZoCIEZTAMRoCoAYTQEQoykAYjQFQIymAIjRFAAxmgIgRgsvAEFAamyE
      gcFhvCBgbOQ+I2MpVP4ixSy8kkjf49uRh7hemr7paR6m0gS5u1QeOEhCXWKkSIUWANuJ0NLS
      xJ3+Icodm/XtW7CHB5l2c0QtR03yisTH53rpuz++7HF+8/Ye4tHvFq2EVRLp+wHZbDaUsZYS
      SgB83yfwXW73DLBpazvOzLfcHBrFnk6x1YkQiThqklckrvaNcO7G4LLH+c07+59rZOeFVBFm
      21bBmuSFcm6SmU4xnclCbpbr164yFa2nPjJNsnEj5TEd8FK8QlkBElXVJIBdBw493ZjcEcbQ
      IitKV6diNAVAjKYAiNEUADGaAiBGUwDEaAqAGE0BEKMpAGI0BUCMpgCI0RQAMZoCIEYLLQBB
      4DN45zq3Bx4CWc5/cYJT5zrJeeHcIy6yEkLsEQbVa2tJDWYhO0G0ro192xqxLes7jfHUJK9U
      LNDwMMSntlDHSXhdIi2byspKLFJglZNLXeF/P+/h0KtHSTjMl0Tats66XqQgpKot13Vx3e8+
      l54fXknkquoSmUmNkw4iDNw8y+27OeJlO3Fdl8CysG1LJZFFxArpBSgSiRKNRr+zzQ6xJPLZ
      sVdKqE3yag/9jD2Pi8I2bdwQxtAiK0rnI2I0BUCMFuq7QKZIZ3Lk3OV/v1FVIo5tF6YjuixM
      AfgB/u3Drzl1eWDZ4/z73/+KuuryEGYkP5ROgcRoCoAYTQEQoykAYjQFQIymAIjRFAAxmgIg
      RlMAxGgKgBgttFshAt+j6/pZUkEr+9uqOPnlJXJOgtdePUwsopxJcQqvIsx22LbrFW7dSpEa
      Geelg4exH9wllctRTWk1yfNDKvzIuW7BmsE9EdbcXTfHs1M3tknes6Ixi6nUDE4uR9J2iEQi
      JVURFlZZZzQSKVgzuCfCmnskEi2JJnmhBCA9MUbOiXPn+kVGJgMq1+whGOlmJlFPhZrkSREL
      JQDl1bUA7Dn02vy2lvpDi/13kaKhq1MxmgIgRlMAxGgqiZRVYyw1Q+/Q+LLHWd+QpKG2AlAA
      ZBW5dmeEf/nt6WWP89fv7uedo+2AToHEcAqAGE0BEKMpAGI0BUCMpgCI0RQAMZoCIEZTAMRo
      4ZVEejm+Pn2SyQzsP9bB+U+/ILGumSMHdhN1lDMpTqEFwHXTVK9rZ1eTxWDvPdI4NNeuwbGt
      uX5hKol8jkoiF7ZYSaQXQk8GAM/z5scPLQC2FSGTSTObCiDZyC/+pI3ey5cYn21kTSKmksgF
      qCRyYYuVRDqRcI4dx3Hmxw/lt5FJjZPK2iRjs3QPu6xviHPzmwtMx5Ik44Xp9ifyQ4TaJbJm
      2x42Pd62t+NIGEOLrChdnYrRFAAxmgIgRlMAxGgKgBhNARCjKQBiNH0rRBH6p/84iecv77aC
      d4+1s7+9KaQZlS4FoAhd6h7G9ZZ3W8HRna0hzaa06RRIjKYAiNHyngLNTo5w8uQp0n4UL5ej
      fe9Rdr3UhFWo2YmssDwBmKXzm272HP8ZNYkIMxmX4d6b3ButZH1dVeFmKLKC8gSgjIZEmt//
      7r+I2D45L8YHf/nnVC3a8SVg5F4v96cdXtm2kbvd18jEG9i6oUErhhStvNcAYyMzvPVnP6dx
      3U72NdUwmacix8vNMjAyzVpnnK6u2zyiltnRu6Qzq78CTEqXFQSL17FlpidwI5UkohY9167S
      tH0nldGFV4BcZoK+gSnWN9tcPzdE48Ht2MODRFs3UhOd6xKZzWbJZrMEAfzzb88te/IvNa/h
      g9e34jgOlvV0nem8PczvTvcue/xfHm3jYFs9rusCEInMLZjDj6aYmsniez5+MFfp9seVVkEQ
      zJd+PnnME57nEQQBtm2zpXkNkcf10k8eY1kWd4YnCXj6tHiuR0Dw3M/57P4srPmqqYaaCpIV
      8fn9PXns/dEppmez+H6A78/t79kqvSc/77P7830f3/exLJu21jps23ruMXeGJ/njJf+H/I5i
      EZvmusrn9p9KZxgcmVhwzov9jp7O+elj6qvLqa4sI5lMWnkvgh/0d9HZ+y2OBfeu9PDmlm0L
      BiA7m8YLokyM9jMzFlC/bSP9N7vBzbB/01YiERvf9ykrK6OiogI/CLg9OJZv199LWSxCbW3t
      c9vtyHgo40/PulRVPX+9s9C2MO2tqVmxsVd67gs9H2Gpqqqied3aUMfMGwCHDMmmbexorSI5
      k1v0fMmybGwnys6XdzCVs6mvS1JdFsOLVBCP6p1WKV55A9Cy4zjVk48Yn8py8N23iccWru+N
      xsse/6WW8sfbqtc0hDlPkRWRNwB9nSf4qjdFXWWUoeEU7//6fZKLXAOIrEZ5z0/SqTS1DQ00
      Nq4jbnnklnmDlkixyRuA9o7jVORSpF2bAx0HKHP0jr6UlrwBuHLiUx5mZrkzOMbMwB0eZtxC
      zUukIPIGoLquhrbdr7Gv2eO/T3Wij3Sl1OS9CH6p4ycEAdyf3cLf/sNxyuKF/Ro/kZWWdwUI
      grlP+EbvD+M5jhYAKTl5V4D+zlN82tnD9gNvcP/0GSo7jtBavvxVwAL+8a9+vOxxqhJakWR5
      8gZgbGSCN97/gO5P/5M7D3yOHzwcyk4ty+LgtuZQxhJZjrynQC8fe5UqAt745Xus37COCt3W
      ICUm7wowev8u1/pHsC2429XLhtdfo15nHVJC8gbATT/EL2+kvaUSf3i0UHMSKZi85zRN2zpo
      cMbpvt1Ly+EjtOqiU0pM3gBcO/UZ04l62ts2c+vMaUazi38SHPgeVy+c5vOTp0m7s3zxySec
      OtdJbpnfbyOykvKeAq3b0MSV85d4UOaQiiRI5unR5OXS2BVNHNpiMdgzgF/RwI62TURsa74q
      J0/xWaiCIJzQ+UFpNPWTxeVdAaYnUthWhsiaNo5vamQ8t/gKYNkOszPTpB5N4EfKqauN03fj
      OhMZt2AH/hO6Z1W+r7wrQDo1y+G3/oLBLz/k80sp3ty9d8H/l0mNM2OVsX5tGUPTEXa3r+Pm
      5U4qGlpIxiPYljW/AhSiS6RthfN2rW2VRldLWVyeAPi0Hf4ROQs2/+I9Gjf2sjZm43r+fCH3
      E0+a5FG5lfrH23bs7VipOYuEJk8AXC6ePsW0U0n92hqy6UlufdzHgR/9hJba8sUfJrKK5AlA
      jGM/f4vxkWEGH4xS2biRvR2txCP6NFhKR96j2bJsco8G+f2HJ+jtvsF4Tu+ISGlZ8uXcwgZ/
      kuu994nbuiFaSsuSDTIqm1o50LET16ng2wej1GxYV4h5iRTEkivA0LVrVG56mcj0OF98doJ0
      IWYlUiBLBqCpbQN9F7/m7lTAS1ta0bviUkqWDIDnWdiWS9yJsufo4bn3+0VKxJLXABND93n5
      tXfY0VBFVG+BSolZ8ogur6+j+8znfPTRZ6Rc3dkppWXJFSAajTA+MkokGegmMyk5S64AD3ru
      ESuvoCwWJaMVQErMkivAxn37ibe0cKNvlJpF+4OJrE5LrgDDNzr5w5cXmRqbIJPn26GDwGd4
      oIvee6Pgu9zo/JrOG334Ba4FEPn/yBuAgevn+fyr86RmXHx/6WuARHUF2ekM6Yf3oG4z5V6K
      6azuH5LilfcUqHXbXt4gSq5+M7m7t/GfWQG8zDSd31xm656jVMdtqquTDA+nyGUCKpMJ7JkY
      Wd/Ddeeaovl+YUoMPS+cb7H2PI9sNhvKWFKc8gbAdiJErTSfnTiFP/aQX+3c/Z1/d+IVHDh0
      lPTEGBO5OP03ztLVn6Xi6Cv0XDiLGynnx1ui803ybLswFVaOs+SlzfccxyEW0zdhlLIlj5SG
      7Ud4r3EUK15F5SIXwYlkDQnglYM/5ZWDc9tamlvn/rJAW0+RYrFkACzLIlmbvzXlQr1rRVYD
      3dsgRlMAxGgKgBhNARCjKQBiNAVAjKYAiNEUADGaAiBGUwDEaAqAGE0BEKMpAGK00AIQ+B63
      rp7h4rV7EEzzyUcfq0meFL1wKkeY6xG2bdcubt1KwcwkaStG69p6HNvCdef6hD2pCltpYVaE
      5XK5UMaS4vR/vL2NTlhaf2IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='1.a. Graph  10: Level 3 Assets 2012-2013 (millions of USD)' width='192'>
      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
      aIYmLgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='1.a. Graph 11: Cross-Jurisdictional Claims 2012-2013 (millons of USD)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1.a. Graph 12: Cross-Jurisdictional Liabilities 2012-2013 (millions of USD)' width='192'>
      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
      wrAaSKkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='1.a. Graph 2: Intra-Financial System Assets 2012-2013 (millions of USD)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1.a. Graph 3: Intra-Financial System Liabilities 2012-2013 (millions of USD)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1.a. Graph 4: Securities Outstanding 2012-2013 (millions of USD) ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1.a. Graph 5: Payments 2012-2013 (millions of USD)' width='192'>
      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
      BEBkmgRAZNq9ao8ejz4jevm/1hqrFGqYf+fHNzwj8V13rwKQjD4j+OnvrDVWrT+UAIgrk0Mg
      kWkSAJFpEgCRaRIAkWkSAJFpEgCRaRIAkWlrBSBNE85OjvCCkE63Rxz59AYjosDl5KyD/JlJ
      8W219gdhSRTx6pNnNHY2+dlHJ7SqJi/OLEqaRpgkJElCFEUkyZu0sLjs/PW6xhv8jaw0vWyb
      F8fxl+7jtkjdm5f8wvPqpqwVgDQJ8YOAOIVBf0SpUGE0W7JRKzCbWGwfPkRVVXRdR1Xf5A/b
      KV/qfZl+Q2u+r2ypgK7raJr2lf6Zt0Hq3rw4jl8/r27KWvesajne++D7v/yXjy5/hNc1IyFu
      kSyCRaZJAESmSQBEpkkARKZJAESmSQBEpkkARKZJAESmSQBEpkkARKZJAESmSQBEpkkARKZJ
      AESmSQBEpkkARKZJAESmSQBEpkkARKZJAESmSQBEpq3ZFiXm6OULcqU847FLe7vKaGKxvVnC
      siMePTm86XkKcSPWa7iiqJRKZQoFk6luM7E89molLvyUQhQQSGMsqXsD7lVjrOl0TqO5RU7X
      2d6uMZxa7NZL9L0AQ1WJpDGW1L1m96gxlskHf/uyMVa73QagXm8AUG00b2hqQtw8WQSLTJMA
      iEyTAIhMkwCITJMAiEyTAIhMkwCITJMAiEyTAIhMkwCITJMAiEyTAIhMkwCITJMAiEyTAIhM
      kwCITJMAiEyTAIhMkwCITJMAiExbKwBpmtLvnuH6IZ1ujzjy6Q1GRIHLyVmH9KZnKcQNWbPf
      RELOzHH06TMaO5v87KMTWlWTF2cWJU0jlL5AUvcG3KO+QBGffvqSg/02g/6IUqHCaLZko1Zg
      NrHYPnz4un+L9AWSutflHvUFyvEP/tE/BODgr//y0eWP8BonJcRtkUWwyDQJgMg0CYDINAmA
      yDQJgMg0CYDINAmAyDQJgMi0rw1AmiRyjY/4zvvKJ8GrXpdPZjPU8Zwn/+TXqN7FrIS4JV8J
      gBd45PMFCtUYUkC5g1kJcUu+cgjU2N8nF/hEhQK6L1f4iO+2r7wDqHqOd7/3wV3MRYhbJ2eB
      RKZJAESmSQBEpkkARKZJAESmSQBEpkkARKZJAESmrdcWJU346ONnvH+4zc+eT2g18kwmS2qN
      ElGk8ujJ4U3PU4gbsVYAFEVla3OTODEwsJlYGs16BStK0FYWnjTGkro34B41xopxVxa6maNW
      3+Zgr8VwYvFuvcR5f0JRVVlJYyype83uTWMsRdV49PQ9AJqbDQB22k0ADh8Wb2hqQtw8WQSL
      TJMAiEyTAIhMkwCITJMAiEyTAIhMkwCITJMAiEyTAIhMkwCITJMAiEyTAIhMkwCITJMAiEyT
      AIhMkwCITJMAiEyTAIhMkwCITJMAiExbKwBpmnB8ckIcujx79inWYsZnL0+wZiNevDzmTRqh
      CHGfrN0XKJ/LMRtOODjc5rNPhzxqFulaLhUVIukLJHVvwL3qCzQc9Gg2m3RfdGlvb9KdL9mq
      FZguHLZV9XX/FukLJHWvy73qC/SDv/v3ANjdv/y//b3Lnzuf//SvfWpC3DxZBItMkwCITJMA
      iEyTAIhMkwCITLv982n3UNT9/8RnP11rrLqxi/G3fvOGZyRuiwQAiHt/RvDT31lrrLb/IwnA
      d4gcAolMkwCITJMAiEyTAIhMkwCITPvOnAWaWA698WqtsYWczpO9xg3PSHwbfGcC8MfPuvzu
      //jTtcY+2avzH/7Nr9/wjMS3gRwCiUyTAIhMkwCITPvOrAHuysV0xXDurDV2o2jyTrv2+nZ0
      8kfE/Z+vta269RTj6T97qzmKrycBuKI/+PCI3//DZ2uN/dH7u/zWv/zHr29HJ39E+Gf/aa1t
      9fd+QwJwA+QQSGSaBEBk2hsdAoX2kJ89n9Bq5JlMltQaJaJI5dGTw5uanxA36o0CECcGBjYT
      S6NZr2BFCdrKwrsHjbHeZtvXt99o2/RLddM0feNtr6Pubct0Y6wvmMUytfo2B3sthhOLd+sl
      zvsTiqrK6o4bY6lvse0X4jfaVvlSXUVR3njbL0RXqHvbMt0Y6wuqZvDw4QMAdtpNAA4fFq9/
      VkLcElkEi0yTAIhMkwCITJMAiEyTAIhMkwCITJOL4b6lfvu//zH/80+P1xr76z96zL/+5z+6
      4Rl9O0kAMij48PdIQ3etscb7v4Faf3izE7pDEoAMCj78PVJ3utZYrfXBdzoAsgYQmSYBEJkm
      ARCZJgEQmSYBEJkmARCZJqdBxRv5r//7Y+JkvW/B/dNffUirXr5yTdcP+ff/8f+sPf7f/ou/
      T7NWWmusBEC8kd//w2cE4Xpfe/3+YfN1ANI0Je58uHYdrfUBaHkAkiTlo+Ph2tv+4vzSKCDu
      //nXjpUAiNuRJrj/7V+tPbz44/8CW+9fvaw7/ca6bxWA2ahP52LB9mYJy46kK4T41nqrRbDt
      x+zVSkz9FCMKuP0eBUJcj7cKwGa1xMiP2d0o4KHxJn0ghLhP/hI4Q+0PYe60MwAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='1.a. Graph 6: Assets Under Custody 2012-2013 (millions of USD)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1.a. Graph 7: Underwriting 2012-2013(millions of USD)' width='192'>
      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
      Ie5f/KsXtvv/EIvJ7m+4W8oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='1.a. Graph 8: OTC Derivatives 2012-2013 (millions of USD)' width='192'>
      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
      L+c2mgcnOQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='1.a. Graph1:totalExposure(2012-2013' width='192'>
      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
      awAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='1.a. Time Series' width='192'>
      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
      UTMWj7/7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='1.b Graph 9: Trading and AFS Securities 2013-2014 (millions of USD)' width='192'>
      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
      vEe3W/axFdMlWvT44KTP/g0tnJVad6/UVMslnF3w+HR4rZke4eyCJ6dD9rrt622nZzw5G9Hd
      qzTLI5ic8fT8WlMtj2B8wtPzCXtXPrtFMD7h2eWEvU6r2rbFdnTC88spe52rbVtsh894fjml
      02nXvp+880P8TMK1DBAE2p0WP/nRD/EzGccqB9btdouf/OhPCHIZ19JLX7vFez/6E8JcwTFL
      rdP2eO9HP3z1CZCFKy4vL+l02sz8ajoyWHJxeUm702Z+S+vRbrdYXGn+koteqS2DaurRX3DR
      69PpfITWbrEKq6nH7ZyL3oBO22NdadFmwUW/1DZRpa1LX7vtsg6r6cPNnIvekHbbYxOVWrCe
      cd4f0m67bK+01Yzz/ohOy8WPS82/0tpOrW2XUy76Ezoth6B6iLBZTrkYlFp4pS0mXAymtFsO
      UdU9WS+mlWYTVb7VvPR1WnbdjVnNJ5wPZ3RaFknVPVnOx6Xm2XWXZTkbcz6c02lZpFX/ZDEd
      cz4qtatpy/lkxPlwQccz6zU8s+m1VlTPQmaTEefDJZ2WWXd3puMR56Nl6au0yXjI+WhFxzPq
      c2MyGnI2WtFxr2eGxqMhF+MVbU+vxyjj0YCL8ZrOC1qEipiHdbx+75JYeEHrXxILGkJ2rfV6
      lySChpAFN7Qeiai/+i6Qppu0D47J4pjjwz1EAQRRpnOlHeyRxDGaYZZaEnN0UPmkypckHO13
      SOIY3bDYOzgijRMO9zt1vO7+EWlSale+K+2g8omSUmppykG3XfpMi+7BEWlSaqVPZv/gsNT2
      Sp9hWhwcHJImGQd7LQQBRFnh4OCQJMnY32vd8iVpxn6n9ElXvjSn2/FI4hjTtDk8PKi10qdy
      VGl77cpn2aWWFOy1S5+slL44Lei0rn3HteaWPlnlzuF+rcWVr9Sg47l1vCut7ZU+y3a4c7RP
      nEHbLX2KonL3aJ8oE2i5Tu27d9QlSktNEEBRtVtaHMfYtltpIp5jVz6V+0f7RFmplT6He8f7
      xJUGVbzj7od8bcdANVxMo7za64ZJ2zZQDQdD10iSBNdr0bINNNOpfYZh0rJ1dNNF11TSNK18
      +qufBs3CFe+9f4qum8irmDueShosefeDMwzdRFnH2AK3NHUdc+SqpP6Sdx+XmrZJMCmv9j9+
      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
      FQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='1.b. 2013 and 2014 Values: Total Exposures(millions of USD)' width='192'>
      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
      d839f43va/l4nlbUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='1.b. 2013 and 2014 Values: Total Exposures(millions of USD) (2)' width='192'>
      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
      d839f43va/l4nlbUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='1.b. 2013-2014 Values: Total Exposures' width='192'>
      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
      mQwlAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='1.b. 2013-2014 Year on Year Precent Change: Total Exposures' width='192'>
      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
      jjypXACjkYfcayFJNgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='1.b. 2013-2014 Year-On-YearPercentChange:Total Exposures' width='192'>
      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
      zlyUcvmQ/w/ZXhKFDrUX/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='1.b. Graph  10: Level 3 Assets 2013-2014 (millions of USD)' width='192'>
      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
      67cO92vt/wcJYOH5MhdUoAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='1.b. Graph 11: Cross-Jurisdictional Claims 2013-2014 (millons of USD)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1.b. Graph 12: Cross-Jurisdictional Liabilities 2013-2014 (millions of USD)' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='1.b. Graph 2: Intra-Financial System Assets 2013-2014 (millions of USD)' width='192'>
      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
      0vf/A7/x/V01Ywp/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='1.b. Graph 3: Intra-Financial System Liabilities 2013-2014 (millions of USD)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1.b. Graph 4: Securities Outstanding 2013-2014 (millions of USD) ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1.b. Graph 5: Payments 2013-2014 (millions of USD)' width='192'>
      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
      H/0NeI3RhJo/HRxVAcT/939B+tl/v3tt//4/eItbU/NNoG4C1Rw1dQHUHDV1AdQcNXUB1Bw1
      dQHUHDV1AdQcNa9VAEWRc/3qBWGcctsfkKcRg+GYLAl5eXXLG7mhoKbmLfDa1wGKLOP5T35E
      98EZf/zDl1y2dT6/2uDIMkmek+c5aZr+3OVkWfbWcvKX5otnWfaVOeTvwn7UuTeXe70CyFPC
      OCID7oZjHKvJeLGh1bFYTBecffQhkiTtbvD+/0OW5beWE0L8XPcu7Eede3O51yoAIWt8+p3/
      j7+99FH5z+v9eYKamm8WdSe45qipC6DmqKkLoOaoqQug5qipC6DmqKkLoOaoqQug5qipC6Dm
      qKkLoOaoqQug5qipC6DmqKkLoOaoqQug5qipC6DmqKkLoOaoqQug5qipC6DmqKkLoOaoea1b
      Iosi4+UXz2ienjAeTnnw4Jy72ZqHJw7D6YZvPf7oV72dNTW/El7zqRASnW6HJFgTpAWTpcuF
      IXOz8mnKkNZPhahz72ju9QqgSHj16obLRw+x9QBNwO3S46xrM534nEvSO/E0hfqpEHXuF3sq
      hKTxz/zObwPQ6/Xu/b/eg/Lf6HUWVFPzDaPuBNccNXUB1Bw1dQHUHDV1AdQcNXUB1Bw1dQHU
      HDV1AdQcNXUB1Bw1dQHUHDV1AdQcNXUB1Bw1dQHUHDV1AdQcNXUB1Bw1dQHUHDV1AdQcNXUB
      1Bw1dQHUHDWv/VSIF08/J4xSojzFMlv4rkvnxCFJpPqpEDXvLK/5VAiBqlu0mwqxLOj3N1x2
      myzTHNVbE9RPhahz72juNQsgJ44i7HaX3HP587/5EXfTNZ92Ha4HU2xJwn0HnqZQPxWizv1i
      T4UQCp98+mn5ot0E4EHvDICPP3zvdRZRU/ONpO4E1xw1dQHUHDV1AdQcNXUB1Bw1dQHUHDV1
      AdQcNXUB1Bw1dQHUHDVfKYDU8+iPBjz/yecEb2OLamp+jXzlSrA3G/NsuqQdBMSA+RY2qqbm
      18VXfgEa5+eYaYzkOBAkb2Obamp+bXzlF0AybP7iX/zdt7EtNTW/dupOcM1RUxdAzVFTF0DN
      UVMXQM1RUxdAzVHzmjfFFzx9+pRPPuzxw8/69C46jKcrLk4cVm5S3xRf887ymrdECprNJkVW
      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
    </thumbnail>
    <thumbnail height='192' name='1.b. Graph 6: Assets Under Custody 2013-2014 (millions of USD)' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='1.b. Graph 7: Underwriting 2013-2014 (millions of USD)' width='192'>
      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
      09xi7YaOKstYnf4N7LBiLVNDlYsu3i6TaHVfZK/lCoBiYWk5S7fodsT+CkFt0dQyVl5x+Y/8
      FaLWoqFkrEsWekskvU1DSVn7JXNXyEYbU0mxSxa4SxSzgy6lOEHBfHuJanbQpAQ3LLoE3nqJ
      1uigSgleydz1Aq3ZRRVivHLQ6qwWGFYXRYirG1z2coHZ6iETE5S3oO3lgka7h0RcdTHWiwWN
      zgFiHlVdjNViTrPTR8yianC7nM+xun3IwootZjNavT55GpKUI9n5bEbnoE+WBNU9jtl0Tqd/
      SJYE1b2L2XhG9/CINPbJuR4sz+gdHpFEPtc3BybjKQdHxySRV+2jyXjGwdEx8RZbrByOjw5x
      7M2Acrl2OT46wt4aPC6u2ep53+GOb3XNtn22x9HRIevVls8pmL3a3Gxb3ejzOTo8ZLXtK9l6
      uWFrx+fosM9qubkpt3aDn8he/TSorNO2dJxYpKUXZ0lJ1mk1NdxYpKVdT4MaWA0NLxGxSiYr
      BlZDxUtEmtdMNWiaKn4i0SiZoho0DYUgk2ioJdNNGoZCmEmYSjm9qTcwdZkokzCumdHA1CWi
      XEKXy6lMo4mpycS5XJ3FNbOBoUokSGjXvjJhLUWqpm71hoUui2TCLtNkgUyUUcqzuNFsocnF
      rfrrqVujWaQyIMqUFwBMq40igiDJSNfToFYLRcgRJLmaQm2028jkiJJSzdI32h1kIUeSN2f2
      ZruDlKfIN7LNNGi31yNy5mjWwQ4LnTm6tTnr9npdAnuG0dr1+es5Rqv/AjO3zuK9XhdvVZwc
      Ktbt4a5mO6zb6+EsZ8UJoyrbw17NaHV227Jezmh1d8uuljPavcOdssvFjO4O67Kcz17HfQAD
      QxVB2lz+RdXAUMQy16YMANVAf55pJrpcZJFedwnkkonKppsg6w00SSjm90umaCaqJCDK6obp
      BStybQqm6g1U8TlmNJDF4hZ8NedvNJEFivyb6/l9s4Es5DczRavuAxiNJpKQo6jqDhPzkpXd
      GLNplUzbsEYTIc9RNa26EdZoWjezLN1hTcuCNEXTt1mLPMtQNb3aR82WRZ6lqPqGWc0mWRqj
      GY1dlsRo5VikYBZZmqCbWz6rWTDD3CmbJAn6Tn0WSRrv+JrWTb4mSZpg3FCfsdWWZslM83lf
      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
      y8YgiPz/PZYwnatsVaYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='1.b. Graph 8: OTC Derivatives 2013-2014 (millions of USD)' width='192'>
      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
      tQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='1.b. Graph1:totalExposure(2013-2014)' width='192'>
      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
      rTp/8czQi5yzzXmXzL3AKbwut3ymaTm+7S6bLyJf1sVL5251Ifl8Ad+1Fy6S1LmbLp18OXdl
      BWBoMidHx2hG+oVO12ROjk7WnMTJ8aY7XXfqzOkrx7/aVsfzXWrpdOVyTlPg9Ph0zcWcbHMn
      a06OOT05xUhlX+hUObqcU+YuvSW34hQ54vTkbM2FG06VQ05P15w0c6k1d3Z6Riq9PGZXpGCr
      O32ey6w4nufOEy6OfNq9AYVSZeHsUY92b0Ax4bq0e8MN1+kNKZaqC3dlBVCqNzmoFWi1u1vc
      cvpgud5kv5Zfc/vsVzdds5Kn1VlxjX2alVzCVba6g61ub8u6M9dPunKW9oqrNvbZK2fW3MHM
      dZOuUcrQ7i5vvFT3DqiX1nJ7B9SLSVfbu0a9mN7ueoOEqxXTiT5qzZnrrLh68xq1QmrNHVIr
      GHR6w6TLr7n9a1tdJW/QWRlLY/9w5vqruUMquW1OT7Z3MHPdXjJXzml0+6PEtuFNMafLB+Te
      uXMXvCmTqbvi3iX2rKS7/S6RZyXWvbJzgM75KaGSplJenrW2t7oTIiVNdd2pmy7W0lRLK+7s
      hFjLUClFL3St5zi0DJXiijs/3eJOQM9SLsUvdmdzpy7dxdkJkp6lssVt5IwsZW3d5TacvOGO
      Udbc+enMldZdKkdJX3d5Vl7S57gTlHSBkhEnnLrmzk6PN9z5yTFqpkApWnfFra4YJcenrbnO
      xRmVRhNJXl5IOTo63uqqjSbSyhPFR8eb7so+Aaq1GsN+N/FcyHZXZ9jvoq273qYbbLjac51u
      LC+D1i7ptq37rN/1MW+4+qa7bL+vMr7+lvGtu1p9i5uva6TSm25bbt11O5vtbbj6pqtvcfN1
      N8ZyCVeuVmm322Syy8OiWrUyd9lNl9l02ZV1r6wAbNMkn08eYrzY9VfchHw+m/j43+os87lu
      tY/ps9xKH1Nzy7rPc7mXu6lpkstlE4cYU8skl0se2lzamTPXWes3l8skDjuml3WWRS6bbO+F
      br29bDrhrC3uWa67zfXXx5LeMr61PuZutT13amGoMsPxZLmu7WCoEqOxueLsDWdNZ244Wq57
      ZQUwHI3o9MdkUssuRqMRnUHSDRdOWnFjugOT9Mr9guHwsm70XJda+VgfjuZOX3PDLW606Xpr
      bjQc0R+ZGCuHGMPhmP5oiqF9BTeaOT3hRjO3cr9gNBoxGE8T9xCGz3OT5LrD4Qvcyj2E4WjM
      YOIk3GiLG47GDCcO2jYnr7oRQ9NJ3EPY5kbDmVNXc4MBkWLgmMMV1ydSUtjmYC2XTrrhpruy
      c4D6XhNJH8HK89i1La6+10S+jGs2kY3nOW3NjUFZukaziWKMkVbd3ld39W2u2URJra3bbKJe
      yu2hpiZIK9e7F27l6z0ae03U1AT5JW5vr4l2CddoNtFGX9XtoY3MZB/NPfSRiawam05bcXtN
      9LGJ8jLX3HS15gHq2CSdW17L398/YOr6CdfcP5hdXl7Lrbur+4mkOMJ25g8izZHiENvxULRX
      d0QhjuOhbnUrNwyiaObUNed6KKsu3uZCHNdPuHiLI3rdLpo7Oek8H1VZujgOcb0AZdVFX91x
      SfdKffghyspJZhzO3coJ6rOcvMWt5qItjjgESYaVX5cPgmDDhXMXJ5y/4f5/WVQvluBEzCgA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='1.b. Time Series' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3. 2012 to 2014 Values:Total Exposures' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='3. 2012-2014 Values: Total Exposures' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACkCAYAAADBuSFLAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd1QU5/rHPz9XdBFRxALYEERBEIQAIhZi0GjsNXZDLAlqYmw3aoqxRK+J
      mqs3ahQjCnYTsaBCxBJjjYoCIgiCNAtgQUCBVdjM749dYBsLaozes/M5x3Pceects7zPzPPO
      zne+/ycIgoCIiIFS7XUPQETkdSIGgIhBIwaAiEEjBoCIQSMGgIhBIwaAiEEjBoCIQSMGgIhB
      IwaAiEEjBoCIQSMGgIhBIwaAiEEjBoCIQSMGgIhBIwaAiEEjBoCIQSMGgIhBIwaAiEEjBoCI
      QSMGgIhBIwaAiEEjBoCIQSMGgIhBIwaAiEEjBoCIQSMGgIhBIwaAiEFTvbIdIiMj/4lxiIi8
      Fv5PfDmuiCEjpkAiBo0YACIGjRgAIgaNGAAiBk2ld4H0IS9M49yvO9i5P5y8gdvY7metUphC
      yNxZrPr9FiV12tDv62XM8bVCAmSfWsXCH0OJSsun2KgOLTr7s3TxcFrVBPKvEvztfDb+fosi
      42a8M3Eh8/xcqANAOsGjh7A6UXUUfflP5AJ8APIvsuqTuey+nk/1Zu8wceE8/FzqAHJyorex
      dHEwZ9LyKdZq9zWTFc6mKDfG97IEotnkv44LyiKJsQVOAycxqWtjJED0Jn/WxXZh2ooxOEpU
      2pBd4KeZm4jxmEzAeFflxmIyTgezJeQKt4rA2MKJfhM/pltzI2W5Zl/N8B47mVHu9SlrWp7P
      jYitbDsSR3aRnBqmLWg/8mP1fcjj5KqvCakxiuVTvJGqDCt6kz/r7g9j6ZxumKsc76IwK74p
      G6cKBcmEB23hSFw2RRJTWrQfg/9YV8yJZtMmGK9WJ4vwRWFYfTMe1a0JO+eyNrE9MxcMxkZl
      uzw/lj1rgzmT9phnNUxp0a4XCC9MmrDNf4wwL+iUsGWOuzAqKE2lrESIXNZD8J25V8iQCYLs
      RqDwQYdRQukuUQfWC6eS8gWZIAglBXFC4AcdhB4rowRBeCAc+LSDMGpVlPCwRBBKHkYJq0Z1
      EGaG5Snb/UOY717ejjpZwp5JpXVLhIfH5ws9fOcLfzxR1FvUe5oQdDFbkAmCIMvYK8z09RWW
      Rb740f+tZIYJgWGZyg9RQmBgVFnRs5x4IWTxHGFXkrI0MFAIC1shbI0rUWui6M+1wsodO4SF
      KnWfnFstzFkZJsTnPBMEoUQoSj0mrJyzQvj9Yeke+vsShCLh6uY5wrzNF4S7RYr+nj25JVw4
      ckm4p9p57u/C2h1Rwrm1a4U/i9QPLSowQAgJWSwERqkUZIapjVOlQDiyeI6w9vRdoahEEIRn
      T4Rbp/8UknSMtXT/sIWBgvrW68KOtb8LUSErhP3pqtsfCsdWLBZCEvOEEsXBCjdPbxZeIgWy
      ZvT6rSzy64K1VLPsAmF7azB4wiCa1YSarfz4ZEAWew7FA+Da358udqbUBCS1HOn6dnMe5uYD
      cVw5b0uPga6YS0Bi7srEMR35I/QoDwHu3CKVOtSurWM4d44ReqkjYya6Yi6RYO47mfE2hzhw
      qgBk7swMXYWfZyNqAjWbvYWLZR4paQ9f/PD/IYzqtWHwkHbcTsoq22bl5kj2lUTkZVtkxFx+
      hqubmUrNLE6dqMagSb1oU88IkCBt0Y1JI+px9nRG1frKOUvEkwHM+bA9VlLF+d7IpCnte3jQ
      UKVeXlQ00jbOuLnB5RiZRqvVse3dHdn+I+jutRx5/DEutfHHv7MVUglgZELTzl7YVVJPjYQo
      7to44OpmQ3KUao93uFXQjg6t6yiuXEb1sO384StaA6QnkVDsjrNj6QYJTZo1JTMlnQLV/Z4+
      Jvnot8zZLGXqB50Ae9q4JhKxP5ocOSAv5Gm9JlhFx5MIkJdLDhY0rK+jz5tJxNm74GhSusGC
      ZtZG3EhJB6kJJirpQv7V/UQk2tPBQ1dD/wNYuuGYfYXE0giQxXD5mStq81+Wys2GXnhonJyk
      zu1omJxCXhW6kafepKa7GyZ695IRH18DJwcJUkdHnsUlqARmaadeDPa6Ruj5Al0NlJGd8pA2
      bjZI9O6ln9T4u9g5WYKNI42T4yg/bbTCvfkZ1geEE3O7gGLl1pdaAzwPTZrZQNg9HgAmqrm8
      hSefrVrDaFsJYMHQb5dxc/ZM+njlU2xsjksbSwqLbSkByM3hAYeY6XEIMMbcrgOjvyzN83X0
      2dyWzNQHKluekrR7DtPXJNFh2VbGWOus9kZR/Og6B0MSsRs7UmWrJV6uOYQlynF0lCCLuQxe
      46nL7+W75OaSU91KezJJJFQvKKIIqKuzrxQcJyj6un8vi1pWpRGksl5oMpCF3/TCEkAWxeW/
      3JgoBaQO2GeGESt3xVWjY8segzD77gip7dXzclXu3cvD2EPPl3FhHf4XNDd6Mbns/6lEJdvg
      NhigFW3qhRCV1YtelgBSnMd+SZ3zB9ixai4BJRZ4j538zwXAnVupYOlFAwCs8dseiZ+8kJzU
      s6z9ojfj+wazyc8WiZUvX2715cvSiqcW4HHTRHEW6jiP85HzFNufPuba9k/5yH8xVseW0UNX
      nxkpWDVU9Ig8hZDpk1mR1Zklv/yAr9XLnGdeMSp/aMWicyqjmqvvYu7mRE5YInJHexLiwG2U
      FHJVdjAzw7xEjhzUg0Aup8TEGGNdfTWwp9uIqfSwLG3CnMIiGSAFXBkfEMB4sgjfFFXWnCzq
      Mk/bjlUufC1xeyuTsFg5rpoRIHGkd6cItpzOYbqD7sNu1KguKUV6vhcv1QU+lC6Cy0iN4loz
      RwYrOsT5LSsOR2XRq5fygCR1sO48li86j0L28Aa/b13zigLAuhUORnuIjQcfRwA5d27dxsrW
      Wv1yKqmFud27zJt6Fo+A09z2s0X9pCzn4rnTGLnPQes7q2lK2/ET6PlTAJkPgJatcEq8QnwB
      WJsAZHMrvZjWHtZAPqe+ncyK/FFs3+WH7Zs293NzeaT6WesPrQNzN5xywkgsfsYVmRujNNdh
      Uhta3t9LpMwdL5UyWWwM9+26l5/9vSYTMN6Zh+eD2JDsiq9jnbKAkdq0JG9PFAXe3hWkQTJi
      ouK5ETMb/53lW2t1SUTu6qh19THv8h4WC8OIb6079bSwrc/1qFTkNi+WBmVcvcKdk0fwP6my
      0daanF6W5XegAJAgrd+GXsPcX9XvAF70HvyMvYH7uPUUniYFs/ZAXfq+6whEExpwmuScQkWu
      +PQeR0+cx6iJFQ2Ah/HRJD9+iuLW5Rr+u6c6g4d3wwSI3rWK0LgsCpXrg/hNgRyp2wqbBkCT
      7vT3PMe2jdHkyOXknFjHpjhfevqYwJ2DBB5qwKRFb87kl+XnUwzIZWkcComhaSvL52zBHDen
      HC7tvojMzQ2t+xBY4uP7F/vWh3P9UTEgR5Z2nPW7HtGpi8blBAn1vSfwmXc6QWtPcrc0ibf0
      oU+tA6zae52HMsXG4keZ3CssPYgYLt/ryVcBAQSU/vtpGu4JKusTtW4c6N8rl32/Zeo8Iolj
      dzyvBxBwJhOZHCgu4PaZCyRX6fvIICqqMeP/qzKWgKUMI5KoHIA4Dm+9yO3HMuSAXPaQi7+d
      eYkrQHowo4espvyW/BA8VgN9/0PkAh/cZ65jytxZjOq0RPE7wJK1TGwNYIVZ0Qa+HvElyTlF
      YFSHFp39CJjXAxNA9iiChZ9O5np+McbmLvRaFsRMd8WstXW3JWzpBFZdzya/2Ig6bd7li/Vf
      4GMCYMGQ7//LrU8U64fqzd5hYsA8epgAl5OII5G4IR6sVjkE+6kh6r9d/IM8vrKBRTuTeFaj
      AS5DPmPSc93qUGDu5kRWSCJdh2pPfwATb3+mlASzZeG08t8BpnxGV3Odu2NiN5hPhp5k7dq9
      vPfhAFrXMcHV73PkOzaw9PM0Hj9TpGTt+o7ADJAnxFHUZSBq4SRxxMdzH6eU6xPtMfWn7eEl
      hNm+pWMElvSYPhF50Bo+3/pAca++/Rj8O1fhy8iKI9muK33VvgpzOnU1ZW1UDt26WWHTYC9b
      F24l7fEzxe8rPSeKT4OKGDbioxAiBo0YACIGjRgAIgaNGAAiBo2oCRYxaMS7QK+YwsLCyncS
      eW2IKZCIQSMGgIhBIwaAiEEjBoCIQfMaNMGnWOAxk0OajdlPJWS7Hw3iQ/h+RQC/X82hCGPM
      XYawYMVUOppLOLXAg5naFZkash0/a0gPHs0QdcEwff8TyQIW4KFd8bU+CwQQu20Gmy6XfpJg
      3MSFgaNH017tUe18zqxbwsEaQ1k4wVPlobdsji3/jhPNJ/HtcPvypydjt7E8+10+724BxLJt
      G4wZ46wslBG380euvTWD4fZGqFF8h/M7d3Lw6h2KMKahw3v4+fnQxKi83RnlgwXAffxKyppW
      JWkPCzYm4z5lLv1Uv97sYyz/7jA1Bn3DNJ96alVuH17CD8dq0Gfu5yiGrt0f7uNZOcZZcVwz
      NlFaKjFugsewcbzvWq5TjlUcOGXDK0zl2I6dnEi4T5GkNs3dhjFuhPPLBEA6u2bOI9H7Y7zt
      9/KbWpmcy/+ZzE9/TWLH2UE0ytjExx/8i227tuNn7cOCyEgWlH8r7J7Yh9AuXbEG7tyV4TFr
      C3MdLKlVco+jS8cya74th1b3x2dBJJHlFcnePZE+oV3oqvyS01MTK5jUC4hUr8jEPqF06fq6
      FTHujF9Z+kcqJvfGYX4OOY/Dp53Lxfr5V0loOIaheReJk3nirvqwl9XbeOcf4vdse8WkqYTC
      2D0cNhrELM3JTyGXgn4m2mYUs0e2xqyajIyzm/k5oBrTPu1M6VStcMJrkBSTS/cxTsRcuw3W
      TdXKrN7rA1djeeTjQ3kI3CYmwZ5O7qlq++rtrywYoDj3Br8Fria0zgIG2eraOZsT64JJ7zSJ
      b8ZZIv2rkLuXr5PDS6VAL64JVkUev4fdcb74DVVMxibdR9PfyZJaEqBmI3x9PCjOecQT7Yrs
      2R2Hr99QpYbgDrdSoY5OwbBaReL37CbO14+hr3v+q2GEWWsvXExlqGpC8q/GIrV3xNkFouM0
      9ba1ad/LgchDl9Es0aIwlr3H6zJ8UCvtZ+2zz3GqWj/GdW+NmREgkdLcZxxDzC5w7vbzHkcS
      MVktaOXsQvO0GLSqS5xoZ3aVWFUBxO0YEqzbYf+8XSkxMmtNv/5tuZOSrbNcnniSqNbj+LCD
      pVJrXIvGHdyx5VWtAaqqCaaA40HbyBswlG6aigt5IVmXgpn+fSR9/QehOVcLjgexLW8AQ8sq
      5pGbAxY6BcNqFQnalseAod0q0br+s8hlOdw4uIcbLZwpP5nLSEysQZtWEqT29jy7nqStt23a
      jT41T3I0XdcD+KUUEv1rBHUH9cZahx5ClpFKA3dXDU2BFMe2DUhNy3++A0lPINvGAQuscbBI
      JUFrTlbDsZ0ZV1Ui4HZMAtbtWj1fP8/BvbRHtHax1imyeU2aYCXZh/jlhBXDdrRXG1xZrm9i
      w8C5gXzuo6n5zebQLyewGraD9mUVc8l5AIdmenAIMDa3o8PoL7Xe/ZN96BdOWA1jR/s3QRlz
      mU0zlJlszUa49h7LRz4quYwslui/XBgrBaStaJV9lHi5M85qQ5fi3MeTP/ZcofAjT2ppdbGJ
      GZehpscEvtU1+4G8vFwkFtplEomEIlkRKL/By5tmUJ6VNy7P11VIv5pCc5d+ANjamxEam013
      C/WdJI6eNAwsTYNuE5PWGs8+kK+h91XvD7W0R5Xi3Bv8FpqOw5ihOo/vwf3HGFcgsHtNmmAF
      N/bvJu7tj/hPa/V9Fbn+Ux7fvsre7yfQ/8JX/LrAp3wi39jP7ri3+UitYkfmnY9EoRh+yuNr
      2/n0I38WWx1jWY/SkLvB/t1xvP3Rf9Do8jWhsgYoLuRuYjg/B2Uz4UN3agGy2GiethmuPDNb
      4Nwum6PxcpydNSZrvU70rPcDYUlvoTUF3MezckxLLv28jANJbRjaSnui161rhlyupR5GLpdj
      LC1TD1dhDZDO1YQmOCjmPxLHdlhExJLd3QK1EJDY4Vr3D2If+eDzLIG7zV3oA8RqDV1Pf8rA
      BqhR3w6fwR/zTgXroAYNTUmrIEd8NSmQdSscjC4TW5by69AEF0SwMSiPAcN7VPB2tpqYNvXE
      71+jaHDoBNFl2wuI2BhE3oDh9KjwtW41MW07ngk9i7mTWf5WiIKIjQTlDWB4xRVfH0a1aNx2
      CF2rX+cmADLiriZyM2Q+M2bMYMaMGXx3+Dbx8cnaaRASWnXrSNaRs+ra4jJq4Tl6CLJ9O4nV
      8WSGtLkNDy5Ha6wjZMRfe4BNi+f4rm5f4+rds/ykHO+Mf23i8u04ErUGJcHOtS4JsY/Ijk3F
      0uUFFmPu41m5cgVfj3oLS7tO+NibVqgjbtSiHjeupuv43l7Z7wD6NMEKSlORwWqpyB2ObQ8l
      7vZjnoJC93v8BCnNrbAsr6hImwarp01E72JVaBxZCsEwhfGbCDxSl1Y2pdec0rRpMG9E9qOF
      HFnGCf64pXwDhiyO6PvvMGvlSlaW/lsxiXZJ0STr+kvW86af9SUOx1TwWoVazowc25CI7ZfQ
      igGLjvj8dZDNx26QqxAqk3FqMyG5XnRsqqOtCrgdE4vlmKXl4125km8GQVSsdlhK7FypmxDB
      yVRLXmT+K1uhvudY/L1usTPwDJkVLIMk9l1xu7GZoD+zlFrjQu7+eZkUXiYFemFNMMo7ONG4
      Dl+ikYqY0VgayQr/VVzPzqcYY8xderFk7UTlfoo7ONGuw1mimcPYumMbtpQJq66TnV+MUZ02
      vPvFer5QCIYVd5uiXRmuVfF1orIGQIJxQwd8R47CFpAnXaeoYx/U5p/Enk5uhzibLMde65aJ
      BOt3u3Ls623wXn+dvUmsujPKZjUbjjVlanfVdwbVwvPDjyjZuZNlX5T/DvCRf2fq6WxJF9kk
      pNrQ+T31pXS99p2pvVHztifKNCiYPbWnMLyCFqu6Bqhl048J/c4QGHgQ35G9sTPVPMNZ4DvZ
      j2M7NjJ/90Oe1VD+DtBBLj4N+qoRnwZ9sxEfhRAxaMQAEDFoxAAQMWjEABAxaERNsIhBI94F
      EjFoxBRIxKARA0DEoBEDQMSgEQNAxKB5dZrgp/eIO7KXzb/+wtmWCzi/wEe1ImnnfmXHzv2E
      5w1k23Y/FcHLU+7FHWHv5l/55WxLFpxXegCrUe4x1vc/kSiazubUqoX8GBpFWn4xRnVa0Nl/
      KYuHt6ImevTC2o3/YxRnHGfDxoPEZReBsQV23gPwG+rOrWB/1ml5YUGTgQv5ptTupwJv3uhN
      +upC+KL57L+jVsLAhd/QS82fo5iM4xvYeDAOxdDs8B7gx1D3YiK06ivwmhzAeNfKfIfVy5U1
      mRwwHleyKhybW9Qi5uvuVNtJp0KfYaA4g9PBWwi5cosijLFw6veqfIIF4Y8lA4XJKw8I4T8M
      E9zn/6Fec5u/MGZekHBqyxzBfVSQkKZeURg4eaVwIPwHYZj7fEG9poInRz4XOn++Xlgzyl0o
      bzpKOLD+lJCULxMEoUQoiAsUPujQQ1ipNJH9Y772GF8rJXHC1nlrhdNZzxQfi+4K0ft3Cacy
      VXeKEgIXhgmZuurr8eatuG6mEBZYQXtqQ9sqzFt7WlAMrUQouhst7N91Sr2eTq/fynyHdXn9
      Ps/YdPkCq5dX7DP8RDi3eo6wMixeUNgmFwmpx1a+Kp9g8PlyHz9N70+b+toXGevR69m6yI8u
      uiuy76fp9G9TX/flSR5P0Po7TPzkPdTVv6709++CnWlNQEItx6683fwhuflQdb3wP0jObdKb
      euFtoRCoS6RWtBswnC5VdErS7837skNLp6mXN4qhSZBatWPA8C48r4mTLo/jV4len+GsU5yo
      NohJvdpQT6l7btFt0v/eGiB7/2pC20/Ta3H69HEyR7+dw2bpVD7oBFXWC/+TNHTB8/6vLN99
      hpSHMp1ijYqpgjfvSw3Nk/u/Lmf3mZQyb7D/BfT5DMtSb9LQy0NL9/yPSSL/FgpOsW4DfLyl
      PRLStctVNAoWnp+xas1opSle1fTC/yyW9Jg9A4uwPQR9u4NHJk70HvchveyqINWvojevTm7v
      Z77/fpUNOtYAlj2YPcOCsD1BfLvjESZOvRn3YS+qMjRVNH2HAR1ev6VrgCqOTQ/6fIZzc3Oo
      rsMa938oAOTEB63ifPevmFfRO3Cs/dge6Ye8MIfUs2v5ovd4+gZvws+2Knrh14CRBe0GfEK7
      AcUU3I7i18CfOTl1eoUmdqVU2ZtXF01VTK71Dq0dAz5px4DiAm5H/UrgzyeZOr0rlQxNr+8w
      oN8Ctopjqwh9PsNmZuaU6NA9/w8FwAVCtmXwsNgfr90qm2d6kKTxMixJLXPs3p3H1LMeBJy+
      jZ+tar5Uqhf+iYBMtXdUvEaMMGnanrF9ownOoJIAeD5v3pcfmglN24+lb3QwGVQhAPT4Dr9q
      9PkMS21acn9vJDJ3L5U0SPa/tAZQnMUjI0v/hTDVXnErc7ufNUSHEnA6mZxCRc769N5RTpw3
      oolVgyrohV8D98+yJ/w69wqKASguuEn4b3epX9kMe15v3hca2h7Cr99DMbRiCm6G89vd+pVP
      /jIq8B1+xej1Gbb0wfevfawPv84jpe457fj6V6UJRuP9nzPxOITy/Z9dOam8h19WU1GR/ygq
      qr3/c6aiYtn7PyvEyoyiDV8z4stkFPbDLejsF8C8HiaQr18v/FowtaFJ/i7WfJVMdpGcGqYt
      aD9yKqM0Paw1eBFvXjWqkGeb2jQhf9cavkrOpkheA9MW7Rk5dRSVDE0Lbd9hXukaQL/PsAne
      /lMoCd7CwmnlvwOIT4OKGDT/QymQiMjfjxgAIgaNGAAiBo0YACIGjagJFjFoxLtArxjxzXBv
      NmIKJGLQiAEgYtCIASBi0IgBIGLQvBZNsDwnmm1LFxN8Jo38YmOavTORhfP8cKkDICclZC6z
      Vv3OrZI6tOn3Ncvm+GIl4cV9glV0v2X7KH0MXhfy2G2syn6XWWUmWzIu/fwF++pN4d9Dyw3j
      kvZsILPbx/jUU/gCH76r2kq5T5eWL66SirYX3zlFcPBvJNwvAuOG2Hj2ZkR/V+qrPUqk7scL
      aL2jP//MOpYcrMHQhRPwVFWbqPn8SjBu4sGwce/jqtJB8f0rhGzbR1TGE55JjGno4MvIUd2x
      KTU6q8y7WJXCRPb9FMzZO0Vg3IROflMYZK/lmKbct9wz+BX5BMOpH/zZVWsc/d0aclLDaPDs
      2q+IaruAXYs9acQt9n35ITMC2nL8c3fkl//D5J/+YtKOswxqlMGmjz/gX9t2sd3P+iV8gpUU
      RLB2YxM+Ggc/33/xI/87kLSyp86fGciwUD6ee5Pkat64Pkghk1ZYAZBJygMrHEqdJaz6MPfz
      7lTBElg/8kT2bkmi7UcLmdjQCLksi+vHz3PjgSvemo1XYEqhIJ+rCQ0ZMzSPi3EyPN2lGlVL
      Pb6Kyb3xG4GrQ6mzYBC2ANkn+HFdIu1GzWJxazOM5DJybp4hMQtsbKGq3sWlpB8P5YH3DJZ2
      agj3T7Jhyzmy7XV9V+qewa9BEyzDfWYoq/w8aVQTqNmMt1wsyUtJ4yFwIWwvNQZPYJDCYBi/
      TwaQtecQWg7Dz+0TLCc+aD13Jn7Ce2+CNFjaHJun6dwq/ZyewhPrt3FrcIubpSeM/Juk1LXV
      soh9aR7d4XZjdzwbluqRLWnbZ5D25K+M/KvESu1xVJgY6/EqNsKsdT/6t72DwspXTuLJKFqP
      +5jurc1QSI+lmLfujnep0fVzehdLqpnR3LYhRoBRQ3vsTIp0jkfTM/g1rAGkmJioXGfzr7I/
      IhH7Dh7UJ52khGLcyw2GkTRpRtPMFNLVDYaf3yc4ez+rQ9szTZ+Y+B/FAmvLO6RkKj49uHkP
      y1YWNLP+P9KUnr/y9DRq2LX8+7tu4ITbg/2s3vcnaTnPq0cuR5aYSI02rZBI7bF/dp2kKjd0
      j7RHrXGpwLYVnt+7uOk7Hcg5qfA/K4w9yd22nXWeODQ9g1/TIlhOSshUenq/z7eRDfl0e2TF
      aYsubgQwdr6cb/bNVTG8c+STg6X5/lMeX9uEn7c3syMKkMevZfAHKUwMm/tGGeS16uFOyvFY
      5MRxNNWFd61B6tmdun/+TjYP+OOMFB9PHZfXl8YC31kLmD6oAy3MJTy9e4Wdy9ZxRrfFpG5k
      l9h6wZ733aVAHToPtiRiZ6xaMF3epHSLnDGHxWsPU9xzstJX+BnPnupoM3Yb2zS9UqtEIbEH
      zmPu40zesQ0cYADjOhsTt2sDxypyzlPyWiSR+ae+ZfKKfEZt34WfreqMtKaVgxF7YuPBR3EV
      kN+5xW0rW6zL/VWVNqn/rYJNqkL2eOHCNjIeFuOvrqXEI2kqIWov5fqHqdOMpg+vcjsdnli3
      V57trLGtHUZSdl1u1rLj7Vc+CCNqNX6LYT1i2XkbOlfRFU8Wd5XEm9eYPyOkfKNxB5Llztgr
      /6Tu41cyxvEhl3Zs4aazD/Zl5nVNaVF/J1fTe2NdwVVA2tyGB4eikbm6q0kY4689wKarxh/+
      wZ9crN2TCU2k0GQMbXdu42C2KZmNBvCxhhC+zDLVWnEVeA1XgDscDDxEg0mLNCa/Aq/eg3m2
      N5B9Cn9VgtceoG7fdylLil7AJrXjvPMqUspIQhRaSiJf5+QHwBqHJrc5f16R/pTS0q4GaadT
      +L+Wtq9GT/vgAqHHbvCgUCnHLEzj2PFM6lXZElJGXPR93pmlYuG6cgWT2iURrenhKqmP51h/
      vG7tJPBMpvIKIcGxmwc3Ngfx591CigHkMrLuPSyv9zzWrTVqUJQQRfJjOWBEM0dTrhzLo42z
      tohT0zL1NUgibUiKg8Q45f6l2CvPxu4zWTdlLrNGdWJJSR3a9FvC2nJ/1Re2SX1TaWZdnZ92
      12T8++XbpDY2ZO84Q+vpGgaimYf5bsZhlQ3lt0HVLVdRuXujY/vQ5lg93suGxancL5JTo3Zz
      3IZ8xPtV9QSWJ3G9qCN91D1cse/kxqGzycjt7TUCtxY2/SbQ70wggQd9GdnbDrReAMcAABpE
      SURBVFOr7kz2O8aOoMXsuV+EXGJMQxtP+rmX16mydWsdb4Z4byZw8b94KDemiccwPv3KmFPr
      1nLMbzrd1Rb36pap4sNwrxjxYbg3G/GXYBGDRgwAEYNGDAARg0YMABGDRpREihg04l0gEYNG
      TIFEDBoxAEQMGjEARAwaMQBEDJqXeBpUTk70NpYuDuZMWj7Fxs14Z+LCctshfTapyMk59zNf
      L9/OxVtFGJu70G/+cmZ3qg9Pb3H0h/ksD79KTpERddr04+tlc/C1koA8kxPfz2bxwevkoy6X
      VDSbw7mfv2b59ovcKjLG3KUf85fPplP9SspeE9Gb/FkX24VpK8ag9lZz2QV+mrmJGA9VN5Vi
      Mk4HsyXkCreKwNjCiX4TP6Zb81J9YGUWpUBxNhd3beKXi2k8fibB2MKJnh9o2jLptl8tG+/9
      YSyd063cKyArnEVhVnyj6fpSnMHxDRs5GJeteBW5nTcD/IbiXhzBovn70TY9VXlNOpB3chVf
      h9Rg1PIpeKsPAv919xm2dA7dygdB+KIwrL5R1M8K30SU23it16pnheuwW9XrSqmXP4RFvacJ
      QRezBZkgCLKMvcJMX19hWaSyVI9NakncGmGQew9hfoSybn6SEBX3QBAEQUgLGi+MWBIhpBaU
      CELJQyFq1SjBfdIe4YEgCFErewi+M/cKGYoOhb0zfYVBa+KEEkWrQtyaQYJ7j/lCRLZMEASZ
      kJ8UJSia1Vf2+ogKDBTCwlYIW+NK1LYX/blWWLljh5oN6ZNzq4U5K8OEeIXHp1CUekxYOWeF
      8PvDstYqsShVWIiW2YQKJULRg3gh7FTZDgr02K9GBQYIISGLhcAolQKddqklQtzWecLa01mC
      oqsi4W70fmHXKQ3T1rCFgm7X1Fzh97U7hKhza4W12oMQAkJChMWBUUJ5ibp9amZYoBCmw29V
      1/YXT4Fk7swMXYWfZyMUysa3cLHMIyVN8UhrxZJIOWd/2Ube0G+Z966yrqkdro6KU3GDoT+y
      88t3aVFLAhJzXN1awY0U0kgn5tJDugwYRDOllHLQhMEU7z1MNID8LL9sy2Pot/N4V6G1xNTO
      Fcf6lZS9ZqzcHMm+kqgiJJERc/kZrm5mKntlcepENQZN6kUbhccn0hbdmDSiHmdPZ+hsV9Oi
      tNRCdGqpTSgSpPXb0KuLnVo9/far1bHt3R3Z/iPo7rWUHG6nN8XL26JM7mjVbgDDq+4BS7S0
      Dc6KQWhJG6vb9qa7bD9H9A+iSrx4AEhNUFc27ici0Z4OHpXNqkRiLxfTob27zmfdTUxULsfy
      TEIPnKZuFy8caEob57qcPrCPW08BnvK4TiNs866RcAdIjOVycQfau+toVV/Z68bSDcdsFXsj
      WQyXn7miNv9lqdxs6IWHhjhM6tyOhskp5FWhG30WoiodVW6/KvVisNc1Qs8X6GpASUNcPO/z
      6/LdnEl5yPM6rcri46nh5IBE6ojjszgStAeB12AvroWeR98oqsLfsAh+StLu6Yz8JAKHZav1
      +vcqeMD9zIZkh09lqK83Hh7e+A79nJAU9aOU55xj1ZhhLM/9gPVf+GCChPZTVvJBtS2M6uSB
      h3cvxv37N25RQkkJ8OA+mQ2zCZ86FF9vDzy8fRn6eQgp8krKXjuWeLnmcEUZAbKYy+DVgbqq
      u+TmklNdoj15JRKqFxShyxix+NF19oak4OimOOveu5eHsbGyMCucRf7++Pv7478puryS0n61
      nRSo64B95hVidXxHlj0GYXbiCKl6vj/LHrOZ0UtKTNC3zJz+FWvDk6s4WWVEXf4LN8UgcLDP
      5IruQTDI7ARH9A1Ci9vsn688buW/l5NEylMImT6ZFVmdWfLLD4qFaqWYYFIXmvX8kpWLm2Ja
      PYfoNVOZ+K+NOO/1pzWQf3E5E6Ydw3LSWg6revnWccFv+T78Sj+nBzN6yJ/Urg2YmFCXZvT8
      ciWLm5pSPSeaNVMn8q+Nzuz10FPmr6ms+ecxd3MiJywRuaM9CXHgNkoKuSo7mJlhXiJHy+RT
      LqfExJjSea3PorSumbTcQtSyF98E9AKi2bSpvLkq269KHOndKYItp3OY7lDRURlh0W4An7Qb
      QHHBbaJ+DeTnk1OZXrkHLJeftmWs8mpn6fYWmWGxyF1dNU4AEhx7dyJiy2lyKh6EBk21PMde
      IgDyOfXtZFbkj2L7Lj90qBsroAW2re9zrrgepjUBzHEd2AP7ralkAS1Tgpk67RhO3//KAh/9
      NtbZf54msbknzvUBbGl9/xzF9UxRNOvKwB72bE3NghZ6ynj9AYC5G045YSQWP+OKzI1Rmjp4
      qQ0t7+8lUuaOl0qZLDaG+3bdy68WeixKm9s2IDgqlQE6LESVrT2X/ap5l/ewWBhGfOvKF1JG
      Jk1pP7Yv0ZV7wCKLiSL+Rgyz1QdBotwVLf8/8y68Z7GQsPjWvOhy7sVToDsHCTzUgEmLnmfy
      A9TnvbEDuLZqOUfvPQV5IfFHIkjxdMYeuLB9PTd6fsU8XZM//SqXsgqRA09v7WPZhjg8Rw9U
      TOH67zF2wDVWLT+Kotl4jkSk4Olsr7/sjcAcN6ccLu2+iMzNDe33QFji4/sX+9aHc13h8Yks
      7Tjrdz2iUxdN70bdFqUS5/fwuh5AwJnbSvtTObLMbB6UVnte+1WJA/175bLvt0wdhfc5uyec
      6/cKFHrf4gJuhv/G3co9YIm5fI+eX6mMIeAnprknlKWImsfq0L8Xuft+Q9coqsKLXwFuJhFH
      InFDPFCX9oaw3S9djybYD+uOX7Lu47nMHtGVL/KrY+4yhP+uGoIF6fyWUExx4ky81F6BqLBQ
      9ZHFs3n6J0y+VVRmg/r9kFLBpwkdv1zHx3NnM6LrF+RXN8dlyH9ZpSzXV/YmYO7mRFZIIl2H
      6n4Niom3P1NKgtmycFr57wBTPqvwhKptUdqYXtMnEh60ga92ZFMkl2BsYYf3YE/gxexXTbz7
      0/bwEsJs39IoMcWmST671nxFcnYR8hqmtGg/kqmVe8ASV9SFgeqDwNHHk32nEpE76jACN/Gm
      f9vDLAmzpXwUily/zHC1icKBXms74tOgIgaO+CiEiEEjBoCIQSMGgIhBIwaAiEEjaoJFDBrx
      LtArRnwz3JuNmAKJGDRiAIgYNGIAiBg0YgCIGDSvSBNcQHzI96wI+J2rOUVgbI7LkAWsmNoR
      cwnwNIndX39BwJk0Hdreim1Sy0knePQQFG6n6jaooMsKNZtTqxbyY2gUafnFiueI/JeyeHgr
      xdOhrw05j5N/Z/cvJ0i4X4S8Rm2auw3hg/fL7UqL75xn586DXL2jsDN1eM8PP58mlCqBK7ZH
      nUGpS6nEuCEOvsMY/o4dZSYtsduYsSmeDpO+Zbi9miCZy4Ffs+2aK+NXqrer3xL1IYO+mYZP
      2cv7szm2/CgWn2uOTc7j+FA27vyTjCfPqFG7OU7vDmSojw3lpqZJ7FmwkWT3KcztpykwKST1
      2A52nkjgfpGE2s3dGDZuBM5mur+L7GPLOWrxucKtUv6Y+NCN7PwzgyfPalC7udPLBMBZ1n4V
      RdsFu1js2Qhu7ePLD2cQ0PY4n7vnclfmwawtc3GwrEXJvaMsHTuL+baHWN3fjIsrJ7Hhr08J
      PjmIxvJ4gidP4MPV6zgy3VWvTWopBRFr2djkI8bxM1pupzqtUDPJNR7JdwdWYmdancL4YCZP
      +JR19keY7qrZwD+HLO4XfgiF/uO/YZylFElxIXdj/yTjEdRvABReIujnaGxGzWZkazOqyTI4
      u/lnAqpN49NKvYzcyyZwceFdYg8E88Mv/Zk70qnsaVP3Pr7cj9YwtJDFEf2sA50aawoR9Vui
      uvraculwLO3HOOt4mlWFR2cJDq9Ov9n/xs5UQnFuGpfDr5OKDU6l+yTFkNt9DE4x17iNNao+
      HNkn1hGc3olJ34zDUvoXhXcvcz0HMNPuSrvrYMKr92P2v+0wlRSTm3b5JVIgvZrgJnQf3R8n
      y1pIgJqNfPHxKCbn0RPgNtdj88q0vZJajnTzteVhVBx3qIJNqjyeoPV3mPjJe2i7nVZkhepK
      f/8u2JnWBCTUcuzK280fkqttNvgP8oiLvz+hz7SRvGUpVUxAo1o0fssXtwaKPbLPnaJav3Fl
      VqISaXN8xg3B7MI5dDiFVohRrca8NXIafZ78xplslQILZxzuR6PqaiSLi+aZczvt+VSJJaqk
      xbt0fXqY45UN7O4ditp6YKe8FBmZtaDDyF7lkx9IismiRStnXJqnEaPanjyRk1GtGfdhByyl
      EhT+Zh1wt6VK3L1TRFuP0qugEWYtOrx6TbC8MItLwdP5PrIv/oOsAWu69nbivFLbKy+M5/iJ
      DDz7d6dJFWxSs/evJrT9NN3SyypYoT59nMzRb+ewWTqVDzq98NG/PPJ0Umu64lyBmTnIyEht
      gLurphDYkbYNUtHhFFoJtXjLswEJSaoVLXB2uK/i6yUjLvoZzi7aWozKLVGluPf1ICFcYVVa
      IS1daHo+iM3HrnFX6VGmTjoJ2TY4WIC1gwWpCSoRey+NR61d0OOuqpeWLk05H7SZY9fuUtr1
      3+AS+ZSk3XOYviaJDsu2qkzMU2WaABObgcwN/JxSjYv16DXMTxnBoE5LALAYvJZfh1gA6drN
      N2mGDWHce6Boc90G+HhLeyRa+xZwSlFIe4mOllQ8zSw8P2PVmtHPKeT5m3nwgHvGFmXpQnnO
      Xur7lUdergQLbSEwEkkRsiJAv2BOC4lEQpFGRQt3F/IilGmQLI5oPBhdB86o1ZQRG/0XLmOl
      gJRWrbI5Gi/H2VljcBbv0LfOKo6nv4VW6l6K1Ilhs+pw6fAe1i0MQt7Qg2Hj3se1dNGTfpWU
      5i70A7C1xyw0luzuFgrH9wf3eWysL2fV8ENT4j6+tOthzKpzicN71rEwSE5Dj2GvUhPsw4LI
      SBY8fcztq3v5fkJ/Lnz1Kwt84NSC9wmot5iws5404hah8ybx/qpFhE5voN3HnVukYolXAznx
      Qas43/0r5unQscjjg1h1vjtf6SoEsPZje6Qf8sIcUs+u5Yve4+kbvEmnU+U/Qt26mBXJkAFS
      wHnMSlaOgexj21BY5dalrpkcubYQGLncGKmxdpOVIZfLMdasWM8Zh7wIkuX22CVdB5ehSDXf
      MyGLJfppG4Yro9XCuR3ZR+OROztr6XTte3hxYtd5Hk1uVeE4JKbN6DBiBh3el5Fz8wy7A/dh
      MmsorSSQfjWBJg79lDs60s4igtjs7lhYAA0aYppWsR+96rqnlOxjyzmqMj7TZh0YMaMD78ty
      uHlm9z+gCa5pSlNPP/41KoIhJ6JZ4AMnDjWgR4gnjWoCNKP/RwMI/iCMC9Pn6fEJvkDItgwe
      FvujbvfrQdLUED7JqJoXsKSWOXbvzmPqWQ8CTt/Gz/Y1GaVKm2OTH0psoSeeOtMgKc1tHnAo
      Woar6oJTFs+1BzZoWuVWTiFXLj3Aob9mxXo4O+QRkVzMs5inuAyVgkYAVMUTuLw5b7o3XEZE
      YsvKdboSKeatuzOwXTBxD6CVxW2uXb3L2RMzOKuyW4vmj+huUQ8ataDejauky61fOA0q79qc
      1t0HvkQAlGqCQ3RM/jvH2H7ZirffsaOpaU1lnp9C846WQE1s7BOJ2B9Nv09dMS+5x9HtIdz1
      +AR7wKz3YJ7NDmRf/38zqFGG0ic4GEda43g+knllnShuhab6l94GPU9keaHiVmiqv+I2aHQo
      AY8ded/dBvNaEp7eO8qJ80Y06ajjivOPYUHHHsYsW3eQuuPepaW5FElxLtkPyl9yYtHRh7+W
      beaY6UjeLrsLFEKu1zSq6mgKIJdlEbNvM4dr92eujgtkPWcH8n7by5WnLmVn+XLKPYHLbVHl
      JO5eSnSyHHutCJDQqnd3Tq47TjGg1V1CBLsK29LH0QJTKchyYjh+voQ2bwO3Y4i1HMPSr1TM
      sR+d4r9bYnnk40M9iT1d3Q6xLuhPJo32LL8LJKvaQjghYheFbfvgaGGKFBk5McdfkSZ4aGOk
      kSvwV3r2YmyOS69yv98xq3+k6OuFDPC6RZFRHVp09iNgSX/FGUOvT/ALYmVG0YavGfFlMjlF
      lOmJ5/V4vR7CtZxHMlX+K1tWzifjyTOoUZvmTj0ZXPqah1qefPhRCTt3LuOLst8BPsJf7RZo
      5f7Apb8DzHrHTvctynrOONwLJanzAO3y5/YEVoy7l0MEPxyzpp1mmWULGoTuZtnuDJ48k2Dc
      0AFfv1G4SyE7IRWbzu+pj6FeezrX3kjsIx986oGF72T8ju1g4/zdPHxWQ/k7QIeKvmKNrhsQ
      unsZuzOe8ExiTEMHX/Fp0FeN+DTom434KISIQSMGgIhBIwaAiEEjBoCIQSNqgkUMGvEukIhB
      I6ZAIgaNGAAiBo0YACIGjRgAIgbNSzwNWonO9tQCPGaqveRf6R1grUcTXK71VUfpD4CcwrRz
      /LpjJ/vD8xi4bTt+Oh7m1NYE8+b6BJca+yLBuNlbDBs/jo6NVZ+uqci3N4vwRfOJsJ3GijEq
      782P3sSizN5808uSUguk8WUevjJig74npv2XjHE0Qo3iDE4HbyHkyi2Fr69TPyZ+3I1yG+JN
      +JcPFgCvyQGo2QNnhbNofgS201YwRsVPIHrTIjJ7K62JdLRT6mwTvek7Mnt/VW5hJDvPmmm/
      UH/GSkaWuSAlsPPHO/T8rNyrWB6/je8SOjF3sIr7TVY4P4Q2YtLH7pgAxRmnCd4SwhWFuQJO
      /SbycbfmLxMA+nW26alJ6hOwDLleTbDf9shyDzDkXPyuB1/IfHEHSN/FzHmJeH/sjf3e33QP
      S6cmWE78+ol8FurC0pCzvNsIHidf59aLH/zfhKo5dDGPru9j9c7TOM3qWm57lBdFvMUERj06
      R4zMW80iiabd6JK7j4gsRy1TaF0URO9gb83hfK05+SngfMBPXG7px3y/NtSrJiPt5Hp++lHC
      7Fldyyaa1oTXQdNuXcjdF0GWYy8qGlJF7Ti0qcuZVBlYKg8yKZFqPh7cS74LDo0V2+4mc6+p
      E6q+IBLH3nSK2MLpnOlKwxAZ0WHxOPbvhQlAwXkCfrpMS7/5+LWpRzVZGifX/8SPktkvkwLp
      19neyUihromupy31a4LVyI9g94G6DBvlozgQ69Gs37oIvy7WFQivK9AEv8E+weUYUa9NZ94y
      VXd91O/ba0rH/m25sPeClkZXi4Jodh8x44NhDtpPb2ad4kS1QUwq9RCWSGnRbRIj6p2lAhvi
      ijHtSP+2F9h7odIRaSG1acnTtLSyz6lJT7Dp5k6jjBtlCoW8G8nUbWWjUdOcLu9ZcCIsHjkg
      Tw3jcI1eZQaBWadOUG3QJHq1qafUVreg26QR1Dt7+u9ZA2jrbAvIyy3GspGu5+31aYLVubHz
      Z/5wGs7Aqj4NXZEm+E32CVYilz3k+t4dJNi6qZw5q+Db27wnA6XHCNNrF1rA5e2HMRs2ABsd
      X4Es9SYNvTw0TipSnNs1JDmlKi7EmkMaiPRYmF4bVZ1Y2tA4I5m7ANwnKasxDpYtaEGKsi05
      qSk1sNchNpM49KdX7j4isnI4fSCDTr1L00IZqTcb4qVtsky7hskvKYmsUGebS84DSFw9BI/V
      YFTHgjbdZ7FE+X6fijXBKsgvsveXTHzn9NUWVehEjyZYxSd4cZRi3dGi8ycs+27I69UFc4F1
      pb6mUgvcB0zkU1+VxEHp2ztRCkgdsM8MI1buirprqRTXgR04vuMiBZ96o3XNVVqnSr2msELX
      7Adyc3OorsPiViKpTkFRESgTsgvr/CnP3ptoWY6WD8mVgR2Os+NiAZ96a2cB6u2gXAO4Aq1o
      Xe8wN/L60rhmMslSW7ohxdxRRlgSuDpkkFJoQ0edl38T2vdpw7erlvF/7T7k67IcKZfcnOpo
      H54ESfWClwyACnW2TRgdHMloAOQUZp1gmd9sPqm/g73+lno0weXu8QXH93Cg7hgCu1VNtKJX
      E6zPQ/i1+gSrrAGKC7gdf5A1GzKZ/LEXJjyHb695V/rUX0xoQntGanUxmYDxrTi/5lv2JLRl
      pIP2RDczM6dEW3yMXF6CiXG5hrgqa4DyIfWh/uJQEtprjUhPOxLsWksISZXTVZIIbUYgAepa
      W/IwIQvqJ5FR34bBFfQpselNz6a3kPdXTfPMMDMv0a2tLjH5e1KgMp1ttzgiTmu+GEZCLct3
      GTfKnozMLCBaoQkeqNQE11RogqW7w1TOCjfYtv4ETsOHanvDVsCFkG1kPNyNv5cHHh4eirtA
      h2biMTqY9Ba2tL6fX+YTLFH6BCvG84ZgZELTdiPoXj2OJKDMt3fn7DJX8/n7M4i9lqidBiHB
      oefb3D18khydjZvgPW4ERbuDidZh1y61acn9C5Ea6wgZsTH3sbOtq12hKkgc6Pn2XQ6f1D2i
      iqhr3ZwHKRmK/N9Geaq3aUXtxASykm9Qq3XFYnuQYlzLlNom6ttsWt7nQqTGmkQWS8x9u5cI
      gOhQAk4nk1Oo+HOU6WytGsCdY2wMPk3y46dlZZt3JGJvo3gvUKkmOEcOPC3VBLej1LVXfnEv
      v2T6Mqxv1W1MO847T2RkZNm/kKn2irtQ2/2wfuN9gkHh/RvB8TQTxQu/nte317wLg23+ZP+V
      ChRoJq74fdSIw5vPoxUDlj74/rWP9eHXUdgQy0g7vp5djzqhZUP8HJh3GYzNn/upaEg6sXGk
      WcYZzmQ1xqEsvWqFfY0Ufr9ZjdZ2z5+zWvr48te+9YRff4Ti8NI4vn4Xjzp1eYkUSJ/OVu6E
      k+w/fD3kS5JzisC4Ge1H/8hq5eJUryaYfCJ2H4AB/0Uz+ym7v1+KUo+s6/2g6uj3EH59qKwB
      kGBs4UTPDz7Ejqr49mq2JcGmd3fCZ26CfkN19iZp3ItxLVewJtyaf/VqrJIRmODtP4WS4C0s
      nFb+O8CUz7pSmbW1XiQ29O4ejuaQKl4DALSgRfWVbJVOZlTZDlLs7DIJ+r0Nc8e8wDhMvPGf
      UkLwloVMK/sdYAqfdTUXnwYVMWzERyFEDJr/B1gtn1fX5osAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='3. 2012-2014 Year on Year Precent Change: Total Exposures' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACkCAYAAADBuSFLAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2de1hU1cL/P72jR4SEEhN5M1EkSUQcY5CLgoqKWoQmHk1RUI4nFA/nKIqm
      HryRWllqh7xgiYx57WiJL2reUEGH21CkiJGGohaRQYmBeHR+8/tjDzBXBgSr9539eR6eB2bf
      1r6sPWtv1md9n1Cr1WpERCyU//q9CyAi8nsiVgARi0asACIWjVgBRCwasQKIWDRiBRCxaMQK
      IGLRiBVAxKIRK4CIRSNWABGLRqwAIhaNWAFELBqxAohYNGIFELFoxAogYtGIFUDEohErgIhF
      I1YAEYtGrAAiFo1YAUQsGrECiFg0YgUQsWjECiBi0YgVQMSiESuAiEUjVgARi0asACIWTRtz
      MyiVyt+iHCIivwtPiIPjilgyYhNIxKIRK4CIRSNWABGLRqwAIhZNCypAKfIwGTJZ3Y8vgeOj
      2ZJbpTtb9VHmyWTIZLM4UKE9IYPlMhmyYW+Rq9JaqzwM2fKMuj8Iky0no26iqoiN43yZdaDc
      sDhVF5DHjSfQV4bMN5DxcXIuaBWlVB6mVVbhZ3mG3joyliOTyRj2Vi4NRRL2s6FIhuuRhckp
      RUXGcl9e2VjUsL6SZCbKZETs+q7+I1X6Es389Z9QkhyGbFwS32gVRZX7FsNGriVfVbd7cuLG
      B+Irk+EbOJ44+QUadk/vXPgGMj5uH1fuG98HUFG0cRy+sw6geyQb1jPvaLXOlOqj87T2FerP
      n9Fjqr89U+VoCZUU7FvH0jnRREVFET1nKRvPfN9w3n44ysqoKKK0fpILNNMe3ODUxqXMiY4y
      /xrUHMHrlCwPALjPzT1zmLAoCa9TcXhqpldnnOTs4BhiahJR5FYTOtpGa+meSHucYOv+6QyY
      6GB2W6V732Zvh7+xM1R/3lJ2xUSx22ER8jMhPMdNDsXPICqmDXvlYTg1FBalUFjT9JTS48RW
      9k8fgMkimVjPk32llJ28TAVu2APVxZewCgyksqgYFc8iAYovX8BOOq6hTEhwjvgH43ctYnfG
      FJYH2ADl7N+ainTOMTwlQOkuYqJ247BIzpmQ5+DmIeJnRBHTZi/ysIY11Z0LVU0R++bFMHN9
      D46/MQCJ4YHk7b0d+NvOUIzt4sjgYDJy8lGNDtAsqyI/5xrTpwezXaE9pysxB3YR4WRkJY+b
      /1Ryt9No/rbKhc42bXlQ/S3HNmwlzXk5Y7oBt8tpF/omSUHPGCz69f6tXO47m7dmOrZmE6gd
      z/n54HynmoZ7h4r8HAVefsEM8XFFkZOvdWcFaIP/66/Dvv0UqfTXp0fVUf71wUOmL3sNg+Od
      /wnJ3/gzb1kIz7UD2j1HyJoExtxKZk+uuRXr0cYfoUhFNHNJ7Hu741hQRLHm768Lr+E+fhQe
      Fy5rPqvgcmEZUvcXdBeUDGB6dC+O7UijHFDl7yC5cgp/CbLV7F4y3/jPY1nIcwi7F8KahDHc
      St6Dsd2TWLsxeZI/d87n1ZelgSqO/usDHk5fxmsmLty2AYEMy8qhoP6TAnIu+OLTt5kH5HHy
      Jxf8h/Wms01bANra9OTFfu2pqREm36mo4JnOhhc/3OZGiTODAhyxkrTiM4Cq5jqHNu7mpzFB
      9Xd/VPkoMrvh1d8eJ3cp1sfSOa9/whyCmeCyl5RT1Zimmox171I4LpYIZ4P7GaWFBdzxG8pA
      7S8XSR/6Se9w8fKtZu+LQ/AEXPam0GiRjOHaF08K+boE4Du+LuyBex9X3DqWUFoNUExRQR9e
      9LAxWNRh7AzG3dzK9tzvOPjRIfrNnIabBKCUwoI7+A0diO7u9UN65yLN3b3qjHW8WziO2Ahn
      w2+GOtp44u2eQXZda64omywPb6TN29Rvhqq2gpJzKewq8WOo5t5SWdkOxy7G5n4G2cAqjqVd
      p1bVhP8EmyMtVkYaADb0GPsG2+L8Gk5UwVlOIOMdZ0DljT8ryCmAAE/tNdgQNGMKW1bspzQo
      wtgWiJWlAf1ZcNjT6EmrvXcPOtige1nZYNMBiq+VQt13RlossrS66Y18fdsEMWPKFlbsL8V4
      kbTXQ0OTSNKHvtJvURRXg1MxRbV9+IvNs/zsfo30r2F0l2tctXbnpWeNrFPiSdQcKS+veB3r
      p2awNahub2oRdk+v0tjY0IFitHevDlVlAVu2HaPbqG246hRbOFf9FxwWmlYmsWGAX1d25pUy
      282J0rxcXPymISFdb75iEkNlJNb//Vs3iQpIjtpMDlZ0GxrOX2d50lkz5deqIg4ui+IgIGnv
      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
      f5l75gOg2Z9BAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='3. 2013-2014 Year-On-YearPercentChange:Total Exposures' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3. Graph  10: Level 3 Assets 2012-2014 (millions of USD)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3. Graph 11: Cross-Jurisdictional Claims 2012-2014 (millons of USD)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3. Graph 12: Cross-Jurisdictional Liabilities 2012-2014 (millions of USD)' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='3. Graph 2: Intra-Financial System Assets 2012-2014 (millions of USD)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3. Graph 3: Intra-Financial System Liabilities 2012-2014 (millions of USD)' width='192'>
      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
      WcgjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='3. Graph 4: Securities Outstanding 2012-2014 (millions of USD) ' width='192'>
      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
      gnmtRu//AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='3. Graph 5: Payments 2012-2014 (millions of USD)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3. Graph 6: Assets Under Custody 2012-2014 (millions of USD)' width='192'>
      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
      i/s/zimTxCxAwdMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='3. Graph 7: Underwriting 2012-2014 (millions of USD)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3. Graph 8: OTC Derivatives 2012-2014 (millions of USD)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3. Graph 9: Trading and AFS Securities 2013-2014 (millions of USD)' width='192'>
      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
      vEe3W/axFdMlWvT44KTP/g0tnJVad6/UVMslnF3w+HR4rZke4eyCJ6dD9rrt622nZzw5G9Hd
      qzTLI5ic8fT8WlMtj2B8wtPzCXtXPrtFMD7h2eWEvU6r2rbFdnTC88spe52rbVtsh894fjml
      02nXvp+880P8TMK1DBAE2p0WP/nRD/EzGccqB9btdouf/OhPCHIZ19JLX7vFez/6E8JcwTFL
      rdP2eO9HP3z1CZCFKy4vL+l02sz8ajoyWHJxeUm702Z+S+vRbrdYXGn+koteqS2DaurRX3DR
      69PpfITWbrEKq6nH7ZyL3oBO22NdadFmwUW/1DZRpa1LX7vtsg6r6cPNnIvekHbbYxOVWrCe
      cd4f0m67bK+01Yzz/ohOy8WPS82/0tpOrW2XUy76Ezoth6B6iLBZTrkYlFp4pS0mXAymtFsO
      UdU9WS+mlWYTVb7VvPR1WnbdjVnNJ5wPZ3RaFknVPVnOx6Xm2XWXZTkbcz6c02lZpFX/ZDEd
      cz4qtatpy/lkxPlwQccz6zU8s+m1VlTPQmaTEefDJZ2WWXd3puMR56Nl6au0yXjI+WhFxzPq
      c2MyGnI2WtFxr2eGxqMhF+MVbU+vxyjj0YCL8ZrOC1qEipiHdbx+75JYeEHrXxILGkJ2rfV6
      lySChpAFN7Qeiai/+i6Qppu0D47J4pjjwz1EAQRRpnOlHeyRxDGaYZZaEnN0UPmkypckHO13
      SOIY3bDYOzgijRMO9zt1vO7+EWlSale+K+2g8omSUmppykG3XfpMi+7BEWlSaqVPZv/gsNT2
      Sp9hWhwcHJImGQd7LQQBRFnh4OCQJMnY32vd8iVpxn6n9ElXvjSn2/FI4hjTtDk8PKi10qdy
      VGl77cpn2aWWFOy1S5+slL44Lei0rn3HteaWPlnlzuF+rcWVr9Sg47l1vCut7ZU+y3a4c7RP
      nEHbLX2KonL3aJ8oE2i5Tu27d9QlSktNEEBRtVtaHMfYtltpIp5jVz6V+0f7RFmplT6He8f7
      xJUGVbzj7od8bcdANVxMo7za64ZJ2zZQDQdD10iSBNdr0bINNNOpfYZh0rJ1dNNF11TSNK18
      +qufBs3CFe+9f4qum8irmDueShosefeDMwzdRFnH2AK3NHUdc+SqpP6Sdx+XmrZJMCmv9j9+
      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
      FQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='3. Graph1:totalExposure(2012-2014)' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='3.Time Series' width='192'>
      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
      Lfh/UuTANjQ4mDYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3.2' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard Graph 1.a' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard Graph1.b' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard Graph3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9V3ckSZbn93MPDw+tEQACOpEAUpbuqmo5Pd0z0zM7w0MOuctD7pI8s3zY
      J5Kv/AL8Enwiz+GSh8tZHnJ2dpq9PbK6p7pLV6VWSAARCK2Va8kHVApUiu6qyqxMJPz3kol/
      mLmZe8R1t2tm97rg+75PQMAxRXzWHQgIeJYEBhBwrJHu/Gc0GqEoCuFwmEQiwXQ6xTAM1tbW
      2N/fJxqNIssyjUaDubk5CoUCgiA8y74HBHxt7hpAv9/Htm10XadUKjEej/F9H03TqFarLC4u
      oqoq1WoVy7IoFArPst8BAU+Eu0OgRCKBLMvYtk0sFkNVVURRxPd9stksoiiSSCTY2NjANE0C
      3zngRUB42CyQ7/vB8CbgWHB3CGTtlRn+639994Pcn/0Z8urKVz6wbenYrkA8Fn3o55PJiFQq
      w63uDf78s//jrv6vvvPfMZ8ufeV2TUPFF8JEI/Jj2w0MPADuMwBPUzGvXefe3xrbVy5xq12j
      EA5T7SvEogkyswWscZ/tW9v85Ce/y68+u85iKo5mKrhilkwiRKc3YGm5xNzMHB98/DGFbBpP
      DOGpGm/9/o+5+OtfIcVTzBQXMOMTrrev3G3XcAyuXviU3U6dmXicRm9MIpElmUthTcfcuHGD
      H//ou1y4uU9OErA8i3B0hojkMhhNmF+YZTY/w6cXL5GKR5AiMfSpwo//5E/48//lf+bN7/0+
      seSUzbXlb/ZKBzyX/MZp0FqtycxMgROb57DVIb1+H1cIcfrUJn/9979irZQlmckiheMIzphy
      s0dptoDtGIh4vPX2d5HjSaJRmY2NLXwgEs/yvbfewpgOHtlus9kll8mweepltEmPbq8LkszJ
      E6v8+qMLLMykSWezyHISbdqmNZxSLGTxHBPBd3nr7e8SS2YIy2E2Tm5Sq+ziCjKhkIgyenS7
      AceLuz6AtVdm+L/dNwT6l3+GO1MgFJUZdrsIokSr22NtZRnfsfBECcexkUJQ2dtn9cQJKuV9
      trbWqbd6GNM+4XgaTdFYXJjFFyR6rTrhSIzpVEEKQW5uGUMa8Oef/e932/1X3/nvSYXSSLLE
      aDAABHqDMctLC3iOhS9KOI5FSID9So3VE2tUq3XW15bp9MdMhi1iiQy6bjJXzBMKR2jVa2Rm
      5pjJJqnuV8jMLlKayX/T1zrgOeShTnBAwHHhrg9Qn4z5qxtX737wH585TymV/soH/m2d4MAZ
      DXiW3DUAw7bZHfS5/++n4QS/+Xs/4qN33iFVmCVfmOP8qY1ncuIBAfAsnGBfJJPNkk5lHusE
      BwR8E9z1AeqTMX91/b4h0NnzZMXQE3eC5VgSZaqQTkYIJwusLsw9s5MPCAic4IBjTbAdOuBY
      ExhAwLEmMICAY01gAAHHmsAAAo41gQEEHGsCAwg41twzAN+nXtlhMFG5fXsH21AZjBSqe9uM
      VZPxeHK3qGvpXL+1w6Tfpt2f0G63AZ9ms4ljqii6xWSqADBVlIc27No6n37yCd3Rwefjyfig
      G66DqmnUKzvs7Dee0mkHBBwg3f+H69i8//O/IL98AjWUwpvUyUbD7FWqlK9+wurGFprl8fq5
      TVrlMu1+jAgihmMj+wbvfXKL/+QP3ubT995FTs5wfafCS1vLpJJxBo0m11oTVjMRTr/6BnPz
      81iGhd6v84urQ1rVbTbX1uhpHgsLJZo7N1k7c453/u7viCUS+EIIx5hgO5AsFElGQ/SqXVJz
      ST786BobJxbZPP86y7O5Z3UtA44gh4ZA12/cZPPceQYDhYSv0h1MuH5rm2Ihz8bGSQQOFo3H
      rTJWJEk6EiYUjeNoE5oDlYhg44RS2KbHbDbGXGmOVCpFq1HH9kO8dPYMmZTMYKQBkM6k8fFB
      DHHyxDqGFyKbipKIx0in05/HJouMhmNCUgiAbD7PsNenVatBKMLiwhynz51jLp+m2x1+w5cv
      4KhzJLZCKFOFZCr5rLsR8AJyJAwgIOBpEcwCBRxrAgMIONZIv7lIwFdB7Vd5/1qHuXwMrVcj
      lj9JX1HwlDrRaIZoLs8r584QCiJCnymBATwlHEtjMhrgODKj/T3UmxNyi1lcXSGq+SzkiwTh
      0M+ewAl+ShjTHiPNpVqpUFrdZNqsE5JDuJEo6ComIV4KngDPnOfWABzHQZK+2gMqqPv8131e
      eG6dYF3Xg7ovcN3nhefXfF2bK1cuk8nP4hsjcnMr7FdrzGTTSJKA5fhkohJ7jTa5QpZBe8Lm
      2S0ikgiOyeXLZXIzc7jqkJmFZcrVJjOZJFIILFcgFRGpNNtk8zmGvSlbpzeRJRHPsbh5/Tr5
      uXmGnSahaIpsOk4Em93GgJliFtMQsZQ2S2sb1FpdTp1cu9ttddynPZii6wYhwWd1dYnb+00i
      vk0ym6XXHTIzO8N0OCQ3W2K2kL1bd3f7BqXlZba3a6SiPpYQQRYsLF8mFRHQ3RDzuSSdqcGJ
      pcMJhLdvXCWeylKv19k6c5ZmtcZcMcvtcoNiIYUYSTGbkik3Oqyd3CIWPrj3OeqArmkyVGxy
      EZ1ax2CmWGBxfpbhcIjgWXSGKpub69y+dpni0jr5zIuzKPncPgHwPSzLwrYtGo0m9XqdEDbN
      7pBaeRvCCQYTldOnN5gOBziudy/Jlu9i2Q62bdJoNKjVGwieTas/Zn9vm1A0wWiqcfr0BuPB
      AM+7lw7e0BSSmSyTQZtYroQkHvTD931ObJxg0B9jqmN0w6BRr1GvN3G8e6NI2zIxTAtRFIhG
      JG7vVJExiWYXsPUx06mCpU6JZvIo08MbBaMxmdu39ghHQoQiSVKyiG7oGKaN7Yn4lkq1VqXZ
      aPLFgWs0GsUXZWbn5ghpAyr1NpFMkbnZPI5tASBHY+DZ2I53t56UyLC/W0b2x1iOiGUfnC+A
      ZVnE4zEc08QDTMtCFJ/fn8xX4bn1AabjIc1Wi0Q6SzqVxbFUpEicQa9HPp/Dtm1S8Qi396qU
      lhaIhuN43sEX51oGjVabZDpLJpPDNiZIsRSDbo98Pott2yRjMjvlGqWlRWJyDNc9qOs4Fr1O
      h3hmBksZEIplcfQhYTnGaKKxuFzCVjT8sIhPmHQ0hGZDRA7hmDq94YRicYZ0KoUynTJVFGKx
      GJNhl2SuiBQK4zg2k0EHOVkgm5RBlHEdC4SDbR+xWAx9OsISIhQySWzbwnUsBhODmUKOsAiE
      ZEIixONxptMpg26TaHqWiAQCkEzITA0RXANDnWAiM59PUK7UmV1YIiKJxGJxFGXKZDIhGhJI
      FLLs3tonX8ih6CaSZyBF4iiqyebWOpqiEJdDaBbEkjF0RSGVSj27H8kT4Lk1gMFgQDgc/kp1
      NU0jHo8HdZ9yXeDIG8Bz6wOEw+GvdXGDuk+/7nQ6/cptPi88twbwIlMbVfkf//J/uPv3H5z6
      J/yzs//iGfbo+BIYwBNm8lc/xTcMAMRkktQf/SH/09//NYplAvDt5VXeXAyCdp4XHjAA17JA
      lvE0DeJxvtoo/Pgy/en/hzs8CMyRSiVSf/SHz7hHAY/jAQOYNmt81GiT1kxO/97vkgHwfa5d
      vsjs8iqjTpuZhVXiIZvbtS6lQpKR5hIVbIRIirmZLDu3bjAzv0ij0WZhPk9vrLOxtkyzVkaI
      pNFGXXLFeVqNBidPncaY9OhOTFJhHycUY2Fu5pu/EgHHkgcMQIzIhD0H1dDQNYtM/OBti7bj
      4PsiEVlEN0wUU2ElI7M7tsmFXVw/jG+ouIZHIrfM9s2bnD+zzLXKhLlMGM93cZGxp13iqTz1
      7VssnD3FoD/BsUwioo/pCeDquK6L67o4jvOVTupZ1vW5f1LN//xY9zTP9/Fc91A93/eP5Pm+
      CDxgAOn5Jd5K5YjGE4j3bdSKRGT06Qjd8knaOnJYYrczIJ9LoOguUcGASArDDTNo7VKan2V7
      r8NsPsdYNcjrJrYxRZATDHtNsqV5ajsVFpfWwIX+xCIlezhinFAohOd5aJr2lU7KNM2vvGDz
      desKv/M7CHe2CKRSaJrGazNzWJ//yJZiCUQ3xB+c+OO79U5mNp9pn79q3Rfh7T7P7TrAdDq9
      Oz3ney4eIvgeodBBcLznufiP0DT13gKN57mAiH9/OdcF4eGaen/dx5R7QBNFVOULdUUR37tX
      7s7mMdd1H9DuP9/HlXte6x5VjsS6tmPpGNa9LwDANXUM+7DmmDqmfXh4YZs6hu0dKmebGqZz
      WLM+1+7HMjUs93A503i4Zn+hrmFoOK5/qJyiqgAP1e7nceWe17pHled6GtSzTVrdPiBQnD1Y
      rXRtk/Ydbe7hmmsd1mbvljNodwefa4kDzTJo9+5pDuBYBp3eAASR2dmDcr9Jm5tLYnFghJ3+
      8K4GB0bY7Q+R5HsvDFQnI8aKdkhTJiMmj9RiD2jhyP3akImiH9bGQybqYW06HjJ9lBaNP6DJ
      92ujAVPNOKQddZ7vJ4AoYOo6oijifT5SEwQB4472+U1XEDjQQuK9TWL3afftVXtQu1sudLfu
      3eOJIveK+Q9o4KPf0e5WPtgmfHA8/25dy3ERhPucYc/FtA9rvutg2h7i/eXuat4hzXI8BO7T
      HPcBzXUdLMc/XO5zTfyi5vqI/r2np+vYWC4I92uug/0F7ajzXBuAMe6iWB63diuIn3vk+riL
      Znvc2qsQ+rz32qiLbnvc2t2/67irwy6G7XJrt3pXU4ZdDMfl1l7trjYddjA/1+74dJNBB8tx
      uFWuIX4ujgcdbNfhVrl+Vxv1O7iuw61y465DOOy18Vz7kDbodeiODfpT6+65NVpt1GGLgWLf
      09odlEGDgeoc0qaDBiPNOVR30qsz1tz7yrUZd+tM9Hs/7Ga7w6hTZWr4h7Rhp8rU9O+r22HQ
      2ke91z2a7Q79ZgXNFg5p3UYZ3Tn6zu8dnlsn2DRNIpFIUPcFrfu88NwaQEDAN8FzPQQKCHja
      BAYQcKwJDCDgWHNvHcD3uXntIuFYilq9w+mtVTRbQBs0SRZXSIdtblY6LOVkQrklKlcvcOZb
      b3H72g1OrxVRQykc3aY0n6PVbDNfmj/UUH3vBuWOyffefgWlX8eOzZGLS7RaDQrpGO9/eos3
      3vwW8Ujoi30MCHhq3HOCfZ+dm5ep7dymsLpGuHgGo32DqAiWECGXSXK70uZ7pwt8Vh5COML1
      Dy9ghqP8y//yJ/yHf/czZtbWuHy9zOtbeUQzwtVOj1g0xe//4E0SEYPLV0cMB7cZdBvMbb3J
      xV/+DWe/93t8dzPPT9/dYbMUpW/ZjGs9pEwWWRYYNapkV08xn5ZoVfsoWodMcZFKbch/+2f/
      OYG5BHwdDq0E9wdj1s69xn61zXq2Q9/w0C2F5c2X8JQuiUSManeCFEtjD9r8Z//NP0cZdJHl
      FCubpyjNZolEkpQKSeqVCq+/dA5CBxEFoXCShcUwsjTl1JnzjBWdb33nOxQXS4TjMeZnUiSL
      88TNLtOuyctnNxirJkszOYRwDNP1ePVba0zHbaRogkx68tATCgj4MgTToAHHmsAJDjjWHEsD
      OO5BIF8G0zSfdReeKoEBfEWm04e//vVJ4Xs2imo85TYsFPXxP/A7WeJeVJ7r7dBPF5d/92//
      DfHiCqLTZzR2ePnsGrd2WkghAzG7TuPCx/zgj3/IxUvbhH2NU6fOcOvWNrnCHPF0Dr27S0f1
      wPU5fX6TRk3hRz984742bP6f/+v/JlM6AUaLwQRe3prndl1B8CekZk+x/fEH/O5Pvs/lG2U2
      i2CQolrvMzdfZH6xxM9//jG5bBrTCTErm+TP/YATxcTdFvp7F/jlxX1m8inaQ41kOk866mCZ
      Ps3Kdd763u/y4ZUyZ0tRBhOVliqxMZ+k3hpSKs2wsFjipz/7mNJMGt0Jk7FHLP/gT1hMHo+f
      xrF8AtzBNqYQkvEFmXObi9zerVJrtEhn8hiDBpnZBSQpTCQqs7q8zJXLF5kpLdKu1kllUihe
      nJOlHIulWaKpHDHpwUlZSx0hynF8McrZjTl29prUmm0y2RmU1i6FhRUkSSISCaOpNld36izO
      z9CZmIRdg+WTZ4nIEdJRibn5Eg/bh9nq9JnJpykuryNMGvSHE8a6xerJdT67tM1yPoEczyDI
      CRZiGlcrXRaLWYaGh28obJ55CVGKkJBDlEqlh7Tw4nIsZ4Esy8LzXCzTxnZsBBF6rRazi8uE
      BJHJZEwkEiEUCmOoQywhhq+PSBWXmPabFGcLXLtZRvJdFk+cZDIakYqKNPpTFkslQiIUCgXA
      YzJWDtoQfDrNFqXlZUJiiNF4QiwqExLDqNM+npzCUsYsLS9RrbeIoTM0QhiGzsaJRRQT9GED
      IklyyQRiJEk+k8DWFWxBQhkNEaUw7e6Q5YVZfM/DRkDwXKSQSKNWpbSyRrVS49TWCfYbXcL2
      BM2PoGoGG6tzaI7EpLNPOJElHY8hxdJIgnPkwx4fh+Af8EKkufttcRwH3/e/cu7R44RlWczM
      vLhpao7xE8AjGo3+5sLHnBch8P1xHPJ0THXM37z7AQuZOPsDjVe3lrm0vYOvmhQX81QrCmdO
      zlJutljZOMPOrVv80z/9jx7bQLNZp9s6WL1VNYVczMcS8vi+TiwRYdiakp/LMJ0aLK2s0Ny7
      zsL6Wba3bzI7U6BUSHGz3CGRTLA8m6E3NqjVqpwo5amPTZKyiBCOsb48x0cffszamVdAHzBS
      bUK+g6YbrJ8+T0J+tLvTrO5y4eY+/+T3f5edi7+mbkRwpkNWNs5w/eMP+f1/9p/SL29zba/J
      ajFJva+RiXhIuTU2F1Jc2a6SkT2aA414xMeTknz7jVcOtVGv3ObKToM//PEPeOdvf87JjS12
      qk0KqTid4YS3vvNdLt8sszYX4fKF27zy6jkqtSZvf+tVPvngXaZ2mJigI0WijMY6iyc2Ob2+
      dF8LPlc/+xCVFOfW5/jHX77Ly9/+Pu//+gPefGWL67tN/uDHP+C9X/2SN994k/c+ucSrZ0/w
      j+9+zI/++I+49ekHaH4UwRgSTcTpDXXWNk8zn39xXobxMA79KhzHYdBpologh0QGvRZIWaKy
      h24IqJMq+22VQjZK+fYtXCn2qOMCMB310ayDsL1MJksiIuGKMo4HiXgMER/DMAnh4Tom+/sV
      prpDq9FiNpekN1JxbYdIPIbgmmzf3qXfa+NaBnoozqjTRFUm7JRreJ7LVFHR1SkeIlFZRgpL
      RKMy6lTlcY85W5tgWD7DfptyvYNte0yGbXZuXsewbdqtHup0iOmGyGSyvPLqa3TabcKii6Lq
      tOtVTF8gFg4jSmHCD3lvlqGMsByB8WSCNhmyV2tTK9/CdH1q+3XG4zF6t0KtOWLUr9Lpj+g0
      q7S6Q3zHZKQYSGEZCY9IKk+IL8bl+nRaLeSohCtGWN04w7hZxrUMRsM+licwnYwwlCn7jQ7T
      YYfhaEx/rKBMpkjhMOGwRDgsI/kOkUwR0bMfOI8XjWAIdBeffn9IoZB/oHy/3ydfKDwwA6NO
      hoRiaaLh33ZLnke/P/pSbTxKfxSmMsaSEqSiXzRCn35/8Llz/tu38aIPgZ6aE2zbz+/dw3Vd
      fN8/8m84/CZwHIe5ubln3Y2nhgQHqUbS6TSmOuZ6ucliLsZ+TyMb8ehObdJhl3AizbDTJF2Y
      pTdUKBVz1Fo9fvi9tx84qO8fpAsxpkMqrR7Ly2uMBj3ScRknFMV3DcKCjCeF8YwJvbFBPh1h
      anisLpVoNBrMFlL0Jh6COcYPy2imSzzkYfoShWwKS1fQ3RBxySWaKiKLNnuVOoV8lu5gxFw+
      S2swYi6XoT0YceLEOrJ0MOKzbRtN0/A874G+BxzmRR8gHMshUEDAHY71SnBAQGAAAceawAAC
      jjWHpkHG/RYDzefE8uENUcp0SjKVpNvukC8WaDdajBSdlbksU0dC8iyyuRS3y03ObK3TqlWQ
      kgXGvTbLK4tMVJuE5DKcqMSzs2QT8jd6ki8arqVz4/Y+Z05v3U0ZCWDrKm44hjHqoDgSkm+j
      K2OKiyu0Wl2W5rIYfoR+fY+F9S0wJjT6GqmwSyQ7h6GOmZudodloASFKCy/u7M8dDgXFv/PL
      f6A0v0qrUSGEhSjH6Y50JDlMPptD0BQWSxnszDLVy59gRROkRAFsm9NvvMJn733E8tZJor7F
      zvZNQskiUjiDEHZB7RJPl3Bsh9deO/+MT/to88Gv3iWRL2KoIyIhkWvVEcu5ELaq0fFjfP+V
      LbbL+ySjKVKyxcUbdZbmZllYL9AbRYhZTSZugoX5PNvbu8iREJLroodk1vIx9no62ViY1954
      /bdefziqHBoCpaNReuMx88srhMNxouhMdIfi3AL5bBLLVGh3hii9KooQZSYeATmKaSrcuvgp
      tpxiZXmVG9dvsXRiC300JJUQ6HV7xCIy+gseXfRNUZotUGs0kRM5ouEws8Uco/GYaCLD2soi
      N65do1AsAi43blU5d/oEI8PC1Q2GgyY3d1usnzzBqLlHIlcgIrhEUinUYQ/dk7AN/Vmf4jfG
      Y6dBfVtHccOHVhV9z6HdGTI/X/zSjWnjHpaUDoZAT4GpopBKHt6302o2D2IIvuxt3PdoNrvH
      bAgUEHAMORKzQHfeohjw/HPUkg0cCQNwXfeFz07woqDrR8t/OEK7wXze+ZufEcsvEkZHU3UW
      lhYYD8Zo2hgxe4Lp3jW2Xj9PudIi7OnML5+gtrfN/PJJppMpWFM8KcJoNGXr9El6XY1vvX72
      vjZc/v7nPyc1t4rojFEUh+JMCtOR6Lb3efmVN/j00g3WSxk0y6HdG7NxYpG9SpOTayV0R6Td
      rJPNpNEsn2LUJbF0nuXivbG50qvw7sc3WV4uMZyo+H6IXDqM44i0GhXeeOMNblwp84Pf++43
      f4mfIEavzF9/ss2ZpRK13hQpIhGNx4lj02tU2Xr7e3zywQVOzKewQ1GGnR5bpza4df06xdIi
      IVmmXq6Rn01jWAIZYUJ2401aNz/DcqG4ssXG8uzd9v7xnb8mXVjC1CdoisnSQp6B6mKNR+RP
      bnD78kVeOrVOa6SDMWVpfYPG3vbReAIccLBff6IZDCcTkjGZbqfDO7/8gGw2Sb+9z3hiEkvE
      mUxVYrEI1b2bpIuLbF/4hPTsErbjYqsj1lYW0d0wjv7FtCM+g04TRbcYTRUikkirXud6uUki
      LnHpswsIokQsIjHRLGJhn6vXb7K6MMsnV2usLBQQQhFU3SDu2aSyGQzz8JDAMTWarQ6ObeII
      YUxlQLPe4Ha9Qyoh8uHHV4mJR98tcy2VaqMLroEVimKMezTqVcrNAVIsyWe/eJdIMkJUFhnU
      dmgrNv3hCFeMMp5OWZ5JIkTjqLoFjkYhm8B0RGzH5sSps3TrtUPttZt1DMtholhEJJdOq857
      F7ZJRmRa+zdQLY9EPMp02KfW7tFqd7Ed92g4wY7jYFkmg34fzbAIiR7KaEQiN0NECjEYDAhH
      Y8hiDDFsMZpaJEMuXiSJPuwwMzdHszPAUDVOrK+xX22wujLHzm6D02dOId0XxF7br6KZDiHB
      ZjRSyeWzhMQQquMhOhaJWJTxaEA4nkIZDCiWFqg2WhTiEiYiuulTmkky1FwizhhTyrBUzCFG
      4uQzSYxJl/7UQtdUbM9nPBwzO1dE9H0sQcQzDQrxJMWVpd94XZ5H7sQPWNMOzYmLp0+ZWqCN
      B+TmF4hjYRLBMVTiCZlRd0BqrsSwUUEMRTB8gbBnI8Vi2LZPIRtHtQR8pY0byzLq9FlfX2Sg
      Cbx6Zv1uu5XKDrbl4/sOw+GImeIMISnMaGAQiXmEY3E8dYIdSiCaY3whRHug3IsHUJSnm+jp
      63AnkdXXeR/VdKqQSj298D7fc1B1m2Ti8VFyvw3hcPiR8cq6rj/XjqamacTjX+81qr7noOk2
      iUdcS3UyIZpKE3oCq3RH6Algfe0Le1Q4ylFYR63vDwTFf3DpBgvZGNW+zupskubIwBr32Dhz
      mls3y2ysznNjt0a+kGWqmvz4dx7trCm9Fnu9AUsLazTr+5TyKXQhAq7JeDAmkkwRD7uE5CTD
      wRhBFInK4PhhJt0GMysnWZx9MITvm8SxdC5e3WZ9Icel7SprSyUanSFvv/Ualz/5kNmVLUb7
      24RnZqnv7HDuze+TDul8eGmXUi7CVLMwLZOFlQ2WSw9PL2KbKpdv7HFqbYG95oDVxd+0AOXx
      j+/8Ay+dP8uHn1xmdWOD/XKFTDxCPD+PPqgzt7JO+cY1ovEUw8mY17/7I4qpRy9AXr34KamZ
      RdCG5FfXqWzvUZjJYipjwhEJKZJmODHJp10a+2Nm5nJMFY1kMkSra/Ot105/jav8zXP7xhX6
      qnvYCY4kMoQFh25fJSq6uJ5HKpUhGpPZvfQhA9Ph/Q+vc/ZklhuVLpPfkB/TMS0c10Udtdgv
      VxnooE4HTPpNCstbzCUlulOXRmUf6fOsDbFYFMt2mJmZY/YZ//gBJDlGLpNkPNbY2FjE9SRm
      Z4uImPS6E2q717lw5QaKJTJXWiCfivDBe+/T6bSIJ1MU5+cJSyL1euORbYQjCbKpOIlMnvhj
      slfcQySVitOqNNg8tUK9PSIUiZFMxuh1OuzXqzRuXyI0s0F97yqqMsWwH7+OYlkmjuvQ6jbZ
      L+8jOCbtwRRBjrKwdILa3g5yWMe0fUzLJR6P4zkmublZirkvvyvgWWMaBpquHX4CqKM+um6y
      trrKUDGZjIckCgmEeIrEyiaJRoX5l0+xV2nyvVfWGUwfH/cbSSWJKBpCOMUf/OSHdNoDcrk5
      +pMC09YO0YUlChkRPxklGZPpDBRc10WWZVLpOCKgaxq26yCFns2MrW2qtBoNVtbWqNd75JIy
      miXQ7kRZO1EilJjhpbPnMQUBy8ww7HX4zo/+iEGvQ7teIZotEhZDrG1sPbINS5/SbDSQJIlG
      o00ql+exgwjPRlNN0qsLNKp15rJJVFMiFo+QIcpS8SU8OYPWr/HK2z+m2W6RjT8+CVgymSIW
      hq2XvgvOlJC0wGDQRRah2Rkyt7hEXBKIFApM+yq24yBKMmFRJpMNHSTzVXQs709DdQwAABpv
      SURBVGhsn8tms9iS8/SC4p9kvK3runcN4zjgeR75/IOZI+DACX6SCQd833+icb+6rhOLff2J
      gG+KQ0Hxvu/S7vTJp6IH+8RlB4MIg8Y+2fkVLGXE6voae3tVNk6uUW+0WFpceOCgd4Pi1Qm1
      VpfS4jKy4NAdKuRSMaRIAtcx6Hb6LCwv0WvWkOJZUhERX4piGdqhmRDHcRAE4dgYwONWvWOx
      GLFYjE67RaFYZG9nj+Wlecq1DrGQw8QUKWZk5HSRabfO7NIJBt0W8/MLh2IH7mAYBp5nU97Z
      I5Mvksyk6NTrzC3Mo+sOYUlgOuoTzxTxLYWBYrG8MIeiqAj4xBNRLEckKh+khrFt+0h9T4fG
      FbaucfXmdWJCCE+AM2e3uPLpZb778hofX/qYeHGRd//Xf8trb5zg3Y9GtPtD/tlDDOAO0XiK
      eGTCZDzE1HWycYndukIiPMBSh9iRNPOez3A4QNRddFlAkKKMu3WI5Ti7eeLusXRdf6b7gSaD
      DhcvXyc3M4MQjnFua50bVy+wtHaKG1cvs3nuZW5e+IiXv/0D6revorphIr5OPJOnVW9SXFxl
      benxzu2o2+Ti1W3e/v4PyD22pMe1KxdYmZ1HcR0+vOlj9Xb57g9/zO6v3mPYB8H4DC+5wl7l
      H9gut/iv/6t/TlR8VP6iELlcGkefsjceM1+cobZ3k44iUypEGPb6rKXyjIdDhhODXAz2Bxb5
      iMOg7yDEFlieO5hitm0bVVW/yiV+6ljahItXb3Dy9MtovSqqFzka06ABAU+LI7QVIiDgyRMY
      QMCxJjCAgGNNYAABx5rAAAKONYEBBBxrAgMIONYEBhBwrLkv4Y/PZx+9R2JmiWTYx3QcMtk8
      jVYX0dVJZmcp37rCyZNrtAYWk36bVCGD60n4msKp81t89sl1vv/7P2D/+mUmqkmv22N18xS6
      7ZH0JkxNiGbnOLO++AxP+eizf/s6zYnN1toCylTBESOI1hTB82gZAjnJQkwUGPcaSNhoGgx1
      k5e25pm6GczubZKls2TDGtd2GkRDFrFUnuFU41tnVnj/SplMTOb1N1574TPDHdoKMdFN1GaT
      pu8QcQ1uXfkYITbD0Imybrkk4zK//NsP+eGf/hjFsDANg5Bvk0omcB0TOZulVa6gqCrpuIyW
      zWE5Mo414Pb+baL5dQR/AAQG8HVodvrYQohPLl9jMZviUqXFiYUc3dvbCIubdMdthOg+C7kN
      VLUBUoRcNEIin6G7b6FqNjMhnU5/RKYwgzJq400VErEIV6/fZNibkF8+miGZX5ZDWyGG3SYj
      A2ZyKSaDHhHR5tN9ne+8dLAnp9Ooks+n2amNETyTtdUVLF9k2KwgRRNMFZ2XXn2Z/ZtXkVIF
      PEMjlYxQ6ym8cnaDfqNKz5KDJ8DXxDE1buzss7y8SMg16Coutd1rnH/pdXxRJOzbjA2fTmOP
      sBCiuLiCqqjEJIeR5mBpCosnTiEYI+p9hflcnHAsyd7eLptnX0F0NG7e2j0WT4BgL1DAsSZw
      ggOONUfCAILMcEcHTdOedRe+FEciM9zDcoP6nsPVK1dYOXkK17botRsU50uExBDj0ZjMzCzj
      fgfBNZGSMxijDsWlNZrVCiury3R7AyajMWtrSzQ6Y0qFBCYR1H4DUY4TiiaZzT0YmKhPB9yq
      dNhcW8T2PZrNHvNzMwi+x3SqMjdXoDuYMO73WF0/Qa3WZG15nlp7RDElozseU90hFxNwwymw
      VTLZHNvbO2SzGWbnFwg/iXwfzwjXdem1agw0j2I+heQ7dBWHmXQc13NRNZ1MXMYNp9DGfQr5
      NI2eQlwwGVkimWgYUXBwpSSuOiBXWmE6HDA/fziWotOoMLFCFLIJRNdkqDrksxk0ZUgolsNR
      xswulmi1OkRDHkQz9Gt7pOeW8S0NTZkwv7x2NHyAh6VFcY0JH1y+gTVW0CwNxw2ztZzmV9c7
      nC0m8fNZbl3f5sfffoUbu1VUZYKl6qydPkurXuXVt35Af+8q2z2Nk7MJMvkCEyfMclbm6k6D
      uCzx9ttvPtCXneufMpxaTAYqCjbFuWWUbhkxWmBSu8XqmVdo9XvMx3waYwt9OsaRsqwvplEt
      gddfOcOH731EOBknjIfg6Jz91ve58qt3KK6dwBAyvLp1dCcJptMpV69cwtJNNNEn4bnMrp1m
      +5N/oLjxJhc/+RVvn19FE0pcuXSRzTNrRDxojbq89fYPqJX32Dq5zPsff0Imncd1XHTd4id/
      +OND7bz/3q8wdRND9InYNguL8/zyFx/w+utb1LUE6u3rvPqjN7l6q85cKo7v6NQ7I37vd96k
      PnTJSlM+uXD1aAyBHsXNyxeIZLKEwnFycY/tWpdiJsbEFBi0axRL8xiGheNJbK4tMTM3T6tW
      QxIl9HGDi+UeK4UEzd4EQ51Q3t/nZz/9OctrJ/AfFdPs2ly5VSaVCFOYX6Kxcw1XTiFYKoX5
      BcrVFsmwh+P6ZGcWyaVTFLMx2v0xIVHg0vvvEErN4BsKpuMz6PXY36/h4eH4AqZ+9Id6tjah
      MxjhOj7LKytcvniRfHGeybDHSj5CW/XptjrIso9jW7QnCi+dPsXHH30EgsDf/uynLKxuMu63
      EUIS7VaNyn6VTqfPnZRghjKkN5rgOT4rK8vsXr/E/Pws3f4YW+2TyM0xmihooyGGPsESIpxa
      m+ejTy6Bb/PX//AxWxvrR/cJ8HWwtDG1nsb6Sumhn5vqkHrfZH1l/om0d4dGeYfk3Arp2MMz
      NNR2b5NZWDv0QpKjxtdNjHXr5k02tk7xkPDlJ4LvOdy6XeHU1kmAp5cV4knieR6O4xypYOuv
      Szqdfqj+pLNCPGmOWlaIQ0+A5zUz3FFJjbhz6xoLa6fZu3WNbCZBd2zx8vlNbly+SDxTZDpV
      OLm2wH5zwKmNNfZ3b9Iamry0tUx9MMWaTtk6ew5d/U130ec3M9zzkhrRUsdcuHaLM+dfZdyu
      UO1OKCZlpo7E6kwCQ06Tkx+SHXo8GYMvAD7pdJrhcIgYCpGMhDCI4psasiwwmNpEwyK5XPaR
      nXBMExcPRBnT0IjJMrbnguciRZMItomNj+C6eCGZRFRmOpmQSKWwTZNwNIrIwSzQ8/yEetLI
      svzI5Lh3UKZjBF8kJIewvBCepeL5B9/HeDwim4gxNn1spQ+hGKlsloj0aJfPNA1c1yckeviC
      jGXohCMyoiAQichoEwVflpEEF5ARfQtbCBOTBUzTJxo9GNZpmvZcJ+/9IkfCBwgIeFoc6Vmg
      gICvS2AAAceawAACjjWBAQQcawIDCDjWBAYQcKwJDCDgWHPfphOfnZvXcMMpttZXDhVqNZvM
      zc9x+dMPmF1ap9fpMVU05ueyGK6ErUxYW1/i+o0Kb7z9GuXrVyCaol+vsXxyHc0WSIk6Y9Ui
      nptnafbRi2cBv5lRt8Gtao83Xn2J0H2bZrRhFzuWwx5U0cUsvco1SifW6XVHTFWN+UIK049g
      qX1Wl5a4vlfnrTdeZef6ZcRogka9w+bmMqYjE/XHDFWPVGGBxeKzX9l9WtyXFQJavQGplMBf
      /fu/RHB1pHCY7tQjksySjt8gIbhc/st/zx/8i39O/6NP2W8PiAoCyYhMOJGg12qwu5dHkkKM
      mjsI6Vk6fQvHnXDh6kfMrL5MRnUCA/ia3NyukMik+MUv/p6YCFfqE1ZyIRxVo0uc/+KPvk31
      5h5mOM3f/fQf+ZN/+hMuXrhGvWMihUIkoxLhiIxhmFQqFUIhkdrNy+SXVhj6ccxujZ0rvyZ7
      8odkjdssFl971qf81LhvJdjn9o2rqJ5MMZ9m3G0R8lQ+Klt8743TyCEYdxtEZZm+7mNaNqVC
      BtMXUbp14rkZlInOG2+9xqUPf02utEynus/88hKVRp/vfescnVaH1tDgtZce/b6sgN/MsFPn
      yk6DlZVFIq5BfWzRrlxnc+MsYiJJ2J7SHHvI1pBYMoVmi5iWzVwhgeWHGDVrRBMpTF/ijdde
      4sKHv2JmfpFatcXq6hy11oRvv75BozWmPdR4/aXNZ33KT40vvRXC930UVSWV/PIvnTbUKaFY
      kvDT2usa8BB8pspX+740RSGSSBASXtzvK9gLFHCsOZazQK7rHqkdi0ed5zmhQWAAXxFNmeI+
      wYen8gJv97Ys62vV91wHVdWfUG/AUBVs7+C7O7qxd08Cc8z/+Zd/w1JpDnU4QnNha2WOve6E
      iKEQnyvh+gJ6t4EbksiV1lG7uyyfPMd40OGtt94+dLj965/y4Y0yc7kcQ0UnmZ8j7Jl4nkNr
      7zalzS0K+SI3rm8Tl102z73KlY/e4/U3X6enhnj93Is73Qjwy7/7Gf2JSywXI2qZzKxsMW7t
      4kpxtNGEzfMvcfWTDzh3/hSXb+yRCMtIuSI52ePkS288cLx3/uanjDSIZaKETYP5E6fpV28R
      jUaZuFE2FjN8crnG0lyCdm9IPJGgtLzGdHjvuzuWPsCdl3iLeIymKp7nIQgi40GPmWKBVl+l
      lE9iuS4hOYqlKgg49KYOiZAF0QyZeIxU+rBjaWgKhmmDIBCSJLrdAamoANEsESx0yyVfKDAc
      DNAmfaLZIoNGjbmlFeLJFDH5xbwfOY6DJElMxmMc10EQRWTBY2SANekwt7KOMZkw1Cxspc/M
      /ALReJpRt85YsVhaKpF5SIjo/ceTfAfFkdCHLbIzJWxLxRckWu0eyytLJGWBRruHH4pQzKZJ
      pQ9uNsfSAAIC7nAsfYCAgDsEBhBwrAkMIOBYExhAwLEmMICAY01gAAHHmsAAAo41v3VAzPz8
      PJcvXOTMa68S8j3ee/cdljdeZrk0Q3W/xvLKEvgezXYXbdTFCiU5s7n2W3Wi16jQm5oYtkvY
      VsnMLTIYTChmwnSnLue3Vvjs088ozMzSHuvMJiGzsEln9zKCnGZp/SSJcGDLAV+eewthvs+v
      fv0uqVSB/crtBwJiMokIS9kUS1snkMIpPvv0AxYySa7crqPpYxZncpRHFufWV5n0qsyunObm
      xQ+Iz8zjWRZhwQXfozZ2OX9ikUlvFzu+wI0Llzj7xrd489QS13ZrEBIRPQk5DCulAjuNIXMz
      GXrNGq2xxWI6wexKjoEi8I//4S/4/h/+KXI4wan1h2d6Dgh4HF8qIKZRvk1ufonS4iq9Tp1C
      IsKl3SYL2RhTzcSTIhRzmYMngBhDdjW2a21KC8tIjkI0lWM4UZE9g0g8xszCGjvXrhGSBORo
      BF+MErImJPOz7O2VSSViRFN5ttaKvP/+RVZWFmmPdLJhHTs2z3JWpD+cImUWWH6Bw/YCnh7P
      xVYIz7EwbJ94LPKl6z4v2YgDjibPhQEEBDwrAs8x4FgTGEDAsSYwgIBjTWAAAceawAACjjWB
      ATwGQ1NwvCc3SWZoKrb7iPcPBzwT7kuN6PPO3/01C+tnUAYt0pkMUkhgr9ZDwKZQLFG78REz
      a69y7txpLn78a2RJYNJuEFt7FclxiAkqpY1XuPDLf4cWnmUpJzExZdZWihimx6hbJVdYxPZN
      fFNAdV1CgsuMZHOxZfHq6WXs6YiRJXH7+ie88cbbIIbo1GsQzfDqmXlulhUiIYuQZzPu99AT
      s8zEfZTuiOGojTy7xmwigSWA7Ogsb52jfusz9up9TNNhc2udqR8habTRwvOcXcnwt794n1Q6
      QiSWZaoq/M4bZ/nZLy+wsVoiERHoDxUS6RT9kUk6JRETPVTDI5vLolkWvm5y6pWX2Ll8Acex
      qWthCjGbTDjBdu02G2trXNqpc3JlATma4dXzQWa854VDTwDft/nwo8/wJJmrn7zP1cufsV9r
      MHWimMaU+YVlFGVyUNjzQArhux6eOSEcTfLrX/wdFy5dx4kV+eMffZtxr4HvuLz38adcuHyZ
      UNjn0qfX8D2fxs4Nfv7uhwBk5pZQ2nUa1duMVYtPr1xnpjDDZx+9x065jGtpDDsTdGBv5xbT
      qcKv332HcqvHoNVBMU181yWZySF6Lns3L/Pp5Rts37xKf6Jw+fJ1SqVZEAQc26JRr3H56jbZ
      hMCtG1expRgiAp7voY37XN+pgmvgAJrlIHsmO/tVHNcHBAbdOu1Wi51KB9tWuXHlIpPplGan
      w3Bo8sr5M4iuxX5vyMm1FfbKlYNA+UgS31a/2W844LE8diHM04e0zRil7ONf2fmk2N3eZmVj
      E+k5ycS3d3ubpfWNJ5bKUR21GZgRlueC5MDPC8FKcMCxJnCCA441gQEEHGueaCqyOxnA7oyq
      BEHA9/27/z5O+ybqmrqComi0BxNObZ4kJAr02zUGqsdCMUV7oJKKgCPGmPZbzC2vk05EcS2d
      oWKTjouolo8kiNiGgpxIoSgq8bCA5fo0mm02T50mHgk/F+f7uLoBBzxRH+DO1uT7L7jruoRC
      od+oTSYT0un0V6r7rNo9inWD7eOHebJDIN+nWtlDM21s2z5oQBSoVvbQTRvbdu5q+5U9dOue
      hu+xX97DuE8TBZ9KuXygOe4hzbTvab7r3NWczzUBj3K5jHVfOcF3KZcrWLaN43if17XvaXcW
      qTznEdo+tnNPc22TcuVAc13/3vEq1QPt80U037Ee0BxLf0DzbIPyfg3bsfk8fSmudZ/2+a3K
      NlTK+3Vs2+bO7csxNcrVw5ptalRqjQPta361LypP2ABcRDlCs7ZPfzACQPBcRDlKo1ahPxwf
      lHNtQnKMRvWe5rsWoUiMRrXMYHSQKtx3TELRL2i2QSgSpbZfZjg+mFP3bJ1QNEZ9v8xooh2U
      szSkaJzafZpnaUjRGLVqmdH0IN22a6pIkQi1aoXx1LhPi1KtVpgoB7ntHUMhHIlQrVaYqgfp
      vm1jSjgss1/dZ6rdr0ns16oo2sFNwNKnhCWJSnUfzTgwblObEpZC7NdqdzVdmxIWBfbrdXTz
      Pk2ASr2BaR0YsqZOkQWPSqOBZR9YiqoqyL5LpdnC+ty4FUUh7FpUWu3P1zACvsgTd4Lr5duI
      kTjgo2kqhmlRL98mFE2A56FpKqZpUd070Py7ms3+3g5SNIHvuQeaZbO/e5twLIHvfq7ZDvt7
      u8ixxEHeeE3Fsm0qu7vI8QSea6OqB+UquzvI8fh95RzKu7tEYnE856CcZTuU98pEYjHczzXb
      OdCisRiuY93V9soVotEYjn2gObbDXmWfWDSKY5uoqoZtO5T3q0QjkXuaY7NXrRGNRLCtA82x
      bcrVOtGIjG2ZaJ9rlXqTqBy+q9m2RaXRIhqWsEwDTdNwbItKo01ECmHep+23OkRC4l3NtU2q
      nT4RUcA0dDRNC54EX+CJ+gCaphGLxb5y3Xg8HtR9ynV1Xf/KdV9EgoWwgGNNsA4QcKwJDCDg
      WBMYQMCx5kulRrzw8QcsbZ5nJpvgsw/eIzW7wsaJpcc2UK3ts7x0cLxxr8WNSpt8QiQUKzAd
      dVkuzbBTH/DmK2e5fOkzktkCjWaPtcUCQiyPM24Qimex/TBri0XAY9DtMVHGiHKGhdIs0iPM
      ePvmNUoLC2iay2TaYzDWiIcFnFCUuCSydSrYl3/cuS8gBlq9AamUwF/9+798SGrEbTKyR7Wy
      Szx+llq1RtHU+H//zV/w5u99i7insP3pDkZhkYI4IJnMUu+reJLE+ZUyDUXgj757HkPX6dsC
      4kRFlsNEIzK6YVKu1pAE/v/27vW1bSuM4/hXtiTLsuSrHNuxnaTNZb2wNt0FOvZibOzf3F+x
      N4O9aCljLW3Wdm2pSdq1SS+Jb/FVlmRbl70ZGxljsK1rWnw+rwQCIZ3DDx4OR8/hYPcx+UoJ
      N6bjtQ65d/MaaqrOpe0y3/zwI5V0knJWZ+SO8aYZnu43CB2P0eAYRU2TKJRZTkW86AyZuSMK
      WZ12a0rPPkYKJRwnICe7OJrGJIBU/BRHXzh1/6g1Yq/5klSuRGm5Rq95RDGvcfunZ6STHsna
      FupogCcbMO+TUBNIssrMj5CiAHcWUdAiDocz0kmQNZOjg+ekDJNQSXLl4ia3bt6ktrLCy9dd
      qksGxzZ8uFnm+dN9As1A0QySzIhLMPWn+L5GJE0IwjimrjIZe/iyStGQed1zKBXSlKw8O3d2
      KC3XaLY66FqcMK6DZ3Pho49R3pF/D4TT8V4sg0ZRiD1xMY3Um3oi47Et9sQI70cABOH/IlaB
      hIUmAiAsNBEAYaGJAAgLTQRAWGgiAMJCEwEQFpoIgLDQRACEhXaiQczwuEnPiThTP3nmrj0e
      kzIMHj+4S766TsXKMBqOkeIxTMMAYGzbv1//WX/QJybFCaOAXDb3x40o4uX+U0yrQrfdoV4p
      4AYyg/YrCstrKKHLq/aIjAaKYTF1xpSWLI6aHWKEFMsVYhJMhn2myCixCD+IyGUzf/ke/syl
      3Z9gaApSPM5k0CVSdLqtNrXqEvFklrSu/pfxFN4zJw7Kvn7jGpXyKs3DA+LMiKk6nYGLrCrk
      szk2ljSansb6mToP7uyg6Ar2oAeSzOv+hKruE2pZkJIo/oRATSLLEUoixcGTBhsXLhG6Q+b+
      nPHI5tLVr3Gauzx62MCq1UhbVcK5gxZ6dOyAWrXC3pM9UmqCSAoJA4m1aoFH+x2WsibzSZvu
      eI6VXWKmyuhygDqPaI9sEnqCODGOez2++vIL7u3cxh4PKH1wFa+1j5JKMh11SWdMZuh4tkPS
      yHDl8rlTnhLhbTpRAqU1je5wSLm+gqLoaLiMXJ9iaZl8zqQ1Dtiq5QEJOTYnkhRK1VXwPbKZ
      DGauyGqtxNr6FnNJQgp9LGuJnKmzefYsAEauiJkAZzTEnQc09p6xeW6L4dBFDV06nWN2f3nB
      mfUNJu0XJNNFFDkkmTIZDQfYs4ho5hEChWKJWr1CMJtjGAaGYcBvfQ8SqTRWNoseD7A9nyiK
      sMp1VipFzJSCM/WxrCK2M6V9dEipWn7LQy+8C/52M1w0d7EDBVN7s630Qn9KY/c55y+c4992
      Hm8dHf1eAr0Jdr9LmEiLEmjBiN2gwkITq0DCQhMBEBaa6JN96gJ+3rlLq98nV6zyyfZF5k6f
      6zduUaxUGQ9HWNk0w2mAistoMufTzz7HSMS5f+8+l7ev8P1337JS3yBrGTzcO8SMBtQ2L/Ow
      0UCPZqyd32a1WjrtD30n/Qr5ylDtL3je/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='Question2' width='164'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Question2a' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Question2b' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29SZAcWZrf9/M19i0jMnKJ3JDYC7VXd1VPs1dOc0ZDs2mjaBxyjNIcpBN1
      km7SUaabZCLNZKYbJZNRJpKScSiJ1Axnequu6equraurCoWlsCVyj313j/Dw9emQAApIIIEE
      kIkt/GcGi4SHx/PPl7+/9733vu9JQghBSMiYIj9tA0JCniahAELGGvVpGxASsh8C3+b8xevk
      8xk0bBw5i+2bJD2LtiXR6/d49fU3iOvKQ5UbCiDkuUAENp9/9BEzJ0+SVAWet4UTFWSHXVYa
      MrmZIvIjtGfCJlDI84Ek8/pbr9GsNjC7LfoDm4VCBltNkkknUCUIgkcoNuwFChlnbjWBDMPg
      di2MRiOi0ehTMSok5ElxSwCpVOquL9Pp9BM1JiTkSRP6ACFjTSiAkLEmFEDIWBMKIGSsCQUQ
      MtaEAggZa+6aCiGEIAgCgiDA87ynYVNIyBNjlwB8LMsjHo8gyzKqGk4VCnmx2fWEK8TjDzeb
      LiTkeSb0AULGmlAAIWNNKICQsSYUQMhYEwogZKwJBRAy1oQCCBlrQgGEjDWhAELGmlAAIWNN
      KICQsSYUQMhYEwogZKwJBRAy1oQCCBlrQgGEjDWhAELGmlAAIWNNKICQsSYUQMhYE6ZFCRlr
      wrQoIWNNmBYlZKwJfYCQsSYUQMhYM8aNfMG1i18SxAocnUnxqw8/JZudoN2sU5iepVZv8YPv
      f5ftlYv4sQmGjU0m5o5SXbvKiVfewmpvce7SKktLC1i+wkvLM1xbq3Hy+NLTPrGQh2CMBQC5
      wiSr5Q7KkRKnl2bwM4tEFMGRU6cJ3C9QFInV1VVqxkXiskyl3mbh2BGuXFnjG6+foFLvUN1a
      58pWC9k6Qs0UoQCeM8a3CSQEv/rlu2iRCLVanVrfYTan4Qod2WoTzc7QqteZX1hgqpBHyAqy
      qnH1wnkUJaDVaqAlJjiyuMBUcZJ+32B7q/y0zyrkIdlzneB+vz8Wq0QKf0i7D/lc/K7vWq0W
      +Xz+ru39TotoegJdkZ6EiSGHyNgL4EEEloX57i9J/uj3kSORp21OyB589eWnlHsev/+tM/zF
      X71HMhXHNG1e/9Y7/OoX7/KP//RPOPe7D3EjWaRBG1MoBEZnjJtA+8Q3DPr/318QDAZP25SQ
      +5BMpVk+skQQ+HieD0oUPTD5D//+37OxXaM3tKlWa2xtlkllMhxdPsnM9NR4O8H7QSsWib31
      JgTB0zYl5D7UKhWkuIXVj1CczDJZmqUiAv7s736bbrNOZf06Z155hc2GQbVSJScnyU/OjnMT
      SLC5cpkgVmBxJs/Z3/2Wo2deo9VoMFNIcXm9wcunjlHfXmXrL9/jyMk5vNfeYeOrL5k/9ToZ
      3eXSWp25fIxr5R7zExFEvMDc1MTTPrGQPRBC4Po+mqIgSTv+21g3gWKpFNubG+A0uXhlg/MX
      LlNrNLlw8TLOoMXA9tGicfrJCGd/8h+4cvUKX200SSaiXDr/JV999ht+9tGXpNJJzn75Jb96
      /9dP+5RC7oNp2/x37/6EqtG/tW18BSAEv/zpz0hmszRrVQJZwjR6fHX+LOZgyPp2A8Po8eGv
      3kWZnaNeq7FV77NYUPnsiwsUS0skUjlePrnMF59/wYkTxynco8co5NlBUxSiikpC129tG98m
      0I1p3wQWtY7PVD6JJMsEQYAsywghqNVqTE1NIYDWP/1nFP6r/xJkmV67QSRbJKqAJMHNKyhJ
      0q2qNeTZo24a/NNfv8d/8c63WcrtvKzGtwaQJGRFQdaSzBQzyDfahcqNT1mWmZmZwfZGvHv5
      pwSpOH63i6wo5CaniWsysiwjSTufO3+HD/+zTM00WMxkaZjmrW3jK4B90hl2+Nef/wtGxRzu
      +sbTNifkMagafd6YKdEYhALYN6qsIoQgcuwozurq0zYn5DFoD4dMJaO0hl+P6YQCeAB1s0ZU
      jVKLuri12tM2J+QRCYKA/mjIP//gf8QYDbnp+oYCeACbnTW+vfR9tuwGwrIQYZz0c4nledju
      kHJ/k57VYuS5QCiAB7LV3eKl6Tco97dQMhm8dvtpmxTyCHSGA2y3QzqaxfH6tIZDIMwK8UDa
      gy4/v17Ft1soC+8wWl1FmghHe583tntdHK/N95b+Np9WNmgYfaYTyTArxP3wfI/6sIsec4kJ
      BW9hGi5cRX3nnadtWshDUh8M8Pwe31z6j/h0+ysawyGqqu5uAinE4+GU35u0By28IMJkPIkv
      YrTjArdafdpmhTwkQgjaQxPEiNlsiZgq0RzudIWGPsB9qBlVhJTkzdkSspJhw64RDAYErvu0
      TQt5CPwgwBiZpKMJdFUnGY3SHRpAKID7stFdI6pN8FJxmkRkkq3uJmo+j99oPG3TQh4Cw7ax
      3D4z6VkAplJTtIdNHM8LBXA/yt1tcvEp8okkqWiOulFHW1rC2QhHhJ8nGgMTc1RjKb8MwEJu
      EWPUoDUchAK4H1WjSTE5gSLLZGNJTNtFLMziXA9HhJ8nqkYf3+9SyswDUMrMY3sdOsNhKIC9
      cH2XmtmjmMoCMJvOMPCgm5TDEeHnjPrAxA9MCskCAFPpGVyvS9nshwLYi/agjUeU2VQGgLl0
      Bk3NU3aaiOEwdISfE4QQtAcG+XiKiBYFIK7HyUYj1E0zFMBe1I0KspxmKpkEoJBMkogUWW+v
      oRaLoSP8nOB4Hu1hk0Ly62AlRVbIRuO0Bt1QAHux1l4lGSmQTyQASOoREpEJKv0q+vJy6Ag/
      J/TsET2rzkJu6Y7ts5kSW72tUAB7Ue1XKSRniKgasBPtVcrkqZptlCOLONfXnq6BIfuiavQZ
      Og3mswt3bJ/PLWA5YQ2wJ5V+k5lUHvm2KK+ZdJqhK9FLyHjNsAn0PFA3TVRpxHRm9o7tC9kl
      bK8dCuBeuL5LYzhg+oYDfJO5dBZZyVJz2gjbDh3h54Byv0tMFSQjyTu2F9NTSCLsBr0nTbOB
      J3RmUncmBZhMJonpk6x31lAnJ0NH+BlHCMF2v04pM31XvHZEjZCJaKEA7kWtX0VWMkwlU3ds
      T+gRcvEiq+01tMVFnDBG+Jlm4Di0BzVmdzV/YKcnaCY1EQrgXmx0V8lEi2SisTu2y5LEQnaK
      ar+JtnwkjBF+xulaQwZOgyMTR+/5/Ux6OhTAvSj3Kkwmp9CUuxcMLKWz9GyfYVLDq4dNoGeZ
      stFHBAal7Nw9v5/PLYYCuBc1o8dsOn/PPD+ldAYhJWl6fYTrIkJH+JmlavRJahLZeO6e389l
      FkIB7MbzPRrDATO7eoBuUkymiEeKrLZXUCcLeKEj/MxSMdoUExkU+d5L/xbTxVAAu2maDQJi
      TKfunRYyoetMJmdZv+kIr60/YQtD9oPn+1T6deazdzvAN9HVSCiA3VT62yhKlqlU6p7fy7LM
      fHaazW4d/egyztrakzUwZF8Ytk1nWGUpf2TPfWRJDgWwm63uBvn4FAlN33Of+UyOzsjBy6Zw
      a/UnaF3IfmkMDByvy+KuOUC7CdOi7GKrW6GYPANC7Hn+M8k0HjFqoxYJx8G1baR79BiFPD3K
      /T4R2SUdzd73OQ7TouyibvZ5fWHivuc+nc4Q1ybZ6m/y8lQR0Wqhze7d1gx58lTNPhOxCIlo
      4r77hWlRbsPzPZqWddcI8G6Sus5kqsR6exV9aQl3PXSEnyWEEFT6LeazMw/cN/QBbqNh1O/b
      A3QTWZaZy0yx1WvcGBFeezIGhuwLx/Oom1UWc/MP3DcUwG1UjTKqkmUymXzgvnOZHGWji1SY
      wK2GMcLPEt3RCGPUYGli+YH7hgK4jc3uBsXkDNEbQTD3Yy6TxRcJWk4f4dgI338CFobsh5rZ
      RxYWxVTxgfuGAriNSq/JdLp4RxDMXkwl00S0HFu9DbTp6TBl4jNE1eiTiarEI/d3gCEUwB3U
      Bn1mU9l9rfW1MyI8z3p7Df3IkXBE+BmibPSYTeeQpQc/3qEAbuAHPs2hxcw+V8ZUZJn57BTr
      nTL68hGca9cO2cKQ/SCEoNyrsXCfKRC3EwrgBk2jQUD0gV2gtzOXyVEx+iiTk2GyrGeEoevQ
      sRrMZx/cAwShAG6x3dskqk0wEX9wu/EmpXQWO9AxfAtcN4wRfgZoDgZYTpu5fXSBQiiAW2x0
      1plOle4ZBLMX06kUipJhu7eFVirhlSuHaGHIfqgaBilNJh2993T23YQCuEG532YuU9hXD9BN
      EnqEmdQCK60V9KNHscMQyafOdr/DbCqFquxvGk8ogBtUDZO5zL0jh/ZCkWUWJ2ZYaW4SOXUS
      +9KlQ7IuZL9s95os5Kb3vX8oAMB2bVqjIcWHcIBvMpfOUTMHKNksfrd7CNaF7BfH8yj3yyzk
      7h0DfC9CAQCVfhlFzjC9RxDM/ZhKpRn6MoY7RFIUgtHoECwM2Q/dkcXQ6bCQW9z3b0IBAJXe
      NtnYNEn94WfCzqbSKHKGre76ToRYODP0qVE3DRKaRDq2PwcYQgEAsNHdZC47s68R4N3ENI3p
      9Bxr7TX0MEb4qVI1DAqxGJry4LlcNxl7AQghaJgDplKZRxKALMuUMpNs9hroR5Zxrl8/BCtD
      9sN2v8tsev9vfwgFAOxkEJ59QAzA/ZhL56gaJkomjT8YHKBlIftFCMF2r8pirvRQvxt7ATie
      Q2s0oph4cAzAXsymM7RHNnbgIisKgWUdoIUh+2HkunSGDRYnlh7qd2MvgO3eFpqa2TMNyn4o
      pTPIcobt7ibawgLO5uYBWhiyH+oDEwmHiUT+wTvfxtgLoNLbppicu7USzKMQ0zSmU6WdqdFL
      S2HS3KdA3TTIRTUi6sP15I19WpT1zhYz6WX8x4zoKmUm2ehc5W8df5PBxx+PxbV7lqj0e8yk
      Mg99H8c6LYoQgtZwxLGp9GOf61xmgo/X+ui5HMFg8MJfu2eNqtnnWLbw0Nd97NOiNAbDu1aC
      eRRK6Qx1c0CACEeEnzCBCNjqbbOQW3jwzrsYax/A9mzaI/uhgmD2opTOEEgJav0K+sJCOCL8
      BOlbI4Z2n6n01EP/dqwFUOltE9GyTD5GF+hNYppGMTnHRmd9Zx3hMFfQE6MxNElHFOJ6/KF/
      O9YC2O5uMZueQz2AvJ7yjRjhjW51Z05Q2BP0xKgaBrOpvdcBuB9jLYCy0WQ2XTiw8krpGzHC
      6TR+v48Q4sDKDtmbmtGnlJl4pN+OrQCEENSMwWMNgO2mlM5Q6RsASKqGcJwDKztkb7b6TaZS
      2Uf67fgKAEFzOGD6ABzgm5QyGUaBSnfYRV8MHeEngRf4VPuVfeUBvRdjKwDbtena3oH0AN0k
      rulMJkust6/v5ApaWTmwskPuTWswIKpAJhbWAA9FubdNXM+Siz18z8FeyLLMQnZmJ1nW0aM4
      q2ENcNg0BibFZPqRHGAYYwFU+lVKmTlk+WAvwWw6Q80coGYyoSP8BCj3+0wmYo8UywFjLYAW
      M6mHywKxH0rpDFXDBEDS1NARPmQqRo9S+tHv41gKQAhBzRw8UhaIB1FKZ2mORljOEH1xEfvK
      1QM/RsgOQgjK/TpLE4/mAMMYC6A1tB4rCmwvEpEIk4kbU6PDIPlDZeS6DG2TfPLRxgBgTAVg
      eyN6jncoNYAsSSzmSmx2qzvrh62thX7AIVEfmORiEXRl7yVtH8RYCqDSq5KK5EhFo4dSfimT
      oTEYouZyeL0ehAI4FKpGn2Iy8cgOMIypAMr9KqXM4S1rOpvOsNFrI4RA1nSC4fDQjjXO1Acm
      C5nHm8oypgJoM516uPQZD8NcOktjYOEH/o4fsLZ2aMcaZ+qmwWz60dv/MIYCEELQGFgHEgSz
      F8lIhHR0knJvO5wafYj4/oDZ7P4T4d6LsRNAIAJaw+GBToG4F0sTJba6VfSlRdyNjUM91rgi
      4xN9yCD4u8sYMyzHwnD8Q+kBuokkSZTSWcpGDzWXwx8MEEFwaMcbR1zPI6Lqjz2Sf8+sEDf/
      BS/gTav2a+RieXRFOdTzm06muFDp4fs+cjSKZ5oo+1iAO2R/VIw+U8n0Y9/DXfIJcN0Xe8Hn
      Sr/ObObhY0cfltl0mpo5QCDQFxdx18Nm0EFSN40DuY931QCStDOrUZKkA58o9ixQNbrMpJcO
      /dxy8QSyEqc77JI4cgRnbY34Ky8f6jHHiappciyffez7KO/+r6a9uPlshBA0h6NDmQKxG0mS
      WMzNsdbZRFtaxA3TJR4oVaNHSjuAWO4DsOW5IRABzeGAyUPuAbrJXCZL1TBQ02l800Q8Zva5
      kB2EELQHHaYOIJ57rAQwdIYMPcgfYBDM/SilM1QMAyEESjwejggfEAPHJqrpjxwEcztjJYBq
      v0ohkUd7QmkLd4Jjhggh0BbmccLxgAOhZhpMJuKPNQfoJuMlAKPDbLr4xI43EU9geT4De7Az
      Inw9zBV0EFT6fUrpR4sB3s1YCaBi9Jh+Ag7wTXamRs+z2Sujzc+HjvABUTMN5h4xD9BuxkYA
      O2uBDZ9ID9DtzGVyO45wJhM6wgfAThRYh9nHCIO8nbERgB/4dEYjConEEz3uXObrGGE5FiMI
      1xB7LAIhcDyHiHYwWczHRgCWa+EGEtkn1AN0k5lUhq1ei0AEO8uohiPCj0XXGlJIJA/EAYYx
      EkCt32AyWUB5wqPb+USCgetju3aYNPcAKBt9SpmDy+YxNgKoGB1K6YdbQO0gkCWJmfQMdaOJ
      NjeHu11+4ja8SFSNg+sBgjESQM3sH+oU6Psxn52gbPR2ska3WwRhrqBHQghB1TAONJ/r2Aig
      bh7MUkiPwlw6w2avA0GAu7XF6Nz5p2LHi4AxGpKNH9y08hd35ttteL5HdzQiH3+yPUA3mUln
      +NV1E2SZmf/hv0d+wj1RLwqO5xFRtQNzgGFMBDBwhoB6aGlQbh2nVebXn6+wUEqzUekzk9EY
      iDhvv3mai5/+js/Tk2yvNTjz8kkuX7nGd77/Qyor59ju+aSVISI6waC5zfSx1zi5NHOotj6P
      1Acm0+mDTWYwFk2ghtFmMpVHPsA3x724cmUFWZhsbrfo9vt4coSI7CHLKotzSyAcAlkgazE8
      e4AvYOBKZGMyRNIE/RoTiycZtKuHaufzSs00KIUCeHiq5uMlUN0vJ06dACGTy2XJpFJEJA9P
      1rl29RJ2pcVmb0AmptLrtIjEUqxdv0oiImO6Moo7QJ+Yo7t5lcxk6dBtfR6p9HsUD2BBw9sZ
      iyZQ1eyzNLF46MdJ5Kb4O3/wh7u2BrhuwI//fortXpUfvPSNnc2vvozrumiaxok79j916HY+
      j+wEMx18LMcLXwMIIWgdch6g+7MTZTebTlMx7lwvQNO0p2TT80cgBJ7vox3Aip6388ILwA98
      erZNNhZ7qnbk4wkM28UPwslwj0LPGhxKJ8Y906IEQUAQBHied+AHfNL0RyaKpBKRlad+PlE1
      Qt8akI6G3aAPy2a3TTGRPPB7uEsAPpblEY9HkGUZ9QlFTh0mbavPZHLimTiX+VyB2qDHRPLw
      8pK+qNQHJnPZ/IHfx11NIIV4/GCmmT4rVI0+MwfcdfaozKWzlG+sIxyyf3ZW9DGYTh68H/fC
      +wAVo3voeUD3y0w6Tc0MBfCwBELQHg7IHIIf90ILQAhBx3KeGQHk4wmaw0HoCD8kljMipkUO
      ZSDzhRaAH/j0bZts9On2AN1ElqBu1Pm/z/4FtmuHSyftk6rRoZA4nJfYCy0A0x4SVXUiz0h/
      uyIr/Nmb36c5yvHf/uz/4M+/+Gvag9bTNuuZp2qazB6SH/f0u0YOkdagTyF5cMETl859Rmay
      RKtnktU81ppDvvP2G1y98AUiNkFr6xozi0eptw3efuNlGttrnF+tcWQqRWukEPN7qJkS/+Rb
      36VqvMb7ayv8s/d/wnIuwQ+PvsqRwpEDs/VFQQjBSqvKa+kJ/s9/8b+RWzxKIpZiMh7QkfOc
      ycO7n11lcSrN5fUq33jlOE1D5p03T/LZR79iuzHA90wWj7/JlY9+zg//039C8bbhhBe6Bqia
      xoFFD43MFqvXr+PpGXAtqtUKtVoNcDn75UUs2yEZ12kbDlF1p2lTq1Wo1+s0ehayYzIMVIx2
      FUmSmEln+JNX3uC//uHfZ2HiFP/y7Fn+p1/9OZ9tnA19BHYe/Hq/xr/69H/n8/IlYnGVYjZN
      LJ5idfU60VgcPIl+v4s9bHLuaoOTyyUmZuZJRBRAEE9kiCiweOI06+c/pmWOaHX6dxznha4B
      qkafl6eXDqSskTViNBqxef0K69cuMTdbRJNl1reqLMzP0m5WUBybiN/h8vUVJFR8SUWXZQJ3
      SMtViXg99OzcrTIlSSIVifKj4yf53vJRvqyU+WDjOn999d/wzvwi3156nZj+bPgvT4ogCLjW
      uMLPrrzPpWaTYuoUP37p9yglsjSKC5xaLJKKJ/DcEVOxPk5qkWOLLsdOHuf6epV+dZN21+Tc
      ha/AdTj1xtuYjU1+9Pf+EbJjoiTu7EqVxB6eWL/fJ51+WvNnDoZ//tF7/INX3yYXP6xMEIJ+
      3ySdvttBM/p9kqnUQwdvBEKw0Wnz6/UVVpprvFyc4AdH39xjMWiXD977GwI9jTEw+darJ3j3
      g0/40R/8Mc2Nr/jsyhYpyUJO5tGdHtLEMb710izvfXKehYkI5683+OZrx+iM4I0zJx/xGhwM
      tmvz+dYX/HLlLB1b4ZWZl3mrtMCxwiS6cnjv6SdUA/j84q9/wksvneY3H33My29/n49++XP+
      k//sz/j43Z9gEqUYk1hrmExEfMgu8e0z8/zyt+dYnIhy7nqduck4HUvmj370ffbzTLm+y8Dz
      SEYOc2BPuufDD5B6xJeHLEksTeRZzE3QGr7EJ5vr/M8fvsd8OsoPjp7hSH7hNlHJxJJZjr/8
      KuvXrqCoCidOvUoqrmIlEkSjGpLjIsk6UzPzLL50mogmMzc1wdAacny2wOTSMYZXrjzi+T8+
      nUGXD9e+5JPtVTKxab69/Ld5bWaWTDR2oJFfe/GEBKCwvLyIGwg0Vebzj35Nt9enP3SYn5/n
      Fx+f4/XvvEHx+Axm+Srzp86g6zJzxZ0bdWK2QFeWKWj7Xw5nYI9IaJEDnz34pJAkiUIiyd89
      dYYfHj3B5+Ut/t1XlxHBp/xw+TSvzJ5AxaPf67G1vka1WsH3fZodg7OORTomsbBwhJhvomSm
      ySV0vM4WV42AcrnC6dMnqbUH1K5epNGxbx23Xt5gtdIFq0m8sITT2WIgJXllKcv7H37J3NFj
      rF6+yLe+8z3e/ZsP+bM//TE/+8u/RE3lMFp1SgtHqJdXWXzl+7y0dO/05UIItrp1Plq/xtV2
      kxOTC/zn3/xjSpnsE09b84QE4LK9VSU/t8hkscQrb30Td9Cntr5CIqLw3e9+Fy0ZYSqfoi0t
      EvS2udL32d4uc/r0Saptk9OFGK2Rsq+3P0DD7FFIPN9NuJvENI1vLx7hnflFrjYb/M3qFX5y
      9d9xenKKUy8f43hxnlMnTzy4ICZIF+H40SUA5m64I8u37VGcXaDRMVjbaOL3A47NTbC0eJJk
      JCCuOvQsQTIR4YP336ff62F7MqXSNF+uVDlSzFBu9JnMpJGEe9fRPd/ncqPKh+srSJLCazNz
      /PGZt4k+xW7qZ8YHGNgmIJGIHMxMyfevX0JTo3xrYelAynuWEEJQMfr82/Nn6VkGEcVlMZtj
      MZvhaGGOifjEIy8dVF6/xvmVCi8fnaVlCYzaOvFMjniqQKte5uiROS6vbPH2O29jdFs0Gk1k
      3yJRWKC+foW55eNc+uorXn3rHbKJyI3R+CG/295ko9OmlMnxZmmOyQPM7vY4HLgAhBD4gY8X
      eHi+h+27OJ7LwLYwnQGmM8LxAyzHwXQGDN0RtifY6pUBj1emj1FMJJlOFSimCqSiaXRVf2g7
      /vzL3/Jm6QjL+cdfReRZxfE9ENAbWax12qy0m6y3ywjhsJjNcSQ3wXJhjol4FvUQHcnd+EFA
      azigZhh8sLFCELi8NbvAa6VFIuqzMSh5k0cWQCAC/pcP/yURfR5NiWJ7Lq7vMXBGCCQCARIg
      yxJRNUJE1YlqEWKqRlRViagq+o3PmLLz6fg+NdOgYvSoGk3awzYyLpmIzmQywUwyy2xmkqkb
      woiokT3fIv/rJ+/zD1/95qFngng0PD5+/9c7vTdmj7deOsovfvk+P/jxn9Df+IpPLlznpcUi
      680hxQTImXlemo7ysw9/R2FyDkdAXnepGQF/+Pvfu6NZGIiA9nC4I4hWk9V2GRHYlNJplify
      HMnPUEwV0JTHexCFEHhBgOU6dC2L5nBA1xpSG5g0jC7bhsmJiSjfP3Ka5cLcM7vg4iO/FiQk
      ThdPkEvMkI2n0RUFXVHQZAVNUVBl+ZFO+gw76UCEEDi+T9eyaAwMGoMBFaPH+WubtIafIwmH
      pK4ymYgzlUwznZqglJkhG88hSwqW55HQH77meDIopDIZphZPUN1cJT89x/LJ0xSTOrkjSwxE
      nMUJlWQphV27xgBoNzr83g/e4HcflHFGLaILJaayAp87b6IsyRQSSQqJJN+YWyAQb9AeDtjo
      dlhpN3l/41N836KUTrOUy3G8MH+HICRJ2gmKEgGO7zJyHQa2TXs0wrRdevaInmXRHQ3xfBdF
      EsQjGhldJxXROJmL8vrUAp2hwbeOvI4sPZsP/k32rAEa1S1GgY5sd6kaAa8cm6HWdZktpvjt
      J5/y0uvfpF3ZZGpmknNfrfH2W6/SrKzTGEoooxYTcyfYvHKBU6+/RewAVvO7Hdf36VpD2sMh
      FaNPfWBSM9pU+hVEYKOrErpW5L/5wR8dyDpSB04w4pe/eJ/phUW2Vlc4+cprxOMpWtUtpqby
      6KlJzE6dQj7Hxx98SG4ig56eYuPaVU6dWuby9TLH5yaom4LXzxx/uEMLQdcastHtsNpuc621
      xcgxSOkCwYhsbJbuaIQvFGQU4pE4k4k0+XiCiXicXCxOSteJaSq6qu9ZAw96LXq2hN0tYwZx
      GNRJTi2zOJ3ht59+wZlXzvDVxcvMzxTojCROH1tg9fJ5PD1Jbf06xfllOo0qr//X/c8AAA+a
      SURBVL31NlHt8ES0pwCq5W3qrQ7N8iozR1/D7l7HcPL8rXdO8fGv3iWSL3Hhsy+ZmcuiJWf4
      3juv8//+m3/Fidd/j2GvxbB8ifSZH+AZJt984/ShncDteL5P90Z7eKvX5cenX35mq95nBSHE
      LR+iZw2ZSqXJxuJkIlGi2qNnYev3umxsldm6fonjr32bz3/zU777h/8xulXnFx98giTHiOen
      iHo9Nitd/vTP/pRedYu1cpvjs2lWt6tculbm7e98n6Olw0tqvOfTYfaafHb2HFPTJS6c+4xW
      u8d2eZNapczAslm/vo49MpD0BPXVa6w3WhSLk1y9eo3G9ipqZpqrZz8l8ZBzcYLAx/cDPNfB
      8wMc28YPAoQQ2KPRTtvT83Bsm9HIRgAiCPB8H99zycXivDI5xZu6xGajz/nPP6LTH/GbDz8C
      oFvf4ufv/or1tWv89L3fEDgGH3zyBQD1rcucO3+F937+V1xaq/PJB7/G2f/QwzOMoLK5iuUG
      nP/iM6qVLd59913axohuY5vz5y4z5Y4oqSn0ThM1UIlqCmc//xzHD9hcX2c46PLZ2Yv7PmK/
      VeXTsxeZn5vjwoUvmSvNceH8WarNLpKAaCKF0dgmW5whVyjQazb4m1/8HD2eZLXcZn4ygyQF
      jOyDTyQshMB1PYQQD+cEu6MBhi2YyOxOTiSo1xsUi4+/AF155TzlUZTe5hXkRI6kMsLVC5ya
      1PjN5Rrff+cM//rf/oS/8503+OTLK/zDf/D3uPjZL6h2M8SVFuWaiaSpfOsbr9J1Y5QSBqa8
      QK9+jTNnzrB9/RLnz33K1Jk/wGpvoQsb04PvffubfPTRz4Cj5FNDtHiczz7/ij/88Y9Jak+/
      u+7xEGyc+xArt4TVaONKChllxMzJ1/jyg1+QKC7R3brCUE5QSMUIhMSx6QwNz6VVd1i/dpX8
      VIx0YZnfe/PlfY/F7GbUb2NrKTKx3Q74wT0/+yHwbP7qp+/x2rHZh5sNqkUT93j4AaQDM36m
      tEBEhUR2kogcICkx3njtDEa/jzOo8H/9P+/hj0wS6RSvv/UtJHfAV1c3aDZrKPEif/RHv488
      Mjj/1WWurVzj8ldXWF29yrXLF7h44UscOUGg5hnULmONbPSoRqvdZX3lKiJQGbpD0OMkoxGk
      YMRgaD/Y6GeegI31NVbXK6xevYgejWB4MsLsUlqY5+zZsziugzW0aFbW8WUFy/a4eO4ihtFj
      aLZRImm2Vy4xfIyJqtH0xD0efjjI52c/SIrOwvwsQ8u+uwa4mRal2+0Si8WQZRkhxE51cUP6
      N/+WJIkg2GkjyLJ8629FUfBvLAZ3+/bby9pd7s2y1q99RbnrslRMoCTzrF86TywRJzd3ks7W
      CqdefRXL6KOqCpFYgsuXL3PmpeO0Gx0uXDxPafEIfWPEK2dOIN9WriRJ2JaFGo0i77JRURQM
      wyAej+9p717nvvs67C73QdfhUa7pQZXbaNSZnp65q1xv2MOU4mRvPKzPir17lfuwZQa+xccf
      fErp6IndAvAZDnfSorwIs0FDQh7ErnEAhXj8Gew2DAk5JMI+wpCxJhRAyFgTCiBkrAkFEDLW
      hAIIGWtu9QIZhnFHprLRaPRUDAoJeZLsORXC932UB8TT3j7YcD/2WxbwwPL2U9Z+bTvIsm4O
      IIbXbP9l3T6Q+LTK2jMe4PZZlI7joCoKkqwQBD5CCBRZJhBgjwZIioauKfi+QJYlJBGAoqHI
      0h1lBb6HLySE76HpOo7j4Do2ihbBdUbEEykkBI5toepRROCjKhIBCgiBqiq3yhqYBooWQVMk
      hKwSeO5OQLUE1sghGokQBDs3yx4NQdYg8JBkBdu2SSRTqMqdLUBraCIklaiu7th54/dCgCQJ
      JFnBGVlIqo7vjJAUjVj066wTd1wze4Tt+iQTcVzXRQJUVcELBIosEQgJAhfHE6iSwPYEqeTX
      6VskBN1ej1QigWEOSKVTWIMhkYjKYDgikUqD7+IFIAkfWdXxbAtZjxK4NrKqIwkfZBVd+/o2
      CyEw+j1iiSTWwCQWTyArKiLwCYLgxrJNAnMwJB6NYNkuiUQc6R7nODQNJC2CjEDXNRzXJ/Ac
      VD2KKkO3Z5BIphCBj6Yq+EIm8F30G3Eaux9WIQSDwYB4PI7n+UgEjByPeCzKyBriC4lEVAdF
      A3Hny+ZWWTfKiESjOPYI1xc79gsfy/bQZPCRieoKw5G7twBuFhi4Fl+cvcSxhWmi+Rl6jTrJ
      iMx6pc3R4ydYX10hPzWH5w3Y2GgyNZ1Hw0WoGeZLk3eU1apX6I7A6dUplua4vlklhs/07Czt
      fo+I0kSNRhiaI0pzM1w8f5Hjc9NsOwFJWWJp8euUIKsrV5EiKbIx8LQsze0VctkigRKQSmVp
      N2vUGl1mpifpd5rkJqfZ3txgfnGZ7a11zrz8GpJ65w3YWL2OFajMFFKYNlidKvHMBIFQEfgc
      WZhldX0LSZYRzoDC7NItAey+mZXtDRrtAaePz3Fps0Mh6qOoKp2RiiY5LCwdpby+ShAIfEki
      mcrdIQC3X+XKWpeplEzVEMwWUmysbnL6jddZW7nOmVdfY2NtlXx+gmq9h6zKqMLFQ0WVfBzP
      Q5Y0AknipZNfxwwErsPKyhUSmQnMdpd0LkUkkUe4FkazwtxLbzFqbuEoUZo3Mk0UF5ZJx+5+
      aNdWr+ErCVyzw8LiLOvVHnE9gqIpHJuKcnljyGzewht00HUNNzFNY/USr7/1DTTl7re10azS
      tAImfZsr63WmsnHsQQ8vPklBH1A2YmT1IehZVMljZubrtZRvltVvV2n2PeIaKCpstWyK2Tij
      QQ9ZTyL5IwzLIxVTEb77YCe4Va/iuRaNrollWTiOTTSVJxGPEtMVNF0nomuAxEw+Ta3Zo15v
      0GjW2N24qtXqtJsNsoU8Gxtl8rnUbcepoccTCBGgRaIMO1X8wKXcGpLUwXTunoUlyRK1eotm
      vcb0zDTVShWBRDQawx4YFCZSGKMbzQRZZbqYx7Qc8vk8Ef3e2ldkmVqtTqvZZGJqlla9ggg8
      PD9AIkDVIsgSt5333miyzHqljt1vIyJpPKuHHwTYjockgSTL6JqKJKt31CQ3kRUFRICsqFhG
      HzmmM7ppv6YgyTIRXUG5YZNl9vCEjD0aks3mkNWva+FdFw5Z2vlU9BRm7TqJdJLeyKO8uY0f
      COKxGAKJWEQnuE8Wa1mWmCxOsF7pkIupaHoEiZ1w2Fg8gSxDJJnDHXTo1rfxPJdq695rJARB
      QDQWp1YuYw96GCOHQE+T1CGTzZLNZKjXmzQadRx7dGtO0N1lxJAliWQ6Qy6XRZZAINHrdvGc
      EbbjEgiIRbW9fYCbuI6DqqkMBwN65oiIEqAnMkQ1BU3TcF0XVVXxPBckGce2b61+qGn6HVNn
      HcdBkkAIicD3kRWJXruNHk+RiMfwPQdZ1Rj0u8h6nFQixsiy0GNRRkObROLrNIGtRhU1miIW
      0YGddp3rOGiaQtewSMUjqJqO6wVYZgfUGL4zJJ2bRBL+rWr4drrtBoEcIRmPIu2UesMmHVkS
      SLKKZXaR9AQRVb7vKo9Dcyfv0UQ2jSpL2L5AkwIcXyKiK3g+4I8YOIJUPHpXWYFnU661KE7m
      qTeaFItFer0+qWQSWZbQdZ3RwGDky8iBjRJNois7k71kecc2s99BqDFS8a/jokUQUKuWSU9M
      0ms1yE5OIzyHiKYiFI3Ac9FUhXqzzUQmRde0KORz3Ktl3W7WkPUkiZiG7wXIioxl9neeDxU8
      NAjcmyeE40vEYxFc173n9RcioNlokkxniOgKtu0Tu7G/qki4vgQiAAT9bptkOkd094tDCJqN
      BqlMFk1T8HyBhED4Dl3TJpdJQRAgJEHPsB4sgJCQF5l9B8UPejWqXYirNr2+Sa4wSTQSY3Nj
      nVNLUxhqgdwDEjCsr14lUONEZIEka3SbZfRYEmM4ojCRo9XuMDWZo942SSci2K7g+PHle7bT
      qtsbDF0ZyR9guRLxiMzA8olHZYZWQDKuYFoeyYSOaYxYPrbI2kaN0yeW7yhHCMGFC+dZnp2m
      bPlYrSqZVBoHFSUYYbkShUIO3zIZCZ247EAiTz4uc+XaOgvLx0jGvn6biSDg/MWL5PN5hv02
      sXQWRdZot3sU8jtvxoHt4/sevV6PdC5Ht95i5shRCpm9cyJtrq3QHricWZ7i6rZJVu6xbcVZ
      mkrT7zSxAxVVOGTyBWLxLKnE3gkBzp07x/GFKa7VRwSDOrniAma7zuL8LCvbNXKpBH3L5eSx
      5Xs3oXZx+cI58vk8lpAYmiMmciki+HRciYQmUyjsLzWN8B0uXb5KJJFh2G+TLUyCPcSRIizN
      FTj35SWyk9Mszk3vq7ybWIMOvZaBpUWJeC49o8vM/BGyqfj+B8ICIeFaBp1Ol0xhmlwqxqDX
      pLa9RaVt7FTpD8B1XUDCG/bwlBtVmwwD00QAruehRRLoUkAkEsW1bfaKSHR8wZHFErIWJZ+K
      YFo2tu3gui6yqiAUjVI+TsewGdkOtc11tqt1/F0VnjdosLlept51cLwhQ8vBcZwdexwb23bx
      XBdXyCzNz1CuVilvbjIyu0wtniARvbsZpLPTznVdFySdTmUdSVcZOR7pXJ5Go40IBKdOLdNr
      dxiYwwfGLruOg2M7rK9v02hUmCoWKUxN47ouSiRGNq6iJZKUNzbwg/vHcSY0weWtDnFV4Lke
      iuTSqGyw3XXRJB9Fj+E79l3Xai+S6RRba6v0hi4nji3huS6b5TLV7fKNe74/XMsiW5xFER7p
      hM7aRgXH3QmJ3Alj3HlxPCyB7+IFEtagR7ffITe5QCa505zedxPIGQ3wA4lWt48/Moln8+C6
      ZAt5+s0K1bbNwuIMChDfIxtzrbzJ0JfJpZII4aOpGsl4hL7l4tkWjUaDXD5Pu90hm0nTMyyO
      HzvCyLJAgnjs63L7nQbNnk1CFwxcicl8hsB1EbJKNpOmVSvTHnhMF3Pge1iuIBtX6TkyCV2+
      ZWO/2yWZSdHcriNHJVwiqJ5Fz/IoFnIEroOk6ghnSGfokMtkEYFHNp1iZWWFickpVF0nnYjf
      ulGDwYBWu40SuEjRNHLgkEroeHKGbErHMEx0OeD6RoWZ+Vl0JEauh64qROJJNOXut65hGASu
      g4tMXJFQIipWEEH1R5j9NlagUcimsMw+yYkp4pG9K3ej38McWkSjMTRVQRMefiyD2dym0zXJ
      TkzQ6RrMzU4jyRKJB2TXNgyDQbdNNJ2hVu8wM10g8H1AMDR6yHqMRCKOHkkQuV+GBxGwdn2F
      SDpPKqrRareJ6wqGA0vzUwwt70bX9E4ZsVh8X+GZjj1gZPmoEYVOZ4Az7JKeKJBMZ/n/AeJJ
      Yhna0QTrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Question2c' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
